"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.template = void 0;

var _dotted = _interopRequireDefault(require("@marcopeg/dotted"));

/**
 * Mini mustache-like templating library that operates variable substitution
 * in strings, arrays and objects.
 */
var template = function template(tpl, variables) {
  if (!variables || ['boolean', 'number'].includes(typeof tpl)) {
    return tpl;
  } // work on sttring templates


  if (typeof tpl === 'string') {
    // reference
    var dataValue = variables[tpl];

    if (dataValue !== undefined) {
      return dataValue;
    } // unwrapped template


    try {
      var dottedValue = (0, _dotted["default"])(variables, tpl);

      if (dottedValue !== undefined) {
        return dottedValue;
      }
    } catch (err) {} // wrapped template


    return tpl.replace(/\{\{\{(.+?)\}\}\}/g, function (_, v) {
      return encodeURIComponent((0, _dotted["default"])(variables, v.trim()));
    }).replace(/\{\{(.+?)\}\}/g, function (_, v) {
      return (0, _dotted["default"])(variables, v.trim());
    });
  } // works on array


  if (Array.isArray(tpl)) return tpl.map(function (v) {
    return template(v, variables);
  }); // work on nested objects

  var res = {};
  Object.keys(tpl).forEach(function (key) {
    return res[key] = template(tpl[key], variables);
  });
  return res;
};

exports.template = template;