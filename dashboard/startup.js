"use strict";const shell=require("electron")["shell"],spawn=require("child_process")["spawn"],project=require("@editor/project"),setting=require("@editor/setting"),user=require("@editor/user"),join=require("path")["join"],{readJSONSync,outputJSONSync,existsSync}=require("fs-extra"),createEmptyProject=require("./script/template")["createEmptyProject"],openProject=require("./script/project")["openProject"],{openDashboard,queryDashboardPath,exitApp,goToInstall,warnAlreadyOpened,errorDialog,showMainDialog,t,metrics,app,initI18n,projectMap}=require("./script/util"),psList=require("ps-list");function setOpenHandler(){project.setOpenHandler(async a=>{if(projectMap.get(a))await warnAlreadyOpened();else{const p=join(a,"temp","startup.json");let e={};if(existsSync(p)){const r=readJSONSync(p);if(r&&r.pid){var o=(await psList()).find(e=>e.pid===r.pid);if(o&&/Electron|CocosCreator/.test(o.name||""))return void await warnAlreadyOpened();e=r}}o=join(a,"package.json");if(existsSync(o)){readJSONSync(o);const c=app.getPath("exe"),d=[],l=process.argv.indexOf("--pass-through");o=(()=>{var t=["--inspect-brk","--inspect"];for(let e=0;e<l;++e){const s=process.argv[e];var r,a,o=t.find(e=>s.startsWith(e));if(o)return(a=(a=s.substr(o.length)).startsWith("=")?/^=(.*:)?(\d+)$/g.exec(a):null)?(r=a[1],a=a[2]?parseInt(a[2])+1:void 0,o+"="+(r?r+":"+a:""+a)):o}})();o&&d.push(o),d.push(join(__dirname,"../")),d.push("--project"),d.push(a),0<=l&&d.push(...process.argv.slice(l+1)),setting.dev&&d.push("--dev");let t=null,r=(s(),!1);function s(){t=spawn(c,d,{stdio:[0,1,2,"ipc"]}),projectMap.set(a,t),e.pid=t.pid,user.addChildProcess(t),t.on("message",n),t.on("exit",i),outputJSONSync(p,e,{spaces:2}),app.dock&&app.dock.hide()}async function n(e){if(e.channel&&"open-project"===e.channel){if(e.options.path)return project.open(e.options.path);app.dock&&app.dock.show(),await openProject()}e.channel&&"show-dashboard"===e.channel&&(app.dock&&app.dock.show(),await createEmptyProject()),e.channel&&"editor-restart"===e.channel&&!r&&(r=!0,async function(){if(!t.killed)return new Promise(e=>{t.kill(),t.once("exit",e)}).then(()=>{user.removeChildProcess(t),s(),r=!1})}())}function i(){r||(projectMap.delete(a),user.removeChildProcess(t),exitApp())}}else await errorDialog(t("open_with_error"),a)}})}exports.app=async function(){app.isReady()||(await new Promise(e=>{app.once("ready",e)}),await initI18n(!0),await metrics.init())},exports.validation=async function(e){const t=await queryDashboardPath();return setOpenHandler(),app.on("darwin"===process.platform?"activate":"second-instance",()=>{exports.show(t,e)}),exports.show(t,e)},exports.show=async function(e,t){let r=!0;var a;switch(await showMainDialog(e)){case 0:if(e)return t?await shell.openPath(e):(a=join(__dirname,"../"),a="win32"===process.platform?join(a,"../../CocosCreator.exe"):join(a,"../../MacOS/CocosCreator"),await shell.openExternal("cocos-dashboard://open/"+a),exitApp()),!0;await goToInstall();break;case 1:r=await createEmptyProject();break;case 2:r=await openProject();break;case 3:return exitApp(),""}r||await exports.show(e)};