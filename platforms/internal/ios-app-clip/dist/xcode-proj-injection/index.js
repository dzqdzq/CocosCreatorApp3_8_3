"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,o){void 0===o&&(o=i),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[i]}})}:function(e,t,i,o){e[o=void 0===o?i:o]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&__createBinding(t,e,i);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.XcodeProjModifer=void 0;const xcode=require("xcode"),path=__importStar(require("path")),fs=__importStar(require("fs")),console_1=require("console"),plist=__importStar(require("plist")),CFG={CC_LIB_NAME:"libcocos2d iOS AppClip",PRODUCT_TYPE_APPCLIP:"com.apple.product-type.application.on-demand-install-capable",PRODUCT_TYPE_APP:"com.apple.product-type.application",ENTITLEMENT_NAME:"appclip.entitlements",KEY_PARENT:"com.apple.developer.parent-application-identifiers"};class XcodeProjModifer{constructor(e){if(this.cclibAppClip={},this.appClipTarget={},this._iosTargets=[],this._bundeIds=[],this._valid=!0,!e.refXcodeProject.endsWith(".xcodeproj"))throw new Error("refXcodeProject must end with .xcodeproj");if(!e.inputXcodeProj.endsWith(".xcodeproj"))throw new Error("inputXcodeProj must end with .xcodeproj");if(!fs.existsSync(path.join(e.projectResDir,"ios-app-clip")))throw new Error(e.projectResDir+"/ios-app-clip does not exists");this.refXcodeProject=e.refXcodeProject,this.inputXcodeProj=e.inputXcodeProj,this.doBackup=e.doBackup,this.appName=e.appName,this.cocosRoot=e.cocosRoot,this.projectResDir=e.projectResDir,this.parseInputProject(),this.createGroups(),this.insertCocosEngineProject()&&(this.recordIOSTargets(),this.recordRefBundleID(),this.getCCLibUUID(),this.addAppClipTarget(),this.setupSourceAndResourceFiles(),this.cloneBuildSettingFromTpl(),this.setupDependencyToCCLib(),this.injectAppClip())}get engineProj(){return path.join(this.cocosRoot,"build/cocos2d_libs.xcodeproj")}get refProjDir(){return path.dirname(this.refXcodeProject)}get inputDir(){return path.dirname(this.inputXcodeProj)}get proj(){return this._proj}get templateProj(){return this._templateProj}parseInputProject(){this._proj=xcode.project(path.join(this.inputXcodeProj,"project.pbxproj")).parseSync(),this._templateProj=xcode.project(path.join(this.refXcodeProject,"project.pbxproj")).parseSync(),this.cocosProj=xcode.project(path.join(this.cocosRoot,"build/cocos2d_libs.xcodeproj/project.pbxproj")).parseSync()}createGroups(){mkdirP(path.join(this.inputDir,"CocosCreator")),this.groupHash=this.proj.pbxCreateGroup("CocosCreator","CocosCreator"),this.groupClass=this.proj.pbxCreateGroup("Classes","Classes"),this.groupOldIOS=this.proj.pbxCreateGroup("ios","ios"),this.groupResource=this.proj.pbxCreateGroup("Resources"),this.groupAppClip=this.proj.pbxCreateGroup("appclip","appclip"),this.groupFrameworks=this.proj.pbxCreateGroup("Frameworks");var e=this.mainGroupUUID;this.proj.addToPbxGroup(this.groupHash,e),this.proj.addToPbxGroup(this.groupClass,this.groupHash),this.proj.addToPbxGroup(this.groupOldIOS,this.groupHash),this.proj.addToPbxGroup(this.groupResource,this.groupHash),this.proj.addToPbxGroup(this.groupAppClip,this.groupHash),this.proj.addToPbxGroup(this.groupFrameworks,this.groupHash)}get mainGroupUUID(){return this.proj.pbxProjectSection()[this.proj.hash.project.rootObject].mainGroup}insertCocosEngineProject(){return this._valid=this._valid&&this.proj.loadAnotherXcodeProj(this.engineProj,this.groupHash,{sourceTree:'"<absolute>"'}),this._valid}getCCLibUUID(){var e=this.proj.findPBXGroupKeyAndType({name:/cocos2d_libs\.xcodeproj/},"PBXFileReference");if(!e)throw new Error("can not find cocos2d_libs.xcodeproj in "+this.refXcodeProject);var t=this.cocosProj.findPBXGroupKeyAndType({name:new RegExp(""+CFG.CC_LIB_NAME)},"PBXNativeTarget");if(!t)throw new Error(`can not find ${CFG.CC_LIB_NAME}.a in `+this.engineProj);var i=this.proj.generateUuid(),e={isa:"PBXContainerItemProxy",containerPortal:e,containerPortal_comment:"cocos2d_libs.xcodeproj",proxyType:2,remoteGlobalIDString:t,remoteInfo:`"${CFG.CC_LIB_NAME}.a"`},t=this.proj.pbxContainerItemProxySection();t[i]=e,t[i+"_comment"]="PBXContainerItemProxy",this.cclibAppClip.itemProxyUUID=i,this._addCCLibToBuildFileSection()}_addCCLibToBuildFileSection(){var e=`"${CFG.CC_LIB_NAME}.a"`,t=this.proj.findPBXGroupKeyAndType({path:e},"PBXReferenceProxy");if(!t)throw new Error(`Can not find ${e} in PBXReferenceProxy`);e={uuid:this.proj.generateUuid(),fileRef:t,basename:CFG.CC_LIB_NAME+".a",group:"Frameworks"};this.proj.addToPbxBuildFileSection(e)}addAppClipTarget(){this.appClipTarget=this.proj.addTarget(this.appName,"appclip","CocosCreator/appclip"),this.proj.addTargetDependency(this.appClipTarget.uuid,[this.cclibAppClip.itemProxyUUID])}setupSourceAndResourceFiles(){var e={target:this.appClipTarget.uuid},t=(copyFileOrDir(path.join(this.refProjDir,"ios_appclip"),path.join(this.inputDir,"CocosCreator/appclip")),copyFileOrDir(path.join(this.refProjDir,"ios"),path.join(this.inputDir,"CocosCreator/ios")),copyFileOrDir(path.join(this.refProjDir,"../Classes"),path.join(this.inputDir,"CocosCreator/Classes")),(e,t,i)=>{e.endsWith(".h")||e.endsWith(".hpp")?this.proj.addHeaderFileForce(e,t,i):this.proj.addSourceFileForce(e,t,i)});t("jsb_module_register.cpp",e,this.groupClass),t("AppDelegate.cpp",e,this.groupClass),t("AppDelegate.h",e,this.groupClass),t("AppController.h",e,this.groupOldIOS),t("AppController.mm",e,this.groupOldIOS),t("RootViewController.h",e,this.groupOldIOS),t("RootViewController.mm",e,this.groupOldIOS),t("SDKWrapper.m",e,this.groupOldIOS),t("SDKWrapper.h",e,this.groupOldIOS),t("service/SDKDelegate.h",e,this.groupOldIOS),t("main.m",e,this.groupOldIOS),this.proj.addHeaderFileForce("Info.plist",e,this.groupAppClip);{const i=path.join(this.inputDir,"CocosCreator/appclip");t=fs.readdirSync(i).filter(e=>e.endsWith(".entitlements"));1===t.length&&t[0]!==CFG.ENTITLEMENT_NAME?(fs.renameSync(i+"/"+t[0],i+"/"+CFG.ENTITLEMENT_NAME),this.updateEntitlements(path.join(i,CFG.ENTITLEMENT_NAME))):(console.log(`[notice] multiple entitlements ${t}, remove others!`),fs.readdirSync(i).filter(e=>e.endsWith(".entitlements")).filter(e=>e!==CFG.ENTITLEMENT_NAME).map(e=>path.join(i,e)).forEach(e=>fs.unlinkSync(e))),fs.existsSync(path.join(i,"appclip.entitlements"))&&this.proj.addFileForce("appclip.entitlements",this.groupAppClip,e)}this.proj.addResourceFileForce(path.join(this.projectResDir,"ios-app-clip"),{target:this.appClipTarget.uuid},this.groupResource),this.proj.addResourceFileForce(path.join(this.projectResDir,"project.json"),{target:this.appClipTarget.uuid},this.groupResource),this.proj.addResourceFileForce("Base.lproj/Localizable.strings",{target:this.appClipTarget.uuid,sourceTree:'"<group>"'},this.groupOldIOS),this.proj.addResourceFileForce("Base.lproj/LaunchScreen.storyboard",{target:this.appClipTarget.uuid,sourceTree:'"<group>"'},this.groupOldIOS),this.proj.addResourceFileForce("LaunchScreenBackground.png",{target:this.appClipTarget.uuid,sourceTree:'"<group>"'},this.groupOldIOS)}updateEntitlements(e){var t,i=this.getRefBundleId();i&&fs.existsSync(e)&&(t=plist.parse(fs.readFileSync(e).toString("utf8")))[CFG.KEY_PARENT]&&0<t[CFG.KEY_PARENT].length&&(t[CFG.KEY_PARENT][0]="$(AppIdentifierPrefix)"+removeQuotes(i),fs.writeFileSync(e,plist.build(t)))}recordIOSTargets(){var e=this.proj.pbxNativeTargetSection(),t=[],i=this.proj.hash.project.objects.XCConfigurationList,o=this.proj.pbxXCBuildConfigurationSection(),r=this.proj.pbxProjectSection(),s={},p={};for(const d in r)if(!d.endsWith("_comment")){var n=r[d];if(s[d]=[],p[d]=!1,n.buildConfigurationList)for(const h of i[n.buildConfigurationList].buildConfigurations)if("iphoneos"===o[h.value].buildSettings.SDKROOT){p[d]=!0;break}if(p[d])for(const f of n.targets){var a=e[f.value];a&&0<=a.productType.indexOf(CFG.PRODUCT_TYPE_APP)&&t.push({target:e[f.value],uuid:f.value})}else n.targets&&0<n.targets.length&&(s[d]=s[d].concat(n.targets.map(e=>e.value)))}for(const g in s)for(const C of s[g]){var l=e[C];if(l&&!(l.productType.indexOf(CFG.PRODUCT_TYPE_APP)<0))for(const j of i[l.buildConfigurationList].buildConfigurations)"iphoneos"!==o[j.value].buildSettings.SDKROOT&&!p[g]||t.push({target:l,uuid:C})}var u={};for(const m of t)u[m.uuid]=m.target;t.length=0;for(const b in u)t.push({uuid:b,target:u[b]});for(let e=t.length-1;0<=e;e--){var c=t[e];for(const P of c.target.buildPhases)-1<P.comment.indexOf("Embed App Clips")&&(console.warn(`[warning] skip target ${c.target.name} which already contains an Appclip in `+this.injectAppClip),t.splice(e,1))}if(0===t.length)throw new Error("No iOS targets found in "+this.inputXcodeProj);this._iosTargets=t}injectAppClip(){var e=this.proj.pbxBuildFileSection(),t=this.proj.pbxFileReferenceSection(),i=this.proj.generateUuid(),t=(t[i]={isa:"PBXFileReference",explicitFileType:"wrapper.application",includeInIndex:0,path:this.appName+".app",sourceTree:"BUILT_PRODUCTS_DIR"},t[i+"_comment"]=this.appName+".app",this.proj.hash.project.objects.PBXGroup[this.groupFrameworks].children.push({value:i,comment:this.appName+".app"}),this.proj.generateUuid()),e=(e[t]={isa:"PBXBuildFile",fileRef:i,fileRef_comment:this.appName+".app",settings:{ATTRIBUTES:["RemoveHeadersOnCopy"]}},e[t+"_comment"]=this.appName+".app in Embed App Clips",i=t,this._iosTargets);if(1!==e.length)throw 1<e.length?new Error(`[error] ${e.length} iOS target found!`):new Error("[error] NO iOS target found!");t=this.proj.pbxEmbedAppClipsBuildPhaseObj(e[0].uuid);t.dstPath='"$(CONTENTS_FOLDER_PATH)/AppClips"',t.dstSubfolderSpec=16,t.name='"Embed App Clips"',t.files.push({value:i,comment:this.appName+".app in Embed App Clips"})}recordRefBundleID(){if(1===this._iosTargets.length){var e=this._iosTargets[0],t=this.proj.pbxXCBuildConfigurationSection();for(const o of this.proj.pbxXCConfigurationList()[e.target.buildConfigurationList].buildConfigurations){var i=t[o.value];i.buildSettings.PRODUCT_BUNDLE_IDENTIFIER&&this._bundeIds.push({name:i.name,bundleId:i.buildSettings.PRODUCT_BUNDLE_IDENTIFIER})}}}getRefBundleId(e){e=this.queryRefBundleId(e);return null===e?null:e.match(/[${}()]/)?(console.log("warning: incorrect buildId "+e),null):e}queryRefBundleId(e){if(0===this._bundeIds.length)return null;if(1!==this._bundeIds.length&&e)for(const t of this._bundeIds)if(t.name===e)return t.bundleId;return this._bundeIds[0].bundleId}cloneBuildSettingFromTpl(){const t=["$(SRCROOT)/CocosCreator","$(SRCROOT)/CocosCreator/Classes","$(SRCROOT)/CocosCreator/ios","$(SRCROOT)/CocosCreator/ios/service"],i="CocosCreator/appclip/"+CFG.ENTITLEMENT_NAME;var e=this.templateProj.pbxNativeTargetSection(),o={};{const m=this.templateProj.pbxXCBuildConfigurationSection();for(const I in e)if(!I.endsWith("_comment")&&-1<e[I].productType.indexOf(CFG.PRODUCT_TYPE_APPCLIP)){var r=I,s=e[r],p=s.buildConfigurationList;for(const v of this.templateProj.pbxXCConfigurationList()[p].buildConfigurations){var n=m[v.value];let e=n.buildSettings.USER_HEADER_SEARCH_PATHS;e=removeQuotes(e);for(const A of t)e+=" "+A;n.buildSettings.USER_HEADER_SEARCH_PATHS='"'+e+'"',n.buildSettings.CODE_SIGN_ENTITLEMENTS='"'+i+'"',n.buildSettings.INFOPLIST_FILE='"$(SRCROOT)/CocosCreator/appclip/Info.plist"',n.buildSettings.ONLY_ACTIVE_ARCH="YES";var a=this.getRefBundleId(n.name);a&&(n.buildSettings.PRODUCT_BUNDLE_IDENTIFIER=a),o[n.name]=n.buildSettings}var p=s.buildPhases,l=this.templateProj.pbxFrameworksBuildPhaseObj(r),u=this.templateProj.pbxFileReferenceSection(),c=this.templateProj.pbxBuildFileSection(),d=this.groupFrameworks;for(const B of p)if("Frameworks"===B.comment){var h,f,g=[];for(const D of l.files)0<=D.comment.split(" in ")[0].indexOf("iOS AppClip")||(f=u[c[D.value].fileRef],null===(h=this.proj.addFile(f.path,d,f))?console.error("[error] failed to add framework "+path.basename(f.path)):(f=this.proj.generateUuid(),h.uuid=f,this.proj.addToPbxBuildFileSection(h),g.push(h)));var C=this.proj.pbxFrameworksBuildPhaseSection(),j=this.proj.generateUuid(),w={isa:"PBXFrameworksBuildPhase",buildActionMask:2147483647,files:g.map(e=>({value:e.uuid,comment:e.basename+" in Frameworks"})),runOnlyForDeploymentPostprocessing:0};C[j]=w,C[j+"_comment"]="Frameworks",this.proj.pbxNativeTargetSection()[this.appClipTarget.uuid].buildPhases.push({value:j,comment:"Frameworks"})}break}}const m=this.proj.pbxXCBuildConfigurationSection();var X=this._iosTargets[0],b={},P=[];for(const y of this.proj.pbxXCConfigurationList()[X.target.buildConfigurationList].buildConfigurations){var _=m[y.value];b[_.name]=y.value,P.push(_.name)}var S=e=>{var t;for(const i of["LIBRARY_SEARCH_PATHS","USER_HEADER_SEARCH_PATHS"])"string"==typeof e[i]&&(t=e[i].replace(/\$\(SRCROOT\)\/\.\.\/\.\.\/cocos2d-x/g,this.cocosRoot),e[i]=t)},T=this.proj.pbxXCConfigurationList()[this.appClipTarget.pbxNativeTarget.buildConfigurationList];for(let e=T.buildConfigurations.length-1;0<=e;e--){var E,R=T.buildConfigurations[e],O=m[R.value];O.name in b?(E=selectBuildConfigurationName(o,O.name,"Release"),Object.assign(O.buildSettings,E),S(O.buildSettings),delete b[O.name]):(delete m[R.value],T.buildConfigurations.splice(e,1))}for(const N in b){var F={name:N,isa:"XCBuildConfiguration",buildSettings:selectBuildConfigurationName(o,N,"Release")},x=this.proj.generateUuid();T.buildConfigurations.push({value:x,comment:N}),S(F.buildSettings),m[x]=F,m[x+"_comment"]=N}P.includes(T.defaultConfigurationName)||(T.defaultConfigurationName=P[0])}setupDependencyToCCLib(){var e=CFG.CC_LIB_NAME+".a",t=this.proj.pbxBuildFileSection();let i=null;for(const o in t)if(o.endsWith("_comment")&&-1<t[o].indexOf(e)){i=o.substring(0,o.length-"_comment".length);break}if(!i)throw new Error(`cant not find ${e} in PBXBuildFileSection`);this.proj.buildPhaseObject("PBXFrameworksBuildPhase","Frameworks",this.appClipTarget.uuid).files.push({value:i,comment:e+" in Frameworks"})}chooseBackname(){var e=path.basename(this.inputXcodeProj),t=path.dirname(this.inputXcodeProj),i=new Date,i="XcodeProjBackup/"+fillZeros(i.getFullYear(),4)+fillZeros(i.getMonth()+1,2)+fillZeros(i.getDate(),2)+`_${fillZeros(i.getHours(),2)}${fillZeros(i.getMinutes(),2)}.`+fillZeros(i.getMilliseconds(),2);return mkdirP(path.join(t,i)),path.join(t,i,e)}write(){var e;if(this._valid)return this.doBackup&&(e=this.chooseBackname(),copyFileOrDir(this.inputXcodeProj,e),console.log("backup to "+e)),fs.writeFileSync(path.join(this.inputXcodeProj,"project.pbxproj"),this.proj.writeSync({omitEmptyValues:!0})),this._valid;throw new Error("[warning] invalidate target!")}}function mkdirP(e){if(!path.isAbsolute(e))throw new Error(`src must be an absolute path, ${e} got`);var t=[];let i=e;for(;!fs.existsSync(i);)t.push(i),i=path.dirname(i);for(;0<t.length;)fs.mkdirSync(t[t.length-1]),t.length=t.length-1}function copyFileOrDir(t,i){if(!path.isAbsolute(t))throw new Error(`src must be an absolute path, ${t} got`);if(!path.isAbsolute(i))throw new Error(`dst must be an absolute, ${i} got`);var e=fs.statSync(t);if(e.isFile())fs.copyFileSync(t,i);else if(e.isDirectory()){fs.existsSync(i)||fs.mkdirSync(i);for(const o of fs.readdirSync(t).filter(e=>!e.startsWith(".")).map(e=>({from:path.join(t,e),to:path.join(i,e)})))copyFileOrDir(o.from,o.to)}}function fillZeros(e,t){e="00000000000"+e;return console_1.assert(t<e.length),e.substr(e.length-t)}function removeQuotes(e){for(;e.startsWith('"')&&e.endsWith('"')&&1<e.length;)e=e.substr(1,e.length-2);return e}function selectBuildConfigurationName(e,t,i){if(t in e)return e[t];for(const o in e)if(-1<t.indexOf(o))return e[o];return e[i]}exports.XcodeProjModifer=XcodeProjModifer;