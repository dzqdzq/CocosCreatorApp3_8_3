"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.outputSignatureMd5WithCode=exports.outputSignatureMd5WithPath=exports.buildCocos=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path"),crypto_1=require("crypto"),ccbuild_1=require("@cocos/ccbuild");async function buildCocos(t){var e=(0,path_1.join)(t,"bin/.cache/editor-cache/oppo-mini-game");const o=(0,path_1.join)(e,"cocos");var t={platform:"OPPO",engine:t,out:o,moduleFormat:"system",compress:!0,split:!0,nativeCodeBundleMode:"asmjs",mode:"BUILD",flags:{DEBUG:!1,SERVER_MODE:!1}},a=(0,path_1.join)(e,"options.json");if((0,fs_extra_1.existsSync)(a)){var i=(0,fs_extra_1.readJSONSync)(a);if(require("lodash").isEqual(i,t))return e}(0,fs_extra_1.emptyDirSync)(e);const r=await(0,ccbuild_1.buildEngine)(t),u={};return await Promise.all(Object.keys(r.exports).map(async t=>{var e=await outputSignatureMd5WithPath((0,path_1.join)(o,r.exports[t]));u[r.exports[t]]=e})),await(0,fs_extra_1.writeJSONSync)((0,path_1.join)(e,"meta.json"),Object.assign(r,{md5Map:u}),{spaces:2}),(0,fs_extra_1.outputJSONSync)(a,t,{spaces:4}),e}async function outputSignatureMd5WithPath(t){return outputSignatureMd5WithCode((0,fs_extra_1.readFileSync)(t))}async function outputSignatureMd5WithCode(t){return(0,crypto_1.createHash)("md5").update(t).digest("hex")}exports.buildCocos=buildCocos,exports.outputSignatureMd5WithPath=outputSignatureMd5WithPath,exports.outputSignatureMd5WithCode=outputSignatureMd5WithCode;