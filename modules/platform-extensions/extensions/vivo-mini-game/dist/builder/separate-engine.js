"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.outputSignatureMd5WithCode=exports.outputSignatureMd5WithPath=exports.buildCocos=void 0;const ccbuild_1=require("@cocos/ccbuild"),fs_extra_1=require("fs-extra"),path_1=require("path"),crypto_1=require("crypto");async function buildCocos(t){var t=t||(Editor?(0,path_1.join)(Editor.App.path,"../resources/3d/engine"):(0,path_1.join)(__dirname,"../../../../../../../../resources/3d/engine")),e=(0,path_1.join)(t,"bin/.cache/editor-cache/vivo-mini-game");const o=(0,path_1.join)(e,"cocos");var t={platform:"VIVO",engine:t,out:o,moduleFormat:"system",compress:!0,split:!0,mode:"BUILD",nativeCodeBundleMode:"asmjs",flags:{DEBUG:!1,SERVER_MODE:!1}},i=(0,path_1.join)(e,"options.json");if((0,fs_extra_1.existsSync)(i)){var a=(0,fs_extra_1.readJSONSync)(i);if(require("lodash").isEqual(a,t))return e}(0,fs_extra_1.emptyDirSync)(e);const r=await(0,ccbuild_1.buildEngine)(t),s={};return await Promise.all(Object.keys(r.exports).map(async t=>{var e=await outputSignatureMd5WithPath((0,path_1.join)(o,r.exports[t]));s[r.exports[t]]=e})),await(0,fs_extra_1.writeJSONSync)((0,path_1.join)(e,"meta.json"),Object.assign(r,{md5Map:s}),{spaces:2}),(0,fs_extra_1.outputJSONSync)(i,t,{spaces:4}),e}async function outputSignatureMd5WithPath(t){return outputSignatureMd5WithCode((0,fs_extra_1.readFileSync)(t))}async function outputSignatureMd5WithCode(t){return(0,crypto_1.createHash)("md5").update(t).digest("hex")}exports.buildCocos=buildCocos,exports.outputSignatureMd5WithPath=outputSignatureMd5WithPath,exports.outputSignatureMd5WithCode=outputSignatureMd5WithCode;