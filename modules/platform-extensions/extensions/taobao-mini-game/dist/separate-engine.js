"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calcCodeMd5=exports.outputSignatureMd5WithPath=exports.querySignatureMd5=exports.generateCocos=exports.getPluginFeatures=exports.buildCocos=exports.separateEnginPaths=exports.outDir=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path"),crypto_1=require("crypto"),ccbuild_1=require("@cocos/ccbuild"),engineRoot=Editor&&Editor.App.path?(0,path_1.join)(Editor.App.path,"../resources/3d/engine"):(0,path_1.join)(__dirname,"../../../../../../resources/3d/engine");async function buildCocos(e=!1){var t=exports.separateEnginPaths.internalEngine,a=exports.separateEnginPaths.outDir;const n=exports.separateEnginPaths.cacheCocos;if(!e||!(0,fs_extra_1.existsSync)(n)){var e=await ccbuild_1.StatsQuery.create(t),r={platform:"TAOBAO_MINIGAME",engine:t,out:n,moduleFormat:"system",compress:!0,split:!0,mode:"BUILD",nativeCodeBundleMode:"asmjs",flags:{SERVER_MODE:!1,DEBUG:!1}},o=(0,path_1.join)(a,"options.json");if((0,fs_extra_1.existsSync)(o)){var s=(0,fs_extra_1.readJSONSync)(o);if(require("lodash").isEqual(s,r))return n}(0,fs_extra_1.emptyDirSync)(a);const i=await(0,ccbuild_1.buildEngine)(r),c={};await Promise.all(Object.keys(i.exports).map(async e=>{var t=calcCodeMd5((0,path_1.join)(n,i.exports[e]));c[i.exports[e]]=t})),await(0,fs_extra_1.writeJSONSync)((0,path_1.join)(a,"meta.json"),Object.assign(i,{md5Map:c}),{spaces:2}),await(0,fs_extra_1.writeJSONSync)(o,r,{spaces:2});s=getPluginFeatures(t),o=(0,path_1.join)(a,"plugin"),r=e.getUnitsOfFeatures(s);await generateCocos(ccbuild_1.buildEngine.enumerateDependentChunks(i,r),o)}return n}function getPluginFeatures(e=exports.separateEnginPaths.internalEngine){e=(0,path_1.join)(e,"editor","engine-features","render-config.json");if(!(0,fs_extra_1.existsSync)(e))throw new Error("render-config.json is not exist in engine!");const a=(0,fs_extra_1.readJSONSync)(e)["features"],n=[];function r(e,t){e.enginePlugin&&n.push(t)}return Object.keys(a).forEach(e=>{const t=a[e];t.options?Object.keys(t.options).forEach(e=>r(t.options[e],e)):r(t,e)}),n}async function generateCocos(e,r){if(!e.length)return[];const o=(0,fs_extra_1.readJSONSync)((0,path_1.join)(__dirname,"../static/cocos","signature.json")),s=(0,fs_extra_1.readJSONSync)((0,path_1.join)(exports.separateEnginPaths.outDir,"meta.json"));return(0,fs_extra_1.ensureDirSync)(r),await Promise.all(e.map(async(e,t)=>{var a=(0,path_1.join)(exports.separateEnginPaths.cacheCocos,e),n=(0,path_1.join)(r,e);s.md5Map[e]?o.signature.push({md5:s.md5Map[e],path:e}):await outputSignatureMd5WithPath(o,a),(0,fs_extra_1.ensureDirSync)((0,path_1.dirname)(n)),(0,fs_extra_1.copyFileSync)(a,n)})),(0,fs_extra_1.outputJSONSync)((0,path_1.join)(r,"signature.json"),o),(0,fs_extra_1.copyFileSync)((0,path_1.join)(__dirname,"./../static/cocos/plugin.json"),(0,path_1.join)(r,"plugin.json")),e}function querySignatureMd5(){}async function outputSignatureMd5WithPath(e,t){var a=calcCodeMd5(t);return e.signature.push({md5:a,path:(0,path_1.basename)(t)}),a}function calcCodeMd5(e){return(0,crypto_1.createHash)("md5").update((0,fs_extra_1.readFileSync)(e)).digest("hex")}exports.outDir=(0,path_1.join)(engineRoot,"bin/.cache/editor-cache/taobao-mini-game"),exports.separateEnginPaths={internalEngine:engineRoot,outDir:exports.outDir,plugin:(0,path_1.join)(exports.outDir,"plugin"),cacheCocos:(0,path_1.join)(exports.outDir,"cocos")},exports.buildCocos=buildCocos,exports.getPluginFeatures=getPluginFeatures,exports.generateCocos=generateCocos,exports.querySignatureMd5=querySignatureMd5,exports.outputSignatureMd5WithPath=outputSignatureMd5WithPath,exports.calcCodeMd5=calcCodeMd5;