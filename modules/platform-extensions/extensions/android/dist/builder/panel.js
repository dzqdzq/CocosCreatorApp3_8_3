"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getAPILevel=exports.ready=exports.update=exports.$=exports.template=exports.style=void 0;const fs_1=require("fs"),path_1=require("path"),options_1=require("./options"),lodash=require("lodash");let panel;exports.style=`
.set-androidSDK,
.new-keystore {
    margin-left: 4px;
}
.row {
    margin-bottom: 4px;
}
`,exports.template=(0,fs_1.readFileSync)((0,path_1.join)(__dirname,"../../static/builder/view.html"),"utf8");const MaxAspectRatioList=[{label:"2.4 (12:5)",value:"2.4"},{label:"1.77 (16:9)",value:"16:9"},{label:"1.6 (16:10)",value:"16:10"},{label:"1.33 (4:3)",value:"4:3"}],parseAspectRationValue=e=>{var t;return e?(t=e.match(/^(\d+):(\d+)$/))?Number.parseInt(t[1],10)/Number.parseInt(t[2],10):Number.parseFloat(e):0},methods={t(e,t){return Editor.I18n.t("android."+e,t)},async onSetAndroidSDK(){Editor.Message.send("preferences","open-settings","program")},getDefaultPackageName(){return options_1.defaultOptions.packageName||"com.test.cocos"},onNewKeyStore(){Editor.Panel.open("certificate","android")},async onChangeDebugKeystore(e){const t=this;await t.onUpdateOptions("useDebugKeystore",e);var a=["keystorePath","keystorePassword","keystoreAlias","keystoreAliasPassword"];if(!0===e)a.forEach(e=>{t.pkgErrorMap[e]=null,t.emitChange(e,t.pkgOptions[e],null)});else for(const p of a)t.pkgErrorMap[p]=(await(0,options_1.verificationFunc)(p,t.pkgOptions[p],panel.options)).error,t.emitChange(p,t.pkgOptions[p],t.pkgErrorMap[p])},async onRenderBackEnd(e){var t=this,e=e.target.value;t.pkgOptions.renderBackEnd=e?Object.assign(t.pkgOptions.renderBackEnd,{gles3:!0}):Object.assign(t.pkgOptions.renderBackEnd,{gles2:!1,gles3:!1}),await t.onUpdateOptions("renderBackEnd",t.pkgOptions.renderBackEnd)},async onChange(e){var t=e.target.value,e=e.target.getAttribute("path");await this.onUpdateOptions(e,t)},async onUpdateOptions(e,t){var a,p;e&&(a=this,lodash.set(a.pkgOptions,e,t),panel.options.packages.android=a.pkgOptions,e.startsWith("renderBackEnd")&&(e="renderBackEnd",t=a.pkgOptions.renderBackEnd),"apiLevel"===e&&(t=Number(t)),p=await(0,options_1.verificationFunc)(e,t,panel.options),a.pkgErrorMap[e]=p.error,a.emitChange(e,t,p.error))},emitChange(e,t,a){panel.dispatch("update",`packages.${this.pkgName}.`+e,t,a)},async changeMaxAspectRatio(e){var t=this;let a=e.target.value;e=e.target.getAttribute("path");"maxAspectRatio"===e?a="custom"!==(t.maxAspectRatio=a)?a:t.customMaxAspectRatio:"customMaxAspectRatio"===e&&(t.customMaxAspectRatio=a),await t.onUpdateOptions("maxAspectRatio",a)},async onChangeABI(e,t){var a=this,e=e.target.value;Array.isArray(a.pkgOptions.appABIs)||(a.pkgOptions.appABIs=[]),e?a.pkgOptions.appABIs.push(t):a.pkgOptions.appABIs.splice(a.pkgOptions.appABIs.indexOf(t),1),await a.onUpdateOptions("appABIs",a.pkgOptions.appABIs)},async changeInstantValue(e){var t=this,a=((t.pkgOptions.androidInstant=e)?(a=await(0,options_1.verificationFunc)("remoteUrl",t.pkgOptions.remoteUrl,panel.options),t.pkgErrorMap.remoteUrl=a.error):t.pkgErrorMap.remoteUrl=null,await(0,options_1.verificationFunc)("apiLevel",t.pkgOptions.apiLevel,panel.options));t.pkgErrorMap.apiLevel=a.error,t.apiLevels.length||(t.pkgErrorMap.apiLevel="i18n:android.tips.apilevel_empty"),t.emitChange("androidInstant",e),t.emitChange("apiLevel",t.pkgOptions.apiLevel,t.pkgErrorMap.apiLevel),t.emitChange("remoteUrl",t.pkgOptions.remoteUrl,t.pkgErrorMap.remoteUrl)},async init(){var e,t=this;t.pkgOptions=lodash.get(panel.options,"packages.android")||{},t.apiLevels=await getAndroidAPILevels(),t.pkgOptions.apiLevel=t.pkgOptions.apiLevel||t.apiLevels[0],t.pkgOptions.resizeableActivity=null==(e=t.pkgOptions.resizeableActivity)||e;for(const p of Object.keys(options_1.defaultOptions)){var a=await(0,options_1.verificationFunc)(p,t.pkgOptions[p],panel.options);t.pkgErrorMap[p]=a.error}t.apiLevels.length||(t.pkgErrorMap.apiLevel="i18n:android.tips.apilevel_empty"),panel.dispatch("update","packages."+t.pkgName,t.pkgOptions,t.pkgErrorMap)}};async function update(e,t){(panel=this).options=e,"packages.native.JobSystem"===t?(panel.options.packages.native.JobSystem=e.packages.native.JobSystem,panel.vm.onUpdateOptions("apiLevel",e.packages.android.apiLevel)):t&&!t.startsWith("packages."+panel.pkgName)||(panel.options=e,panel.vm.init())}function ready(e,t,a,p){panel=this;var s=require("vue/dist/vue.js");panel.options=e,panel.pkgName=a,panel.errorMap=p,panel.vm=new s({el:panel.$.root,data(){return{pkgName:a,type:t,pkgOptions:options_1.defaultOptions,pkgErrorMap:options_1.defaultOptions,apiLevels:[],appABIList:["armeabi-v7a","arm64-v8a","x86","x86_64"],maxAspectRatioOptions:MaxAspectRatioList,maxAspectRatio:"",customMaxAspectRatio:""}},async mounted(){var e=this;"check"===e.type?(e.pkgOptions=lodash.get(panel.options,"packages.android")||{},e.apiLevels=e.pkgOptions.apiLevel&&[e.pkgOptions.apiLevel],e.pkgErrorMap={}):(e.init(),initMaxAspectRatio(e))},methods:methods})}function initMaxAspectRatio(t){var e=t.pkgOptions.maxAspectRatio;if(void 0!==e){const p=parseAspectRationValue(e);var a=MaxAspectRatioList.filter(e=>parseAspectRationValue(e.value)===p);t.maxAspectRatio=a.length?a[0].value:"custom"}else t.maxAspectRatio=MaxAspectRatioList[0].value;if("custom"===t.maxAspectRatio&&e){a=e.match(/^(\d+):(\d+)$/);if(a){const s=Number.parseInt(a[1]),o=Number.parseInt(a[2]);t.$nextTick(()=>{var e=`${(s/o).toFixed(2)} (${s}:${o})`;t.customMaxAspectRatio=e})}else t.customMaxAspectRatio=e}}exports.$={root:".android"},exports.update=update,exports.ready=ready;const MIN_COMPILE_LEVEL=19;async function getAndroidAPILevels(){var e=await Editor.Message.request("program","query-program-info","androidSDK");if(!e||!e.path||!(0,fs_1.existsSync)(e.path))return[];const p=(0,path_1.join)(e.path,"platforms");return(0,fs_1.existsSync)(p)?(0,fs_1.readdirSync)(p).filter(e=>{var t=getAPILevel(e),a=(0,fs_1.statSync)((0,path_1.join)(p,e));return!!/^android-/.test(e)&&!!(t>=MIN_COMPILE_LEVEL&&a.isDirectory())}).map(e=>parseInt(e.split("-")[1])):[]}function getAPILevel(e){e=(e=e||"").match("android-([0-9]+)$");let t=-1;return t=e?parseInt(e[1]):t}exports.getAPILevel=getAPILevel;