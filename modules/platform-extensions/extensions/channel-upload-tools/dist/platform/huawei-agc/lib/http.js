"use strict";const Constant=require("../const"),request=require("request"),md5=require("md5"),url=require("url"),release_url="https://creator-api.cocos.com/",agentOptions={},creatorVersion=Editor.App.version,parseParameter=async function(e){return e.version=creatorVersion,signParam(e,Constant.PLUGIN_ID,Constant.PLUGIN_SECRET)};function signParam(t,e,s){t.plugin_id=e;e=Object.keys(t).sort();const r={};e.forEach(e=>{r[e]=t[e]});let o="";for(const n in r)o+=`${n}=${encodeURIComponent(r[n])}&`;return o+=s,t.sign=md5(o),t}module.exports={sessionToken:null,post(e,t){return new Promise((r,o)=>{request.post({url:e,json:!0,form:t,agentOptions:agentOptions},(e,t,s)=>{e||200!==t.statusCode?o({status:t.statusCode,msg:e}):r(s)})})},async fetchOAuthUrl(){var e={session_token:await this.getSessionToken(),lang:Editor.I18n.getLanguage()||"en"};return this.post("https://creator-api.cocos.com/api/hms/get_oauth_url",await parseParameter(e))},async fetchOAuthToken(){var e={session_token:await this.getSessionToken()};return this.post("https://creator-api.cocos.com/api/hms/get_tp_info",await parseParameter(e))},async getSessionToken(){var e;return this.sessionToken||((e=await this.fetchSessionToken(Constant.PLUGIN_ID,Constant.PLUGIN_SECRET))&&e.data.session_token?(this.sessionToken=e.data.session_token,this.sessionToken):void console.error("get plugin session token error"))},async fetchSessionToken(e,t){var s=url.resolve(release_url,"api/session/token"),e=await signParam({session_code:(await Editor.User.getSessionCode(e)).session_code,ip:"127.0.0.1",plugin_id:e,client_type:1},e,t);try{var r=await Editor.Network.post(s,e);return JSON.parse(Buffer.from(r).toString())}catch(e){console.error(e)}},async getOAuthToken(){var e=await this.fetchOAuthToken();if(e&&e.data.tp_access_token)return e.data.tp_access_token;console.error("get plugin tp access token url error")},async getOAuthUrl(){var e=await this.fetchOAuthUrl();if(e&&e.data.oauth_url)return{url:e.data.oauth_url,redirect:e.data.redirect_url};console.error("get plugin login url error")},async needLogin(){let e=!1;var t=await this.fetchOAuthToken();return t?e=720===t.status||721===t.status||e:(console.error("get plugin login url error"),!0)},async logout(){var e={session_token:await this.getSessionToken()};return this.post("https://creator-api.cocos.com/api/hms/unbind_oauth",await parseParameter(e))}};