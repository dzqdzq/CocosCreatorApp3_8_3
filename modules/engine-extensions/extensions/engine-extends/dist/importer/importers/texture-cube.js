"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,a){void 0===a&&(a=r),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,a){e[a=void 0===a?r:a]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TextureCubeImporter=exports.makeDefaultTextureCubeAssetUserData=void 0;const asset_db_1=require("@editor/asset-db"),cc=__importStar(require("cc")),load_asset_sync_1=require("./gltf/load-asset-sync"),texture_base_1=require("./texture-base"),utils_1=require("../utils");function makeDefaultTextureCubeAssetUserData(){var e=texture_base_1.makeDefaultTextureBaseAssetUserData();return e.isRGBE=!1,e}exports.makeDefaultTextureCubeAssetUserData=makeDefaultTextureCubeAssetUserData;class TextureCubeImporter extends asset_db_1.Importer{get version(){return"1.0.4"}get name(){return"texture-cube"}get assetType(){return"cc.TextureCube"}get migrations(){return[{version:"1.0.3",migrate:texture_base_1.migrateAnisotropy}]}async import(t){0===Object.getOwnPropertyNames(t.userData).length&&(t.assignUserData(makeDefaultTextureCubeAssetUserData(),!0),t.userData.isRGBE=!1);var r=t.userData,a={};for(const n of["front","back","left","right","top","bottom"]){let e=r[n];if(!e){var s=`db://internal/default_cubemap/${n}.jpg`,u=asset_db_1.queryUUID(s);if(!u)throw new Error(`[[internal-error]] Default face url ${s} doesn't exists.`);e=u}s=load_asset_sync_1.loadAssetSync(e,cc.ImageAsset);if(!s)throw new Error(`Failed to load ${n} face of ${t.uuid}.`);a[n]=s}var e=new cc.TextureCube,e=(texture_base_1.applyTextureBaseAssetUserData(r,e),t.parent instanceof asset_db_1.Asset&&(e.name=t.parent.basename||""),e.isRGBE=r.isRGBE,e._mipmaps=[a],EditorExtends.serialize(e)),e=(await t.saveToLibrary(".json",e),utils_1.getDependUUIDList(e));return t.setData("depends",e),!0}}exports.TextureCubeImporter=TextureCubeImporter;