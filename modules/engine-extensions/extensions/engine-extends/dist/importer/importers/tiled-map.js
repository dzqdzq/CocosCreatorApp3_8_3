"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,r){e[r=void 0===r?a:r]=t[a]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&__createBinding(t,e,a);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TiledMapImporter=void 0;const asset_db_1=require("@editor/asset-db"),path=__importStar(require("path")),fs=__importStar(require("fs")),xmldom_1=require("xmldom"),sharp_1=__importDefault(require("sharp")),cc_1=require("cc"),image_utils_1=require("./utils/image-utils"),utils_1=require("../utils");async function searchDependFiles(a,r,e){var t=(new xmldom_1.DOMParser).parseFromString(e);if(!t)throw console.error("failed to parse "+e),new Error("TiledMap import failed: failed to parser "+r);let s=[];var i=[];let n=[],l=[];var e=t.documentElement,m=e.getElementsByTagName("tileset");for(let e=0;e<m.length;e++){var u=m[e],o=u.getAttribute("source");if(o){o=path.join(path.dirname(r),o);if(a.depend(o),!fs.existsSync(o))return console.warn("cannot find "+o),null;i.push(o);var p=fs.readFileSync(o,"utf-8"),p=(new xmldom_1.DOMParser).parseFromString(p);if(p){p=await parseTilesetImages(a,p,o);if(!p)return null;s=s.concat(p.imageFullPath),n=n.concat(p.imageBaseName),l=l.concat(p.imageSizes)}else console.warn("Parse %s failed.",o)}p=await parseTilesetImages(a,u,r);if(!p)return null;s=s.concat(p.imageFullPath),n=n.concat(p.imageBaseName),l=l.concat(p.imageSizes)}var c=[],d=[],f=e.getElementsByTagName("imagelayer");for(let e=0,t=f.length;e<t;e++){var g=f[e].getElementsByTagName("image");if(g&&0<g.length){g=g[0].getAttribute("source"),g=path.join(path.dirname(r),g);if(a.depend(g),fs.existsSync(g)){c.push(g);let e=path.relative(path.dirname(r),g);e=e.replace(/\\/g,"/"),d.push(e)}else console.warn("cannot find "+g)}}return{imgFullPaths:s,tsxFiles:i,imgBaseNames:n,imageLayerTextures:c,imageLayerTextureNames:d,imgSizes:l}}async function parseTilesetImages(t,e,a){var r=e.getElementsByTagName("image"),s=[],i=[],n=[];for(let e=0;e<r.length;e++){var l=r[e].getAttribute("source");if(l){l=path.join(path.dirname(a),l);if(t.depend(l),!fs.existsSync(l))throw new Error("Image does not exist: "+l);var m=await sharp_1.default(l).metadata(),m=(n.push(new cc_1.Size(m.width,m.height)),s.push(l),path.basename(l));i.push(m)}}return{imageFullPath:s,imageBaseName:i,imageSizes:n}}class TiledMapImporter extends asset_db_1.Importer{get version(){return"1.0.2"}get name(){return"tiled-map"}get assetType(){return"cc.TiledMapAsset"}async validate(e){return!0}async import(e){await e.copyToLibrary(e.extname,e.source);var t=new cc_1.TiledMapAsset,a=fs.readFileSync(e.source,{encoding:"utf8"}),r=(t.name=path.basename(e.source,e.extname),new cc_1.TextAsset),r=(r.name=t.name,r.text=a,t.tmxXmlStr=a,await searchDependFiles(e,e.source,a));if(!r)return!1;t.spriteFrames=r.imgFullPaths.map(e=>{e=asset_db_1.queryAsset(e);if(e)return image_utils_1.changeImageDefaultType(e,"sprite-frame"),EditorExtends.serialize.asAsset(e.uuid+"@f9941",cc_1.SpriteFrame)}),t.spriteFrameNames=r.imgBaseNames,t.tsxFiles=r.tsxFiles.map(e=>{e=asset_db_1.queryAsset(e);if(e)return EditorExtends.serialize.asAsset(e.uuid,cc_1.TextAsset)}),t.tsxFileNames=r.tsxFiles.map(e=>path.basename(e)),t.imageLayerSpriteFrame=r.imageLayerTextures.map(e=>{e=asset_db_1.queryAsset(e);return EditorExtends.serialize.asAsset(e.uuid+"@f9941",cc_1.SpriteFrame)}),t.imageLayerSpriteFrameNames=r.imageLayerTextureNames.map(e=>path.basename(e)),t.spriteFrameSizes=r.imgSizes;a=EditorExtends.serialize(t),await e.saveToLibrary(".json",a),r=utils_1.getDependUUIDList(a);return e.setData("depends",r),!0}}exports.TiledMapImporter=TiledMapImporter;