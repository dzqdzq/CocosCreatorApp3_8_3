"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabelAtlasImporter=void 0;const asset_db_1=require("@editor/asset-db"),cc_1=require("cc"),path_1=require("path"),utils_1=require("../utils"),fntParser=require("../../../static/utils/fnt-parser"),FONT_SIZE=.88,defaultLabelAtlasUserData={itemWidth:2,itemHeight:2,fontSize:0,startChar:"",spriteFrameUuid:"",_fntConfig:{}};class LabelAtlasImporter extends asset_db_1.Importer{get version(){return"1.0.1"}get name(){return"label-atlas"}get assetType(){return"cc.LabelAtlas"}_createFntConfigString(t){var r=t.userData,e=asset_db_1.queryAsset(t.userData.spriteFrameUuid);if(!e)return null;var{itemWidth:i,itemHeight:s,fontSize:n}=r,e=e.meta,{rawWidth:l,rawHeight:o}=e.userData;let d=null;if(0<r.itemWidth&&0<r.itemHeight&&r.itemWidth<=l&&r.itemHeight<=o){var e=e.displayName,m=r.startChar.charCodeAt(0);d=`info face="Arial" size=${n} bold=0 italic=0 charset="" unicode=0 stretchH=100 smooth=1 aa=1 padding=0,0,0,0 spaceing=0,0
`,d=(d+=`common lineHeight=${s} base=${n} scaleW=${l} scaleH=${o} pages=1 packed=0
`)+`page id=0 file="${e}"
`+"chars count=0\n";let a=0;for(let t=s;t<=o;t+=s)for(let e=0;e<l&&e+i<=l;e+=i){var u=m+a,c=e,f=t-s,h=String.fromCharCode(u);d+=`char id=${u}     x=${c}   y=${f}   width=${i}     height=${s}     xoffset=0     yoffset=0    xadvance=${i}    page=0 chnl=0 letter="${h}"
`,++a}return fntParser.parseFnt(d)}{let e=`LabelAtlas '${t._url}' fnt data invalid, `;return r.itemWidth<=0||r.itemWidth>l?e+=`the item width must range from 1 - ${l}.`:(r.itemHeight<=0||r.itemHeight>o)&&(e+=`the item height must range from 1 - ${o}.`),console.warn(e),null}}async import(e){const t=e.userData;Object.keys(defaultLabelAtlasUserData).forEach(e=>{e in t||(t[e]=defaultLabelAtlasUserData[e])});var a=this.createLabelAtlas(e),a=(t.spriteFrameUuid&&(a.fontSize=t.fontSize=t.itemHeight*FONT_SIZE,a.spriteFrame=EditorExtends.serialize.asAsset(t.spriteFrameUuid,cc_1.SpriteFrame),a.fntConfig=t._fntConfig=this._createFntConfigString(e)),a.name=e.basename||"",EditorExtends.serialize(a)),a=(await e.saveToLibrary(".json",a),utils_1.getDependUUIDList(a));return e.setData("depends",a),!0}createLabelAtlas(e){var t=new cc.LabelAtlas;return t.name=path_1.basename(e.source,e.extname),t.fontSize=e.userData.fontSize,t.fntConfig=e.userData._fntConfig,t}}exports.LabelAtlasImporter=LabelAtlasImporter;