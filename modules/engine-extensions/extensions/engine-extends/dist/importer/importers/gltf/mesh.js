"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.GltfMeshImporter=void 0;const asset_db_1=require("@editor/asset-db"),reader_manager_1=require("./reader-manager"),utils_1=require("../../utils"),meshSimplify_1=require("./meshSimplify"),cc_1=require("cc"),fs_extra_1=__importDefault(require("fs-extra")),uv_unwrap_1=require("../utils/uv-unwrap"),fs_extra_2=require("fs-extra");class GltfMeshImporter extends asset_db_1.Importer{get version(){return"1.1.1"}get name(){return"gltf-mesh"}get assetType(){return"cc.Mesh"}get instantiation(){return".mesh"}async import(e){if(!e.parent)return!1;var t=await reader_manager_1.glTfReaderManager.getOrCreate(e.parent),i=e.parent.userData.generateLightmapUVNode,r=e.parent.userData,s=e.userData;let n=t.createMesh(e.userData.gltfIndex,i,null!=(t=r.addVertexColor)&&t),a=(s.lodOptions&&((t=meshSimplify_1.getDefautOptions()).targetRatio=s.lodOptions.faceCount,n=meshSimplify_1.simplifyMesh(n,t)),0);if(s.triangleCount=0,null!=(t=n.struct.primitives)&&t.forEach(e=>{e&&e.indexView&&(a+=e.indexView.count/3)}),s.triangleCount=a,n.allowDataAccess=null==(t=e.parent.userData.allowMeshDataAccess)||t,i){var u=[],l=[];let r=0;for(let e=0;e<n.struct.primitives.length;e++){var o=n.readAttribute(e,cc_1.gfx.AttributeName.ATTR_POSITION);let t;t=2===n.struct.vertexBundles[e].view.stride||4===n.struct.vertexBundles[e].view.stride?n.readIndices(e):(console.warn("Invalid indeces stride"),[]);for(let e=0;e<o.length;++e)u.push(o[e]);for(let e=0;e<t.length;++e)l.push(t[e]+r);n.readAttribute(e,cc_1.gfx.AttributeName.ATTR_TEX_COORD1),r+=n.struct.vertexBundles[e].view.count}var s=u.length/3,t=new Uint8Array(8+4*u.length+4*l.length),i=new Int32Array(t.buffer,0),f=(i[0]=s,i[1]=l.length,new Float32Array(t.buffer,8)),_=new Int32Array(t.buffer,8+4*u.length);for(let e=0;e<u.length;e++)f[e]=u[e];for(let e=0;e<l.length;e++)_[e]=l[e];var s=e.uuid,i=e.temp,t=(await fs_extra_2.ensureDir(i),await fs_extra_1.default.promises.writeFile(i+`/${s}_in.bin`,t),await uv_unwrap_1.unwrapLightmapUV(i+`/${s}_in.bin`,i+`/${s}_out.bin`),await fs_extra_1.default.promises.readFile(i+`/${s}_out.bin`)),i=new Uint8Array(t),d=new Float32Array(i.buffer,4);let a=0;for(let r=0;r<n.struct.primitives.length;r++){var m=n.readAttribute(r,cc_1.gfx.AttributeName.ATTR_TEX_COORD1),p=n.struct.vertexBundles[r].attributes;let t=0;if(0<m.length){for(let e=0;e<p.length&&p[e].name!==cc_1.gfx.AttributeName.ATTR_TEX_COORD1;e++){var c=n.readAttributeFormat(r,p[e].name);c&&(t+=c.size)}if(0<t)for(let e=0;e<n.struct.vertexBundles[r].view.count;e++){var h=n.struct.vertexBundles[r].view.offset+t+e*n.struct.vertexBundles[r].view.stride,g=new DataView(n.data.buffer);g.setFloat32(h,d[a],!0),g.setFloat32(h+4,d[a+1],!0),a+=2}}}}0!==(n=r.meshOptimizer&&r.meshOptimizer.enable&&"gltfpack"!==r.meshOptimizer.algorithm?meshSimplify_1.simplifyMesh(n,r.meshOptimizer.simplifyOptions):n).data.byteLength&&(n._setRawAsset(".bin"),await e.saveToLibrary(".bin",Buffer.from(n.data)));s=EditorExtends.serialize(n),await e.saveToLibrary(".json",s),t=utils_1.getDependUUIDList(s);return e.setData("depends",t),!0}}exports.GltfMeshImporter=GltfMeshImporter;