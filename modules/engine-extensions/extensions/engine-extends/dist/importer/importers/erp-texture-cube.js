"use strict";var MipmapMode,__createBinding=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,r){e[r=void 0===r?a:r]=t[a]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&__createBinding(t,e,a);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.checkSize=exports.TextureCubeFaceImporter=exports.ERPTextureCubeImporter=exports.MipmapMode=exports.makeDefaultTextureCubeAssetUserData=void 0;const asset_db_1=require("@editor/asset-db"),texture_base_1=require("./texture-base"),equirect_cubemap_faces_1=require("./utils/equirect-cubemap-faces"),cc=__importStar(require("cc")),cube_map_simple_layout_1=require("./utils/cube-map-simple-layout"),migratesNameToId=__importStar(require("./migrates/name2id")),sharp_1=__importDefault(require("sharp")),fs_extra_1=require("fs-extra"),path_1=require("path"),fs_extra_2=require("fs-extra"),utils_1=require("../utils");function makeDefaultTextureCubeAssetUserData(){var e=texture_base_1.makeDefaultTextureBaseAssetUserData();return e.isRGBE=!1,e.mipfilter="linear",e}exports.makeDefaultTextureCubeAssetUserData=makeDefaultTextureCubeAssetUserData;const verticalCount=2;!function(e){e[e.NONE=0]="NONE",e[e.AUTO=1]="AUTO",e[e.BAKED_CONVOLUTION_MAP=2]="BAKED_CONVOLUTION_MAP"}(MipmapMode=exports.MipmapMode||(exports.MipmapMode={}));class ERPTextureCubeImporter extends asset_db_1.Importer{get version(){return"1.0.10"}get name(){return"erp-texture-cube"}get assetType(){return"cc.TextureCube"}get migrations(){return[{version:"1.0.9",migrate:migratesNameToId.migrate}]}getTop(e,t){return 0!=e&&0<t.length?t[0].height:0}getLeft(t,a){if(t<verticalCount)return 0;let r=0;for(let e=verticalCount-1;e<a.length&&!(e>=t);e++)r+=a[e].width;return r}getMipmapLayout(e){var t=[];let a=0;for(;e;)t.push({left:this.getLeft(a,t),top:this.getTop(a,t),width:e,height:e,level:a++}),e>>=1;return t}getDirOfMipmaps(e,t){var a=path_1.dirname(e),e=path_1.basename(e,t);return path_1.join(a,e+"_convolution")}isNeedConvolution(t){if(!fs_extra_1.existsSync(t))return!0;for(let e=0;e<6;e++){var a=path_1.join(t,"mipmap_"+e.toString()+".png");if(!fs_extra_1.existsSync(a))return!0}return!1}saveMipmaps(e,t){fs_extra_1.existsSync(t)||fs_extra_2.ensureDirSync(t),fs_extra_1.copyFileSync(e,path_1.join(t,path_1.basename(e)))}async import(a){0===Object.getOwnPropertyNames(a.userData).length&&a.assignUserData(makeDefaultTextureCubeAssetUserData(),!0);var r=a.userData,e=asset_db_1.queryAsset(r.imageDatabaseUri);if(!e)return!1;let t;var s=null==(s=a.parent.extname)?void 0:s.toLowerCase(),i=(t=[".tga",".hdr",".bmp",".psd",".tif",".tiff",".exr"].includes(s)||!s?e.library+".png":e.source,sharp_1.default(t)),u=await i.metadata();const o=u.width;u=u.height;if(a.userData.mipBakeMode===MipmapMode.BAKED_CONVOLUTION_MAP){var n=a.parent.source;let t=path_1.join(a.temp,"mipmap");var p=this.getDirOfMipmaps(e.source,s),c=(this.isNeedConvolution(p)?(e=["--srcFaceSize","768","--mipatlas","--filter","radiance","--lightingModel","ggx","--excludeBase","true","--output0params",r.isRGBE?"png,rgbm,facelist":"png,bgra8,facelist","--input",n,"--output0",t],r.isRGBE&&![".hdr",".exr"].includes(s)&&e.splice(0,0,"--rgbm"),fs_extra_2.ensureDirSync(a.temp),console.log(`Start to bake asset {asset[${a.uuid}](${a.uuid})}`),n=path_1.join(Editor.App.path,"../tools/cmft/cmftRelease64")+("win32"===process.platform?".exe":""),await Editor.Utils.Process.quickSpawn(n,e,{stdio:"inherit"})):t=path_1.join(p,"mipmap"),["right","left","top","bottom","front","back"]),f={},m=[],l=a.getSwapSpace();for(let e=0;e<c.length;e++){var _=`${t}_${e}.png`,_=(this.saveMipmaps(_,p),sharp_1.default(_));const o=(await _.metadata()).width;m[e]=this.getMipmapLayout(o);var d=c[e],_=await _.toFormat(sharp_1.default.format.png).toBuffer(),_=(l[d]=_,await a.createSubAsset(d,"texture-cube-face"));f[d]=EditorExtends.serialize.asAsset(_.uuid,cc.ImageAsset)}const b=new cc.TextureCube,w=(texture_base_1.applyTextureBaseAssetUserData(r,b),b.isRGBE=r.isRGBE,b._mipmapMode=MipmapMode.BAKED_CONVOLUTION_MAP,b._mipmapAtlas={atlas:f,layout:m[0]},EditorExtends.serialize(b)),v=(await a.saveToLibrary(".json",w),utils_1.getDependUUIDList(w));a.setData("depends",v)}else{let e;var s=cube_map_simple_layout_1.matchSimpleLayout(o,u),h=(e=s?await this._getFacesInSimpleLayout(i,s):await this._getFacesInEquirectangularProjected(t,0===r.faceSize?void 0:r.faceSize,r.isRGBE),{}),g=a.getSwapSpace();for(const D of Object.getOwnPropertyNames(e)){var x=e[D],x=(g[D]=x,await a.createSubAsset(D,"texture-cube-face"));h[D]=EditorExtends.serialize.asAsset(x.uuid,cc.ImageAsset)}const b=new cc.TextureCube,w=(texture_base_1.applyTextureBaseAssetUserData(r,b),b.isRGBE=r.isRGBE,b._mipmaps=[h],EditorExtends.serialize(b)),v=(await a.saveToLibrary(".json",w),utils_1.getDependUUIDList(w));a.setData("depends",v)}return!0}async _getFacesInSimpleLayout(a,r){const s={};var e=Object.getOwnPropertyNames(r);for(const t of e)s[t]=void 0;return await Promise.all(e.map(async e=>{var t=r[e],t=await a.extract({left:t.x,top:t.y,width:t.width,height:t.height}).toFormat(sharp_1.default.format.png).toBuffer();s[e]=t})),s}async _getFacesInEquirectangularProjected(e,t,a){var e=await fs_extra_1.readFile(e),e=await sharp_1.default(e),r=await e.metadata(),e=(t=t||0|equirect_cubemap_faces_1.nearestPowerOfTwo((r.width||0)/4),await equirect_cubemap_faces_1.equirectToCubemapFaces(e,t,{isRGBE:a}));if(6!==e.length)throw new Error("Failed to resolve equirectangular projection image.");return{right:await sharp_1.default(Buffer.from(e[0].data),{raw:{width:t,height:t,channels:4}}).toFormat(r.format||"png").toBuffer(),left:await sharp_1.default(Buffer.from(e[1].data),{raw:{width:t,height:t,channels:4}}).toFormat(r.format||"png").toBuffer(),top:await sharp_1.default(Buffer.from(e[2].data),{raw:{width:t,height:t,channels:4}}).toFormat(r.format||"png").toBuffer(),bottom:await sharp_1.default(Buffer.from(e[3].data),{raw:{width:t,height:t,channels:4}}).toFormat(r.format||"png").toBuffer(),front:await sharp_1.default(Buffer.from(e[4].data),{raw:{width:t,height:t,channels:4}}).toFormat(r.format||"png").toBuffer(),back:await sharp_1.default(Buffer.from(e[5].data),{raw:{width:t,height:t,channels:4}}).toFormat(r.format||"png").toBuffer()}}}exports.ERPTextureCubeImporter=ERPTextureCubeImporter;class TextureCubeFaceImporter extends asset_db_1.Importer{get version(){return"1.0.0"}get name(){return"texture-cube-face"}get assetType(){return"cc.ImageAsset"}async import(e){if(!e.parent)return!1;var t=e.parent.getSwapSpace();if(!t)return!1;var a=e._name;if(!(a in t))return!1;let r=".png";e.parent&&e.parent.parent&&[".webp",".jpg"].includes(e.parent.parent.extname)&&(r=e.parent.parent.extname);t=t[a],await e.saveToLibrary(r,t),a=new cc.ImageAsset,a._setRawAsset(r),t=EditorExtends.serialize(a),await e.saveToLibrary(".json",t),a=utils_1.getDependUUIDList(t);return e.setData("depends",a),!0}}function checkSize(e,t){return 4*e==3*t||3*e==4*t||6*e===t||e===6*t||e===2*t}exports.TextureCubeFaceImporter=TextureCubeFaceImporter,exports.checkSize=checkSize;