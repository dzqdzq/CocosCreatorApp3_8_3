"use strict";function clamp(e,n,t){return Math.min(t,Math.max(n,e))}function srgbToLinear(e){return Math.pow(e,2.2)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.equirectToCubemapFaces=exports.InterpolationType=exports.nearestPowerOfTwo=void 0;const i255=1/255;function betweenZeroAndOne(e){return i255*e}function linearToSRGB(e){return Math.pow(e,.454545)}const ilog2=1/Math.log(2);function nearestPowerOfTwo(e){return 1<<Math.round(Math.log(e)*ilog2)}var InterpolationType;exports.nearestPowerOfTwo=nearestPowerOfTwo,function(e){e.BILINEAR="bilinear",e.NEAREST="nearest"}(InterpolationType=exports.InterpolationType||(exports.InterpolationType={}));const DEFAULT_OPTIONS={flipTheta:!1,interpolation:InterpolationType.BILINEAR,isRGBE:!1},rgbe_base=1.1;function floatToRGBE(e,n,t,r,a){var o=Math.max(Math.max(e,n),t),o=Math.ceil(Math.log(o)/Math.log(rgbe_base)),o=Math.min(Math.max(o+128,0),255),i=Math.pow(rgbe_base,o-128);r[a+0]=e/i*255|0,r[a+1]=n/i*255|0,r[a+2]=t/i*255|0,r[a+3]=o}function transformSingleFace(e,n,t,r){var o=r.flipTheta?-1:1,i=0|t.width,b=0|e.width,h=0|e.height,s=e.data,w=r.interpolation===InterpolationType.NEAREST,d=r.isRGBE,l=t.data,c=0|t.width,g=0|t.height,G=0|n,N=2/c,k=2/g;for(let a=0;a<g;++a)for(let r=0;r<c;++r){var p=N*r,T=k*a,f=r+a*i<<2;let e=0,n=0,t=0;switch(G){case 0:e=1,n=1-p,t=1-T;break;case 1:e=-1,n=p-1,t=1-T;break;case 2:e=p-1,n=T-1,t=1;break;case 3:e=p-1,n=1-T,t=-1;break;case 4:e=p-1,n=1,t=1-T;break;case 5:e=1-p,n=-1,t=1-T}var u,A,O,m,M,Z,I,L,x,E,P,y,B,R,v,S=o*Math.atan2(n,e),_=Math.sqrt(e*e+n*n),_=Math.atan2(t,_),S=b/4*2*(S+Math.PI)/Math.PI,_=b/4*2*(Math.PI/2-_)/Math.PI,F=0|Math.floor(S),C=0|Math.floor(_);w?(u=F%b+b*clamp(C,0,h-1)<<2,l[f]=0|s[u],l[1+f]=0|s[1+u],l[2+f]=0|s[2+u],l[3+f]=0|s[3+u]):(u=1+F,v=1+C,S=S-F,_=_-C,R=F%b+b*clamp(C,0,h-1)<<2,C=u%b+b*clamp(C,0,h-1)<<2,F=F%b+b*clamp(v,0,h-1)<<2,v=u%b+b*clamp(v,0,h-1)<<2,A=(1-S)*(1-_),O=S*(1-_),m=(1-S)*_,S=S*_,d?(_=Math.pow(rgbe_base,(0|s[3+R])-128),P=Math.pow(rgbe_base,(0|s[3+C])-128),y=Math.pow(rgbe_base,(0|s[3+F])-128),B=Math.pow(rgbe_base,(0|s[3+v])-128),M=betweenZeroAndOne(0|s[R])*_,L=betweenZeroAndOne(0|s[1+R])*_,_=betweenZeroAndOne(0|s[2+R])*_,Z=betweenZeroAndOne(0|s[C])*P,x=betweenZeroAndOne(0|s[1+C])*P,P=betweenZeroAndOne(0|s[2+C])*P,I=betweenZeroAndOne(0|s[F])*y,E=betweenZeroAndOne(0|s[1+F])*y,y=betweenZeroAndOne(0|s[2+F])*y,floatToRGBE(M*A+Z*O+I*m+betweenZeroAndOne(0|s[v])*B*S,L*A+x*O+E*m+betweenZeroAndOne(0|s[1+v])*B*S,_*A+P*O+y*m+betweenZeroAndOne(0|s[2+v])*B*S,l,f)):(M=betweenZeroAndOne(0|s[3+R]),Z=betweenZeroAndOne(0|s[3+C]),I=betweenZeroAndOne(0|s[3+F]),L=betweenZeroAndOne(0|s[3+v]),x=srgbToLinear(betweenZeroAndOne(0|s[R]))*M,E=srgbToLinear(betweenZeroAndOne(0|s[1+R]))*M,_=srgbToLinear(betweenZeroAndOne(0|s[2+R]))*M,P=srgbToLinear(betweenZeroAndOne(0|s[C]))*Z,y=srgbToLinear(betweenZeroAndOne(0|s[1+C]))*Z,B=srgbToLinear(betweenZeroAndOne(0|s[2+C]))*Z,R=srgbToLinear(betweenZeroAndOne(0|s[F]))*I,C=srgbToLinear(betweenZeroAndOne(0|s[1+F]))*I,F=srgbToLinear(betweenZeroAndOne(0|s[2+F]))*I,R=x*A+P*O+R*m+srgbToLinear(betweenZeroAndOne(0|s[v]))*L*S,C=E*A+y*O+C*m+srgbToLinear(betweenZeroAndOne(0|s[1+v]))*L*S,_=_*A+B*O+F*m+srgbToLinear(betweenZeroAndOne(0|s[2+v]))*L*S,v=1/(F=M*A+Z*O+I*m+L*S),l[3+f]=255*F|0,l[f]=255*linearToSRGB(R*v)|0,l[1+f]=255*linearToSRGB(C*v)|0,l[2+f]=255*linearToSRGB(_*v)|0))}return t}function transformToCubeFaces(n,t,r){if(6!==t.length)throw new Error("facePixArray length must be 6!");for(let e=0;e<6;++e)transformSingleFace(n,e,t[e],r);return t}function imageGetPixels(e){if(e instanceof ImageData)return e;let n=e,t;return"CANVAS"!==n.tagName?((n=document.createElement("canvas")).width=e.width,n.height=e.height,(t=n.getContext("2d")).drawImage(e,0,0,n.width,n.height,0,0,n.width,n.height)):t=n.getContext("2d"),t.getImageData(0,0,n.width,n.height)}async function equirectToCubemapFaces(e,n,t){var r=await e.metadata(),a=await e.raw().toBuffer();let o=null;if(3===r.channels){var i=(r.width||0)*(r.height||0);o=new Uint8Array(4*i);for(let e=0;e<i;++e)o[4*e+0]=a[3*e+0],o[4*e+1]=a[3*e+1],o[4*e+2]=a[3*e+2],o[4*e+3]=255}var e={width:r.width||0,height:r.height||0,data:o?Buffer.from(o.buffer):a},b=[];for(let e=0;e<6;++e)b.push({width:n,height:n,data:new Uint8Array(n*n*4)});return transformToCubeFaces(e,b,t=t||DEFAULT_OPTIONS),b}exports.equirectToCubemapFaces=equirectToCubemapFaces;