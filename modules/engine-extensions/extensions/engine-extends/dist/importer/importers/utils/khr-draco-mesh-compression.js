"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.decodeDracoGeometry=void 0;const draco3dgltf_1=__importDefault(require("draco3dgltf")),decoderModule=draco3dgltf_1.default.createDecoderModule({});function decodeDracoGeometry(e){var r=new decoderModule.Decoder,e=decodeDracoData(e.buffer,r,e);return decoderModule.destroy(r),e}function decodeDracoData(e,r,t){var o=new decoderModule.DecoderBuffer,d=(o.Init(new Int8Array(e),e.byteLength),r.GetEncodedGeometryType(o));let n,c;switch(d){case decoderModule.TRIANGULAR_MESH:n=new decoderModule.Mesh,c=r.DecodeBufferToMesh(o,n);break;case decoderModule.POINT_CLOUD:n=new decoderModule.PointCloud,c=r.DecodeBufferToPointCloud(o,n);break;default:throw new Error(`Unknown geometry type ${d}.`)}if(c.ok()&&0!==n.ptr)return e={vertices:decodeAttributes(n,r,t)},d===decoderModule.TRIANGULAR_MESH&&t.indices&&(t=decodeIndices(n,r,t.indices),e.indices=t),decoderModule.destroy(n),decoderModule.destroy(o),e;throw new Error("Decoding failed: "+c.error_msg())}function decodeAttributes(e,t,o){var d=e.num_points(),n={};for(const A of Object.keys(o.attributes)){var{uniqueId:c,storageConstructor:a,components:u}=o.attributes[A],i=u*d,s=t.GetAttributeByUniqueId(e,c);if(s.num_components()!==u)throw new Error(`Decompression error: components-per-attribute of ${A} mismatch.`);let r;switch(a){case Float32Array:r=new decoderModule.DracoFloat32Array,t.GetAttributeFloatForAllPoints(e,s,r);break;case Int8Array:r=new decoderModule.DracoInt8Array,t.GetAttributeInt8ForAllPoints(e,s,r);break;case Int16Array:r=new decoderModule.DracoInt16Array,t.GetAttributeInt16ForAllPoints(e,s,r);break;case Int32Array:r=new decoderModule.DracoInt32Array,t.GetAttributeInt32ForAllPoints(e,s,r);break;case Uint8Array:r=new decoderModule.DracoUInt8Array,t.GetAttributeUInt8ForAllPoints(e,s,r);break;case Uint16Array:r=new decoderModule.DracoUInt16Array,t.GetAttributeUInt16ForAllPoints(e,s,r);break;case Uint32Array:r=new decoderModule.DracoUInt32Array,t.GetAttributeUInt32ForAllPoints(e,s,r);break;default:throw new Error("THREE.DRACOLoader: Unexpected attribute type.")}if(i!==r.size())throw new Error(`Decompression error: ${A} data size mismatch.`);var l=new a(i);for(let e=0;e<i;++e)l[e]=r.GetValue(e);n[A]=l,decoderModule.destroy(r)}return n}function decodeIndices(r,t,e){var o=r.num_faces(),d=new e(3*o),n=new decoderModule.DracoInt32Array;for(let e=0;e<o;++e){t.GetFaceFromMesh(r,e,n);var c=3*e;d[c]=n.GetValue(0),d[1+c]=n.GetValue(1),d[2+c]=n.GetValue(2)}return decoderModule.destroy(n),d}exports.decodeDracoGeometry=decodeDracoGeometry;