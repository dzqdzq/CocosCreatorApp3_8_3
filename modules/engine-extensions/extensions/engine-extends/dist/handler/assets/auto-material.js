"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.autoGenerateMaterial=void 0;const asset_db_1=require("@editor/asset-db"),fs_extra_1=require("fs-extra"),path_1=require("path"),cc_1=__importDefault(require("cc")),fs_1=require("fs");let defaultSettings={properties:{},effectMap:{},effectPriority:[],_ready:!1};async function initDefaultSettings(){var e;return defaultSettings._ready||(e=await Editor.Message.request("engine","query-engine-info"),(defaultSettings=(0,fs_extra_1.readJSONSync)((0,path_1.join)(e.typescript.builtin,"editor/auto_material_settings.json")))._ready=!0),defaultSettings}async function autoGenerateMaterial(){var e=Editor.Selection.getSelected("asset");return e.length&&(e=await queryTextures(e)).length?generateMaterial(e):(Editor.Dialog.warn(Editor.I18n.t("engine-extends.autoMaterial.atLeastOnTexture"),{buttons:["confirm"]}),[])}async function queryTextures(e){const t={};for(const a of e){var r=(0,asset_db_1.queryAsset)(a);r&&("texture"===r.meta.importer?t[r.uuid]=r:"directory"===r.meta.importer?(await Manager.assetManager.queryAssets({pattern:r.url+"/**/*",ccType:"cc.Texture2D"})).forEach(e=>t[e.uuid]=(0,asset_db_1.queryAsset)(e.uuid)):"image"===r.meta.importer&&"texture"===r.meta.userData.type&&(r=Object.values(r.subAssets).find(e=>"texture"===e.meta.importer))&&(t[r.uuid]=r))}return Object.values(t)}async function generateMaterial(e){const t=await Editor.Profile.getProject("engine-extends","autoMaterialConfig")||{},s={},n=(await initDefaultSettings(),Object.keys(defaultSettings.properties).forEach(e=>{t[e]?s[t[e]]=e:s[defaultSettings.properties[e].matchString]=e}),[]),o={};if(e.forEach(e=>{var t=e.displayName||e._name;const r=[];var a,t=t.split("_");let i=-1;t.forEach((e,t)=>{s[e]&&(-1===i&&(i=t),r.push(s[e]))}),r.length?(t=t.splice(0,i).join("_"))?o[t]?o[t].textureConfigs.push({properties:r,uuid:e.uuid}):(a=(0,path_1.join)(findAssetDirName(e),t+".mtl"),(0,fs_1.existsSync)(a)&&n.push(a),o[t]={textureConfigs:[{properties:r,uuid:e.uuid}],dest:a}):console.error("Invalid texture name "+e.url):console.error("Can not find invalid config in texture name "+e.url)}),!Object.keys(o).length)return[];if(n.length&&(6<n.length&&(n.length=6,n.push("......")),0===(await Editor.Dialog.info(""+Editor.I18n.t("engine-extends.autoMaterial.hasExistTip",{url:`
 ${n.join("\n")} 
`}),{title:Editor.I18n.t("ENGINE.assets.autoGenerateMaterial"),buttons:[Editor.I18n.t("engine-extends.autoMaterial.cancel"),Editor.I18n.t("engine-extends.autoMaterial.overwrite")],cancel:0,default:0})).response))return[];return createMaterialsFromConfigs(o)}async function createMaterialsFromConfigs(a){return Promise.all(Object.keys(a).map(async e=>{var t=a[e];const r=createMaterial(e,t.textureConfigs);t.textureConfigs.forEach(e=>{updateMaterialTexture(r,EditorExtends.serialize.asAsset(e.uuid,cc_1.default.Texture2D),e.properties)});e=EditorExtends.serialize(r);return await(0,fs_extra_1.outputJSON)(t.dest,JSON.parse(e),{spaces:4}),t.dest}))}function findAssetDirName(e){return e.parent&&e.parent.source?(0,path_1.dirname)(e.parent.source):(0,path_1.join)(Editor.Project.path,"assets")}function createMaterial(e,t){var r=new cc_1.default.Material;r.name=e;let a="";for(const i of defaultSettings.effectPriority){for(const s of t)if(s.properties.includes(i)){a=defaultSettings.effectMap[i];break}if(a)break}return r._effectAsset=EditorExtends.serialize.asAsset(a||defaultSettings.effectMap.default,cc_1.default.EffectAsset),r}function updateMaterialTexture(e,t,r){const a=e._defines[0]||{},i=e._props[0]||{};r.forEach(e=>{a[defaultSettings.properties[e].defineName]=!0,i[e]=t}),e._defines=[a],e._props=[i]}exports.autoGenerateMaterial=autoGenerateMaterial;