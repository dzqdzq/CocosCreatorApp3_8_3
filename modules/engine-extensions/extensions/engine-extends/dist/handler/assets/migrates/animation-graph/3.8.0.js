"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.migrateAnimationGraph_3_8_0=void 0;const TYPE_ID_BINARY_CONDITION="cc.animation.BinaryCondition";function migrateAnimationGraph_3_8_0(i){migrateTransitionBindings(i)}function migrateTransitionBindings(i){const s=(()=>{let a;if(i.visitTypedObject("cc.animation.AnimationGraph",i=>{if(a)throw new Error("Migration error: the old serialized animation graph assets has more than one animation graph objects!");a=i}),a)return a;throw new Error("Migration error: the old serialized animation graph assets has no any animation graph object!")})();i.visitTypedObject(TYPE_ID_BINARY_CONDITION,i=>{const{lhs:e,rhs:a,...n}=i;if(""!==(a.variable??""))throw new Error("Migration error: the old serialized binary condition is asserted to have only constant value but instead saw "+a.variable);let r=TCBindingValueType.FLOAT;var t=s._variables[e.variable];if(t){let i;(o=i=i||{})[o.FLOAT=0]="FLOAT";let a=!(o[o.INTEGER=3]="INTEGER");"cc.animation.PlainVariable"===t.__type__&&((o=t._type??0)===i.FLOAT?(r=TCBindingValueType.FLOAT,a=!0):o===i.INTEGER&&(r=TCBindingValueType.INTEGER,a=!0)),a||console.debug(`The condition's lhs variable ${e.variable} was previously `+"bound to a variable with mismatched type: "+JSON.stringify(t,void 0,2))}else console.debug(`The condition's lhs variable ${e.variable} was previously not bound.`);var o={...n,lhs:e.value,lhsBinding:{__type__:"cc.animation.TCVariableBinding",type:r,variableName:e.variable},rhs:i.rhs.value};clearEntries(i),Object.assign(i,o)})}var TCBindingValueType;function clearEntries(i){for(const a in i)delete i[a]}exports.migrateAnimationGraph_3_8_0=migrateAnimationGraph_3_8_0,function(i){i[i.FLOAT=0]="FLOAT",i[i.INTEGER=3]="INTEGER"}(TCBindingValueType=TCBindingValueType||{});