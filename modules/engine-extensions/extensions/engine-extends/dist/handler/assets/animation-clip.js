"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,a,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(a,t);i&&("get"in i?a.__esModule:!i.writable&&!i.configurable)||(i={enumerable:!0,get:function(){return a[t]}}),Object.defineProperty(e,r,i)}:function(e,a,t,r){e[r=void 0===r?t:r]=a[t]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding(a,e,t);return __setModuleDefault(a,e),a},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.migrate_1_0_10=exports.migrate_1_0_8=exports.changeCCType=exports.migrate_1_0_3=void 0;const cc_1=require("cc"),fs_extra_1=require("fs-extra"),path_1=require("path"),migrate_animation_clip_3_3_0_1=require("./migrates/migrate-animation-clip-3-3-0"),migrates_1=require("./scene/migrates"),migration_utils_1=require("./utils/migration-utils"),serialize_library_1=require("./utils/serialize-library"),cc=__importStar(require("cc")),fs_extra_2=__importDefault(require("fs-extra")),path_2=__importDefault(require("path")),archive_space_1=require("./migrates/archive-space"),utils_1=require("../utils"),AnimationHandler={name:"animation-clip",assetType:"cc.AnimationClip",createInfo:{generateMenuInfo(){return[{label:"i18n:ENGINE.assets.newAnimation",fullFileName:"animation.anim",template:`db://internal/default_file_content/${AnimationHandler.name}/default.anim`,group:"animation"}]}},importer:{version:"2.0.3",migrations:[{version:"1.0.2",migrate:migrates_1.migrateImageUuid},{version:"1.0.3",migrate:migrate_1_0_3},{version:"1.0.4",async migrate(e){await(0,migrates_1.migrateNameToId)(e,!0)}},{version:"1.0.5",migrate:migrates_1.migrateNameToId},{version:"1.0.6",migrate:migrateType},{version:"1.0.7",migrate:migrateSharedMaterials},{version:"1.0.8",migrate:migrate_1_0_8},{version:"1.0.10",migrate:migrate_1_0_10},{version:"1.0.11",migrate:migrateComponentNames},{version:"2.0.0",migrate:async e=>{var e=e.getSwapSpace(),a=new migration_utils_1.Archive(e.json),a=(await(0,migrate_animation_clip_3_3_0_1.migrateAnimationClip330)(a),a.get());e.json=a}}],migrationHook:{...migration_utils_1.migrationHook,async pre(a){try{var e=path_2.default.join(a.temp,"migration-backup","source"),t=path_2.default.join(a.temp,"migration-backup","meta");await fs_extra_2.default.ensureDir(path_2.default.dirname(e)),await fs_extra_2.default.copyFile(a.source,e),await fs_extra_2.default.ensureDir(path_2.default.dirname(t)),await fs_extra_2.default.copyFile(a.source+".meta",t)}catch(e){console.error(`Error when attempt to save asset ${a.source} before migration.`)}return migration_utils_1.migrationHook.pre(a)},async post(e,a){return migration_utils_1.migrationHook.post(e,a)}},async force(e){return e.userData.name!==e.basename},async import(a){var e=a.userData;try{var t=await(0,fs_extra_1.readFile)(a.source,"utf8"),r=JSON.parse(t),i=cc.deserialize.Details.pool.get(),s=cc.deserialize(r,i,void 0),n=i.uuidList.length;for(let e=0;e<n;++e){var o=i.uuidList[e],_=i.uuidObjList[e],c=i.uuidPropList[e],m=i.uuidTypeList[e];const a=new(cc.js.getClassById(m)??cc.Asset);a._uuid=o+"",_[c]=a}s.name=(0,path_1.basename)(a.source,".anim"),e.name=s.name,s.hash;var{extension:u,data:l}=(0,serialize_library_1.serializeForLibrary)(s),p=(await a.saveToLibrary(u,l),(0,utils_1.getDependUUIDList)(t));a.setData("depends",p)}catch(e){return console.error(e),!1}return!0}}},walkCCClass=(exports.default=AnimationHandler,(e,a,t)=>{if(Array.isArray(e))e.forEach(e=>{walkCCClass(e,a,t)});else if(e&&"object"==typeof e)if(e.__type__===a)t(e);else for(const r of Object.values(e))walkCCClass(r,a,t)}),walkCCClasses=(t,r)=>{if(Array.isArray(t))t.forEach((e,a)=>{t[a]=walkCCClasses(e,r)});else if(t&&"object"==typeof t){if(t.__type__ in r)return r[t.__type__](t);for(const e of Object.keys(t))t[e]=walkCCClasses(t[e],r)}return t};async function migrate_1_0_3(e){e=e.getSwapSpace().json||await(0,fs_extra_1.readJSON)(e.source);walkCCClass(e,cc.js.getClassName(cc.AnimationClip),e=>{var{_curves:a,curveDatas:t}=e;Array.isArray(a)&&0!==a.length&&"object"==typeof t&&0!==Object.keys(t).length&&delete e._curves})}function changeCCType(e,a){return e.__type__=a,e}async function migrate_1_0_8(e){e=e.getSwapSpace().json||await(0,fs_extra_1.readJSON)(e.source);walkCCClasses(e,{"cc.ComponentModifier":e=>changeCCType(e,cc_1.js.getClassName(cc_1.animation.ComponentPath)),"cc.HierachyModifier":e=>changeCCType(e,cc_1.js.getClassName(cc_1.animation.HierarchyPath)),"cc.UniformCurveValueAdapter":e=>changeCCType(e,cc_1.js.getClassName(cc_1.animation.UniformProxyFactory))})}async function migrate_1_0_10(e){var a=e.getSwapSpace(),e=a.json||await(0,fs_extra_1.readJSON)(e.source),e=new migration_utils_1.Archive(e);e.visitTypedObject(archive_space_1.ArchiveSpace.ANIMATION_CLIP_TYPE_NAME,e=>{var a;e.curveDatas&&(a=function(e){var a=[];for(const _ of Object.keys(e)){var t={__type__:"cc.animation.HierarchyPath",path:_},r=e[_];if(r.props)for(const c of Object.keys(r.props)){var i=r.props[c];a.push({modifiers:[t,c],data:i})}if(r.comps)for(const m of Object.keys(r.comps)){var s={__type__:"cc.animation.ComponentPath",component:m},n=r.comps[m];for(const u of Object.keys(n)){var o=n[u];a.push({modifiers:[t,s,u],data:o})}}}return a}(e.curveDatas),e._curves=a,delete e.curveDatas)}),a.json=e.get()}async function migrateComponentNames(e){var a=e.getSwapSpace().json||await(0,fs_extra_1.readJSON)(e.source);for(let e=0;e<a.length;e++){var t=a[e],r=migrates_1._renameMap[t.component];r&&(t.component=r)}}async function migrateType(e){e=e.getSwapSpace().json||await(0,fs_extra_1.readJSON)(e.source);"cc.AnimationClip"!==e.__type__&&(e.__type__="cc.AnimationClip")}async function migrateSharedMaterials(e){var e=e.getSwapSpace().json||await(0,fs_extra_1.readJSON)(e.source);e&&(e=e[0])&&e.__type__===cc_1.js.getClassName(cc_1.AnimationClip)&&(e=e._curves)&&0<e.length&&e.forEach(e=>{e&&(e=e.modifiers)&&2<=e.length&&"sharedMaterials"===e[1]&&(e[1]="materials")})}exports.migrate_1_0_3=migrate_1_0_3,exports.changeCCType=changeCCType,exports.migrate_1_0_8=migrate_1_0_8,exports.migrate_1_0_10=migrate_1_0_10;