"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.simplifyMesh=exports.getDefaultSimplifyOptions=exports.MeshSimplify=void 0;const cc_1=require("cc"),cc_2=require("cc"),_tempVec2=new cc_1.Vec2,_tempVec3=new cc_1.Vec3,_tempVec3_2=new cc_1.Vec3,_tempVec3_3=new cc_1.Vec3,_tempVec4=new cc_1.Vec4,_tempColor=new cc_1.Color,DenomEpilson=1e-8;function colorScaleAndAdd(t,e,s,i){t.r=Math.max(e.r+s.r*i,255),t.g=Math.max(e.g+s.g*i,255),t.b=Math.max(e.b+s.b*i,255),t.a=Math.max(e.a+s.a*i,255)}class SymetricMatrix{constructor(){this.m=new Array(10).fill(0)}set(t,e,s,i,r,c,n,h,o,a){return this.m[0]=t,this.m[1]=e,this.m[2]=s,this.m[3]=i,this.m[4]=r,this.m[5]=c,this.m[6]=n,this.m[7]=h,this.m[8]=o,this.m[9]=a,this}makePlane(t,e,s,i){return this.set(t*t,t*e,t*s,t*i,e*e,e*s,e*i,s*s,s*i,i*i)}det(t,e,s,i,r,c,n,h,o){return this.m[t]*this.m[r]*this.m[o]+this.m[s]*this.m[i]*this.m[h]+this.m[e]*this.m[c]*this.m[n]-this.m[s]*this.m[r]*this.m[n]-this.m[t]*this.m[c]*this.m[h]-this.m[e]*this.m[i]*this.m[o]}add(t){return(new SymetricMatrix).set(this.m[0]+t.m[0],this.m[1]+t.m[1],this.m[2]+t.m[2],this.m[3]+t.m[3],this.m[4]+t.m[4],this.m[5]+t.m[5],this.m[6]+t.m[6],this.m[7]+t.m[7],this.m[8]+t.m[8],this.m[9]+t.m[9])}addSelf(t){this.m[0]+=t.m[0],this.m[1]+=t.m[1],this.m[2]+=t.m[2],this.m[3]+=t.m[3],this.m[4]+=t.m[4],this.m[5]+=t.m[5],this.m[6]+=t.m[6],this.m[7]+=t.m[7],this.m[8]+=t.m[8],this.m[9]+=t.m[9]}}class Triangle{constructor(){this.v=new Array(3),this.va=new Array(3),this.err=new Array(4),this.deleted=!1,this.dirty=!1,this.n=new cc_1.Vec3}}class Vertex{constructor(){this.p=new cc_1.Vec3,this.tstart=-1,this.tcount=-1,this.q=new SymetricMatrix,this.border=!1}}class Ref{}class BorderVertex{constructor(t,e){this.index=t,this.hash=e}}class SimplificationOptions{constructor(){this.preserveSurfaceCurvature=!1,this.preserveBorderEdges=!1,this.preserveUVSeamEdges=!1,this.preserveUVFoldoverEdges=!1,this.enableSmartLink=!0,this.vertexLinkDistance=Number.MIN_VALUE,this.maxIterationCount=100,this.agressiveness=7}}class MeshSimplify{constructor(){this.simplificationOptions=new SimplificationOptions,this._triangles=[],this._vertices=[],this._vertNormals=null,this._vertTangents=null,this._vertUV2D=null,this._vertUV3D=null,this._vertUV4D=null,this._vertColors=null,this._vertJoints=null,this._vertWeights=null,this._refs=[],this._geometricInfo="",this._triangleHashSet1=new Map,this._triangleHashSet2=new Map}init(t,e,s){if(this._vertices=t.map((t,e)=>{var s=new Vertex;return s.index=e,s.p=new cc_1.Vec3(t.x,t.y,t.z),s}),s.uvs&&0<s.uvs.length){this._vertUV2D=[];for(let t=0;t<s.uvs.length;t+=2)this._vertUV2D.push(new cc_1.Vec2(s.uvs[t],s.uvs[t+1]))}if(s.normals&&0<s.normals.length){this._vertNormals=[];for(let t=0;t<s.normals.length;t+=3)this._vertNormals.push(new cc_1.Vec3(s.normals[t],s.normals[t+1],s.normals[t+2]))}if(s.tangents&&0<s.tangents.length){this._vertTangents=[];for(let t=0;t<s.tangents.length;t+=4)this._vertTangents.push(new cc_1.Vec4(s.tangents[t],s.tangents[t+1],s.tangents[t+2],s.tangents[t+3]))}if(s.colors&&0<s.colors.length){this._vertColors=[];for(let t=0;t<s.colors.length;t+=4)this._vertColors.push(new cc_1.Color(s.colors[t],s.colors[t+1],s.colors[t+2],s.colors[t+3]))}if(s.joints&&0<s.joints.length){this._vertJoints=[];for(let t=0;t<s.joints.length;t+=4)this._vertJoints.push(new cc_1.Vec4(s.joints[t],s.joints[t+1],s.joints[t+2],s.joints[t+3]))}if(s.weights&&0<s.weights.length){this._vertWeights=[];for(let t=0;t<s.weights.length;t+=4)this._vertWeights.push(new cc_1.Vec4(s.weights[t],s.weights[t+1],s.weights[t+2],s.weights[t+3]))}this._triangles=e.map(t=>{var e=new Triangle;return e.v[0]=t.a,e.v[1]=t.b,e.v[2]=t.c,e.va[0]=t.a,e.va[1]=t.b,e.va[2]=t.c,e})}_resize(t,e){if(e<t.length)return t.splice(e);t.length}_move(e,s,i,r){for(let t=0;t<r;t++)e[s+t].tvertex=e[i+t].tvertex,e[s+t].tid=e[i+t].tid}compactMesh(){let e=0;for(let t=0;t<this._vertices.length;t++)this._vertices[t].tcount=0;for(let t=0;t<this._triangles.length;t++)if(!this._triangles[t].deleted){var s,i,r=this._triangles[t];for(let t=0;t<3;t++)r.va[t]!=r.v[t]&&(s=r.va[t],i=r.v[t],cc_1.Vec3.copy(this._vertices[s].p,this._vertices[i].p),null!=this._vertWeights&&cc_1.Vec4.copy(this._vertWeights[s],this._vertWeights[i]),null!=this._vertJoints&&cc_1.Vec4.copy(this._vertJoints[s],this._vertJoints[i]),r.v[t]=r.va[t]);this._triangles[e++]=r;for(let t=0;t<3;t++)this._vertices[r.v[t]].tcount=1}this._resize(this._triangles,e);for(let t=e=0;t<this._vertices.length;t++)this._vertices[t].tcount&&(this._vertices[t].tstart=e,this._vertices[e].index=e,this._vertices[e].p=this._vertices[t].p,this._vertUV2D&&(this._vertUV2D[e]=this._vertUV2D[t]),this._vertNormals&&(this._vertNormals[e]=this._vertNormals[t]),this._vertTangents&&(this._vertTangents[e]=this._vertTangents[t]),this._vertColors&&(this._vertColors[e]=this._vertColors[t]),this._vertJoints&&(this._vertJoints[e]=this._vertJoints[t]),this._vertWeights&&(this._vertWeights[e]=this._vertWeights[t]),e++);for(let t=0;t<this._triangles.length;t++){var c=this._triangles[t];for(let t=0;t<3;t++)c.v[t]=this._vertices[c.v[t]].tstart}this._resize(this._vertices,e)}_simplifyMesh(e,s){void 0===s&&(s=this.simplificationOptions.agressiveness),console.time("simplify_mesh");let i,r;for(i=0,r=this._triangles.length;i<r;i++)this._triangles[i].deleted=!1;let c=0;var n=[],h=[],o=this._triangles.length;for(let t=0;t<this.simplificationOptions.maxIterationCount&&!(o-c<=e);t++){t%5==0&&this._updateMesh(t);for(let t=0;t<this._triangles.length;t++)this._triangles[t].dirty=!1;var a=1e-13*Math.pow(t+3,s);for(i=0,r=this._triangles.length;i<r;i++){var l=this._triangles[i];if(!(l.err[3]>a||l.deleted||l.dirty)){for(let e=0;e<3;e++)if(l.err[e]<a){var _=l.v[e],v=this._vertices[_],m=l.v[(e+1)%3],p=this._vertices[m];if(v.border==p.border&&(v.uvSteam==p.uvSteam&&v.uvFoldover==p.uvFoldover&&!(this.simplificationOptions.preserveBorderEdges&&v.border||this.simplificationOptions.preserveUVSeamEdges&&v.uvSteam||this.simplificationOptions.preserveUVFoldoverEdges&&v.uvFoldover))){var u=new cc_1.Vec3;if(this._calculateError(_,m,u),this._resize(n,v.tcount),this._resize(h,p.tcount),!this._flipped(u,_,m,v,p,n)&&!this._flipped(u,m,_,p,v,h)){var m=l.v[(e+2)%3],g=new cc_1.Vec3;this.calculateBarycentricCoords(u,v.p,p.p,this._vertices[m].p,g),v.p=u,v.q.addSelf(p.q);let t=l.va[e];m=l.va[(e+1)%3],u=l.va[(e+2)%3],m=(this._interpolateVertexAttributes(t,t,m,u,g),this._vertices[_].uvSteam&&(t=-1),this._refs.length),u=(c=this._updateTriangles(_,t,v,n,c),c=this._updateTriangles(_,t,p,h,c),this._refs.length-m);u<=v.tcount?u&&this._move(this._refs,v.tstart,m,u):v.tstart=m,v.tcount=u;break}}}if(o-c<=e)break}}}this.compactMesh(),console.timeEnd("simplify_mesh")}_flipped(e,t,s,i,r,c){for(let t=0;t<i.tcount;t++){var n=this._triangles[this._refs[i.tstart+t].tid];if(!n.deleted){var h=this._refs[i.tstart+t].tvertex,o=n.v[(h+1)%3],h=n.v[(h+2)%3];if(o==s||h==s)c[t]=!0;else{if(cc_1.Vec3.subtract(_tempVec3,this._vertices[o].p,e),_tempVec3.normalize(),cc_1.Vec3.subtract(_tempVec3_2,this._vertices[h].p,e),_tempVec3_2.normalize(),.999<Math.abs(cc_1.Vec3.dot(_tempVec3,_tempVec3_2)))return!0;if(cc_1.Vec3.cross(_tempVec3_3,_tempVec3,_tempVec3_2),_tempVec3_3.normalize(),c[t]=!1,cc_1.Vec3.dot(_tempVec3_3,n.n)<.2)return!0}}}return!1}_updateTriangles(e,s,i,r,c){var n=new cc_1.Vec3;for(let t=0;t<i.tcount;t++){var h=this._refs[i.tstart+t],o=this._triangles[h.tid];o.deleted||(r[t]?(o.deleted=!0,c++):(o.v[h.tvertex]=e,-1!=s&&(o.va[h.tvertex]=s),o.dirty=!0,o.err[0]=this._calculateError(o.v[0],o.v[1],n),o.err[1]=this._calculateError(o.v[1],o.v[2],n),o.err[2]=this._calculateError(o.v[2],o.v[0],n),o.err[3]=Math.min(o.err[0],o.err[1],o.err[2]),this._refs.push(h)))}return c}_updateMesh(t){if(0<t){let e=0;for(let t=0;t<this._triangles.length;t++){var s=this._triangles[t];s.deleted||(this._triangles[e++]=s)}this._triangles.splice(e)}if(this._updateReferences(),0==t){let e=0,i=17976931348623157e292,r=-17976931348623157e292;for(let t=0;t<this._vertices.length;t++)this._vertices[t].border=!1,this._vertices[t].uvSteam=!1,this._vertices[t].uvFoldover=!1;for(let t=0;t<this._vertices.length;t++){var c,n=this._vertices[t],h=[],o=[];for(let t=0;t<n.tcount;t++){var a=this._refs[n.tstart+t].tid,l=this._triangles[a];for(let s=0;s<3;s++){let t=0,e=l.v[s];for(;t<h.length&&o[t]!=e;)t++;t==h.length?(h.push(1),o.push(e)):h[t]++}}for(let t=0;t<h.length;t++)1==h[t]&&(this._vertices[o[t]].border=!0,e++,this.simplificationOptions.enableSmartLink)&&(c=o[t],this._vertices[c].p.x<i&&(i=this._vertices[c].p.x),this._vertices[c].p.x>r)&&(r=this._vertices[c].p.x)}if(this.simplificationOptions.enableSmartLink){var _=new Array(e);let s=0;var v,m=r-i;for(let t=0;t<this._vertices.length;t++)this._vertices[t].border&&(v=2147483647*((this._vertices[t].p.x-i)/m*2-1),_[s]=new BorderVertex(t,v),++s);_.sort((t,e)=>t.hash-e.hash);var p=this.simplificationOptions.vertexLinkDistance*this.simplificationOptions.vertexLinkDistance,t=Math.sqrt(p),u=Math.max(t/m*2147483647,1);for(let e=0;e<s;e++){var g=_[e].index;if(-1!=g){var f=this._vertices[g].p;for(let t=e+1;t<s;t++){var d=_[t].index;if(-1!=d){if(_[t].hash-_[e].hash>u)break;var V=this._vertices[d].p;if((f.x-V.x)*(f.x-V.x)+(f.y-V.y)*(f.y-V.y)+(f.z-V.z)*(f.z-V.z)<=p){_[t].index=-1,this._vertices[g].border=!1,this._vertices[d].border=!1,this._vertUV2D[g].equals(this._vertUV2D[d])?(this._vertices[g].uvFoldover=!0,this._vertices[d].uvFoldover=!0):(this._vertices[g].uvSteam=!0,this._vertices[d].uvSteam=!0);var x=this._vertices[d].tcount,y=this._vertices[d].tstart;for(let t=0;t<x;t++){var w=this._refs[y+t];this._triangles[w.tid].v[w.tvertex]=g}}}}}}this._updateReferences()}for(let t=0;t<this._vertices.length;t++)this._vertices[t].q=new SymetricMatrix;var A=new cc_1.Vec3,b=new cc_1.Vec3,T=new Array(3),S=new SymetricMatrix;for(let t=0;t<this._triangles.length;t++){var M=this._triangles[t],C=new cc_1.Vec3;for(let t=0;t<3;t++)T[t]=this._vertices[M.v[t]].p;cc_1.Vec3.subtract(A,T[1],T[0]),cc_1.Vec3.subtract(b,T[2],T[0]),cc_1.Vec3.cross(C,A,b),cc_1.Vec3.normalize(C,C),M.n=C,S.makePlane(C.x,C.y,C.z,-C.dot(T[0]));for(let t=0;t<3;t++)this._vertices[M.v[t]].q.addSelf(S)}for(let t=0;t<this._triangles.length;t++){var z=this._triangles[t],N=new cc_1.Vec3;for(let t=0;t<3;t++)z.err[t]=this._calculateError(z.v[t],z.v[(t+1)%3],N);z.err[3]=Math.min(z.err[0],z.err[1],z.err[2])}}}_vertexError(t,e,s,i){return t.m[0]*e*e+2*t.m[1]*e*s+2*t.m[2]*e*i+2*t.m[3]*e+t.m[4]*s*s+2*t.m[5]*s*i+2*t.m[6]*s+t.m[7]*i*i+2*t.m[8]*i+t.m[9]}_calculateError(e,s,i){var e=this._vertices[e],s=this._vertices[s],r=e.q.add(s.q),t=e.border&&s.border;let c=0;var n=r.det(0,1,2,1,4,5,2,5,7);if(0===n||t){var t=e.p,h=s.p,o=new cc_1.Vec3,a=(cc_1.Vec3.add(o,t,h),o.multiplyScalar(.5),this._vertexError(r,t.x,t.y,t.z)),l=this._vertexError(r,h.x,h.y,h.z),_=this._vertexError(r,o.x,o.y,o.z);a===(c=Math.min(a,l,_))&&cc_1.Vec3.copy(i,t),l===c&&cc_1.Vec3.copy(i,h),_===c&&cc_1.Vec3.copy(i,o)}else{i.x=-1/n*r.det(1,2,3,4,5,6,5,7,8),i.y=1/n*r.det(0,2,3,1,5,6,2,7,8),i.z=-1/n*r.det(0,1,3,1,4,6,2,5,8);let t=0;this.simplificationOptions.preserveSurfaceCurvature&&(t=this._curvatureError(e,s)),c=this._vertexError(r,i.x,i.y,i.z)+t}return c}_updateReferences(){for(let t=0;t<this._vertices.length;t++)this._vertices[t].tstart=0,this._vertices[t].tcount=0;for(let t=0;t<this._triangles.length;t++){var e=this._triangles[t];for(let t=0;t<3;t++)this._vertices[e.v[t]].tcount++}let s=0;for(let t=0;t<this._vertices.length;t++){var i=this._vertices[t];i.tstart=s,s+=i.tcount,i.tcount=0}for(let t=this._refs.length;t<3*this._triangles.length;t++)this._refs[t]=new Ref;for(let e=0;e<this._triangles.length;e++){var r=this._triangles[e];for(let t=0;t<3;t++){var c=this._vertices[r.v[t]];this._refs[c.tstart+c.tcount].tid=e,this._refs[c.tstart+c.tcount].tvertex=t,c.tcount++}}}_curvatureError(t,e){cc_1.Vec3.subtract(_tempVec3,t.p,e.p);var s=_tempVec3.length(),i=this._triangleHashSet1;i.clear(),this._getTrianglesContainingVertex(t,i),this._getTrianglesContainingVertex(e,i);const r=this._triangleHashSet2;r.clear(),this._getTrianglesContainingBothVertices(t,e,r);let c=0;return i.forEach((t,e)=>{let s=0;const i=e.n.clone();r.forEach((t,e)=>{e=e.n.clone(),e=cc_1.Vec3.dot(i,e);e>s&&(s=e)}),s>c&&(c=s)}),s*c}_getTrianglesContainingVertex(t,e){var s=t.tcount,i=t.tstart;for(let t=i;t<i+s;t++)e.set(this._triangles[this._refs[t].tid],!0)}_getTrianglesContainingBothVertices(t,e,s){var i=t.tcount,r=t.tstart;for(let t=r;t<r+i;t++){var c=this._refs[t].tid,c=this._triangles[c];this._vertices[c.v[0]].index!=e.index&&this._vertices[c.v[1]].index!=e.index&&this._vertices[c.v[2]].index!=e.index||s.set(c,!0)}}simplifyMesh(t,e=7){try{t=Math.round(t);var s=JSON.parse(this._geometricInfo),i=(this.init(s.vertices,s.faces,s),console.time("simplify"),this._simplifyMesh(t,e),console.timeEnd("simplify"),console.log("new vertices "+this._vertices.length,"old faces "+this._triangles.length),{positions:[],indices:[],attrs:{}}),r=this._vertices.length;for(let t=0;t<this._vertices.length;t++){var c=this._vertices[t];i.positions.push(c.p.x),i.positions.push(c.p.y),i.positions.push(c.p.z)}if(this._vertUV2D){this._resize(this._vertUV2D,r),i.uvs=[];for(let t=0;t<this._vertUV2D.length;t++){var n=this._vertUV2D[t];i.uvs.push(n.x),i.uvs.push(n.y)}}if(this._vertNormals){this._resize(this._vertNormals,r),i.normals=[];for(let t=0;t<this._vertNormals.length;t++){var h=this._vertNormals[t];i.normals.push(h.x),i.normals.push(h.y),i.normals.push(h.z)}}if(this._vertTangents){this._resize(this._vertTangents,r),i.tangents=[];for(let t=0;t<this._vertTangents.length;t++){var o=this._vertTangents[t];i.tangents.push(o.x),i.tangents.push(o.y),i.tangents.push(o.z),i.tangents.push(o.w)}}if(this._vertColors){this._resize(this._vertColors,r),i.colors=[];for(let t=0;t<this._vertColors.length;t++){var a=this._vertColors[t];i.colors.push(a.r),i.colors.push(a.g),i.colors.push(a.b),i.colors.push(a.a)}}if(this._vertJoints){this._resize(this._vertJoints,r);var l=i.attrs.joints=[];for(let t=0;t<this._vertJoints.length;t++){var _=this._vertJoints[t];l.push(_.x),l.push(_.y),l.push(_.z),l.push(_.w)}}if(this._vertWeights){this._resize(this._vertWeights,r);var v=i.attrs.weights=[];for(let t=0;t<this._vertWeights.length;t++){var m=this._vertWeights[t];v.push(m.x),v.push(m.y),v.push(m.z),v.push(m.w)}}for(let t=0;t<this._triangles.length;t++){var p=this._triangles[t];i.indices.push(p.v[0]),i.indices.push(p.v[1]),i.indices.push(p.v[2])}return i}catch(t){console.error(t)}}buildGeometric(e){var s=[];if(e.indices)for(let t=0;t<e.indices.length;t+=3)s.push({a:e.indices[t],b:e.indices[t+1],c:e.indices[t+2]});else{var i=e.positions.length/3;for(let t=0;t<i;t+=3)s.push({a:3*t+0,b:3*t+1,c:3*t+2})}e.faces=s;var r=[];for(let t=0;t<e.positions.length;t+=3)r.push(new cc_1.Vec3(e.positions[t],e.positions[t+1],e.positions[t+2]));e.vertices=r;for(const t in e)e[t]?e[t]instanceof Array||(e[t]=Array.from(e[t])):delete e[t];this._geometricInfo=JSON.stringify(e)}calculateBarycentricCoords(t,e,s,i,r){var c=new cc_1.Vec3,n=new cc_1.Vec3,h=new cc_1.Vec3,s=(cc_1.Vec3.subtract(c,s,e),cc_1.Vec3.subtract(n,i,e),cc_1.Vec3.subtract(h,t,e),cc_1.Vec3.dot(c,c)),i=cc_1.Vec3.dot(c,n),t=cc_1.Vec3.dot(n,n),e=cc_1.Vec3.dot(h,c),c=cc_1.Vec3.dot(h,n);let o=s*t-i*i;h=(t*e-i*c)/(o=Math.abs(o)<DenomEpilson?DenomEpilson:o),n=(s*c-i*e)/o;r.set(1-h-n,h,n)}_interpolateVertexAttributes(t,e,s,i,r){this._vertNormals&&(_tempVec3.set(0,0,0),cc_1.Vec3.scaleAndAdd(_tempVec3,_tempVec3,this._vertNormals[e],r.x),cc_1.Vec3.scaleAndAdd(_tempVec3,_tempVec3,this._vertNormals[s],r.y),cc_1.Vec3.scaleAndAdd(_tempVec3,_tempVec3,this._vertNormals[i],r.z),cc_1.Vec3.normalize(_tempVec3,_tempVec3),cc_1.Vec3.copy(this._vertNormals[t],_tempVec3)),this._vertUV2D&&(_tempVec2.set(0,0),cc_1.Vec2.scaleAndAdd(_tempVec2,_tempVec2,this._vertUV2D[e],r.x),cc_1.Vec2.scaleAndAdd(_tempVec2,_tempVec2,this._vertUV2D[s],r.y),cc_1.Vec2.scaleAndAdd(_tempVec2,_tempVec2,this._vertUV2D[i],r.z),cc_1.Vec2.copy(this._vertUV2D[t],_tempVec2)),this._vertTangents&&(_tempVec4.set(0,0,0,0),cc_1.Vec4.scaleAndAdd(_tempVec4,_tempVec4,this._vertTangents[e],r.x),cc_1.Vec4.scaleAndAdd(_tempVec4,_tempVec4,this._vertTangents[s],r.y),cc_1.Vec4.scaleAndAdd(_tempVec4,_tempVec4,this._vertTangents[i],r.z),this._normalizeTangent(this._vertTangents[t],_tempVec4)),this._vertColors&&(_tempColor.set(0,0,0,0),colorScaleAndAdd(_tempColor,_tempColor,this._vertColors[e],r.x),colorScaleAndAdd(_tempColor,_tempColor,this._vertColors[s],r.y),colorScaleAndAdd(_tempColor,_tempColor,this._vertColors[i],r.z),this._vertColors[t].set(_tempColor.r,_tempColor.g,_tempColor.b,_tempColor.a))}_normalizeTangent(t,e){var s=new cc_1.Vec3(e.x,e.y,e.z);s.normalize(),t.set(s.x,s.y,s.z,e.w)}}function appendUint8Array(t,e){var s=new Uint8Array(t.length+e.length);return s.set(t,0),s.set(e,t.length),s}function getDefaultSimplifyOptions(){return{targetRatio:1,enableSmartLink:!0,agressiveness:7,maxIterationCount:100}}function simplifyMesh(e,s){for(let t=0;t<e.struct.primitives.length;t++){var i=e.struct.primitives[t];if(i.primitiveMode!==cc_2.gfx.PrimitiveMode.TRIANGLE_LIST||void 0===i.indexView)return console.warn("SimplifyMesh current only support indexed triangle mesh, opreation is skipped"),e}var t=getDefaultSimplifyOptions();s=Object.assign(t,s||{});let r=0,c=0;var n=new Array,h=new Array;let o=new Uint8Array(0);for(let t=0;t<e.struct.vertexBundles.length;t++){var a=e.readIndices(t),l=e.struct.vertexBundles[t].view.count,l=a?a.length/3:l/3;if(0<l){var _=e.readAttribute(t,cc_2.gfx.AttributeName.ATTR_TEX_COORD),v=e.readAttribute(t,cc_2.gfx.AttributeName.ATTR_TANGENT),m=e.readAttribute(t,cc_2.gfx.AttributeName.ATTR_NORMAL),p=e.readAttribute(t,cc_2.gfx.AttributeName.ATTR_WEIGHTS),u=e.readAttribute(t,cc_2.gfx.AttributeName.ATTR_JOINTS),g=e.readAttribute(t,cc_2.gfx.AttributeName.ATTR_COLOR),f=e.readAttribute(t,cc_2.gfx.AttributeName.ATTR_POSITION),d=new MeshSimplify,f=(d.buildGeometric({positions:f,normals:m,uvs:_,indices:a??void 0,tangents:v,weights:p,joints:u,colors:g}),d.simplificationOptions.agressiveness=s.agressiveness,d.simplificationOptions.enableSmartLink=s.enableSmartLink,d.simplifyMesh(s.targetRatio*l)),V={...f,customAttributes:[],primitiveMode:cc_2.gfx.PrimitiveMode.TRIANGLE_LIST};if(V.attrs){var x,y=V.attrs;delete V.attrs;for(const A in y)"joints"==A?(x={attr:new cc_2.gfx.Attribute(cc_2.gfx.AttributeName.ATTR_JOINTS,cc_2.gfx.Format.RGBA16UI),values:y[A]},V.customAttributes.push(x)):"weights"==A&&(x={attr:new cc_2.gfx.Attribute(cc_2.gfx.AttributeName.ATTR_WEIGHTS,cc_2.gfx.Format.RGBA32F),values:y[A]},V.customAttributes.push(x))}m=new cc_2.Mesh,_=(cc_2.utils.createMesh(V,m,{calculateBounds:!0}),(0,cc_1.assert)(1==m.struct.vertexBundles.length),m.struct.vertexBundles[0]);o=appendUint8Array(o,m.data.slice(_.view.offset,_.view.offset+_.view.length)),_.view.offset=r,n.push(_),r+=_.view.length,void 0!==m.struct.primitives&&((0,cc_1.assert)(1==m.struct.primitives.length),a=m.struct.primitives[0],(0,cc_1.assert)(a.indexView),o=appendUint8Array(o,m.data.slice(a.indexView.offset,a.indexView.offset+a.indexView.length)),a.indexView.offset=r,a.jointMapIndex=m.struct.primitives[0].jointMapIndex,h.push(a),r+=a.indexView.length,h[c].vertexBundelIndices=[c],c+=1)}}var t={struct:{vertexBundles:n,primitives:h,minPosition:e.struct.minPosition,maxPosition:e.struct.maxPosition},data:o},w=new cc_2.Mesh;return w.reset(t),w.hash,w}exports.MeshSimplify=MeshSimplify,exports.getDefaultSimplifyOptions=getDefaultSimplifyOptions,exports.simplifyMesh=simplifyMesh;