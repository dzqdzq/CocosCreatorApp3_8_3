"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&("get"in a?t.__esModule:!a.writable&&!a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,a)}:function(e,t,r,i){e[i=void 0===i?r:i]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.trimImage=exports.SpriteFrameHandler=void 0;const asset_db_1=require("@editor/asset-db"),cc=__importStar(require("cc")),utils_1=require("../utils"),utils_2=require("./image/utils");try{require("sharp")}catch(e){console.error(e),console.error(Editor.I18n.t("engine-extends.importers.sharpError"))}const Sharp=require("sharp");async function trimImage(e,t,r){e=Sharp(e).extract({left:r.trimX,top:r.trimY,width:r.rotated?r.height:r.width,height:r.rotated?r.width:r.height});return r.rotated&&e.rotate(270),e.toFile(t)}function createSpriteFrame(e){var t=e.userData,r=new cc.SpriteFrame;return r.name=e.displayName||e._name,r.atlasUuid=t.atlasUuid,r._rect=cc.rect(t.trimX,t.trimY,t.width,t.height),r._originalSize=cc.size(t.rawWidth,t.rawHeight),r._offset=cc.v2(t.offsetX,t.offsetY),r._capInsets=[t.borderLeft,t.borderTop,t.borderRight,t.borderBottom],r._rotated=t.rotated,r._packable=t.packable,r._pixelsToUnit=t.pixelsToUnit,r._pivot=cc.v2(t.pivotX,t.pivotY),r._meshType=t.meshType,initVertices(r,t),r}function getTexture(t,r){var t=t.userData,i=t.imageUuidOrDatabaseUri;if(i){let e=null;t.isUuid?e=i:(e=(0,asset_db_1.queryUUID)(i))||console.warn(`Cannot find image ${(0,asset_db_1.queryPath)(i)||""}.`),null!==e&&(r._texture=EditorExtends.serialize.asAsset(e,cc.Texture2D))}}function initVerticesData(e){void 0===e.vertices&&(e.vertices={rawPosition:[],indexes:[],uv:[],nuv:[],minPos:[],maxPos:[]});var t,r,i,a,o,n,s,c,d,h=e.vertices;h.rawPosition.length=0,e.meshType!==cc.SpriteFrame.MeshType.POLYGON&&(t=e.width,r=e.height,s=e.rawWidth,d=e.rawHeight,o=e.trimX,e=d-e.trimY-r,n=0===s?0:o/s,s=0===s?1:(o+t)/s,c=0===d?1:(e+r)/d,d=0===d?0:e/d,h.rawPosition=[-(i=t/2),-(a=r/2),0,i,-a,0,-i,a,0,i,a,0],h.uv=[o,e+r,o+t,e+r,o,e,o+t,e],h.nuv=[n,d,s,d,n,c,s,c],h.indexes=[0,1,2,2,1,3],h.minPos=[-i,-a,0],h.maxPos=[i,a,0])}function initVertices(e,t){var t=t.vertices,r=(e.vertices={rawPosition:[],positions:[],indexes:t.indexes,uv:t.uv,nuv:t.nuv,minPos:cc.v3(t.minPos[0],t.minPos[1],t.minPos[2]),maxPos:cc.v3(t.maxPos[0],t.maxPos[1],t.maxPos[2])},e.vertices),i=t.rawPosition,a=cc.v3();for(let e=0;e<i.length;e+=3)a.set(i[e],i[e+1],i[e+2]),r.rawPosition.push(a.clone())}Sharp.cache(!1),exports.SpriteFrameHandler={name:"sprite-frame",assetType:"cc.SpriteFrame",iconInfo:{default:utils_2.defaultIconConfig,async generateThumbnail(e){let t=(0,asset_db_1.queryAsset)(e.meta.userData.imageUuidOrDatabaseUri);if((t="image"!==t.meta.importer?t.parent:t).invalid)return utils_2.defaultIconConfig;var r=t.meta.files.find(e=>".json"!==e)||".png",i=t.library+r,r=e.library+"_sprite_trim_"+r,e=e.userData;try{await trimImage(i,r,e)}catch(e){return console.warn(`trim image {file(${i})} to generate thumbnail failed~`),console.warn(e),utils_2.defaultIconConfig}return{type:"image",value:r}}},importer:{version:"1.0.12",async import(t){if(!t.parent)return!1;if("image"===t.parent.meta.importer){var r=t.userData;let e;e=[".tga",".hdr",".bmp",".exr",".znt",".psd"].includes(t.parent.extname.toLowerCase())?t.parent.library+".png":t.parent.source;var i=await Sharp(e).raw().toBuffer({resolveWithObject:!0});if(!i)return!1;void 0===r.trimThreshold&&(r.trimThreshold=1),r.rotated=!!r.rotated,r.packable=void 0===r.packable||r.packable,r.rawHeight=i.info.height,r.rawWidth=i.info.width,"auto"===r.trimType?4!==i.info.channels?(r.width=i.info.width,r.height=i.info.height,r.trimX=0,r.trimY=0):(a=(0,utils_1.getTrimRect)(Buffer.from(i.data),r.rawWidth,r.rawHeight,r.trimThreshold),r.width=Math.max(a[2],1),r.height=Math.max(a[3],1),r.trimX=cc.clamp(a[0],0,r.rawWidth-r.width),r.trimY=cc.clamp(a[1],0,r.rawHeight-r.height)):"none"===r.trimType?(r.trimX=0,r.trimY=0,r.width=i.info.width,r.height=i.info.height):(r.trimX=cc.clamp(r.trimX,0,r.rawWidth-1),r.trimY=cc.clamp(r.trimY,0,r.rawHeight-1),r.width=cc.clamp(-1===r.width?r.rawWidth:r.width,1,r.rawWidth-r.trimX),r.height=cc.clamp(-1===r.height?r.rawHeight:r.height,1,r.rawHeight-r.trimY)),r.offsetX=r.trimX+r.width/2-r.rawWidth/2,r.offsetY=-(r.trimY+r.height/2-r.rawHeight/2),r.borderLeft=cc.clamp(r.borderLeft,0,r.width),r.borderRight=cc.clamp(r.borderRight,0,r.width-r.borderLeft),r.borderTop=cc.clamp(r.borderTop,0,r.height),r.borderBottom=cc.clamp(r.borderBottom,0,r.height-r.borderTop),initVerticesData(r)}var a=createSpriteFrame(t),i=(t.parent instanceof asset_db_1.Asset&&(a.name=a.name||t.parent.basename||""),getTexture(t,a),EditorExtends.serialize(a)),r=(await t.saveToLibrary(".json",i),(0,utils_1.getDependUUIDList)(JSON.parse(i)));return t.setData("depends",r),!0}}},exports.default=exports.SpriteFrameHandler,exports.trimImage=trimImage;