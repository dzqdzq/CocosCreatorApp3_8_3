"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.compressAnimationClip=void 0;const cc_1=require("cc"),approx=cc_1.math["approx"];function compressAnimationClip(e){for(const s of e.tracks)for(var{curve:r}of s.channels())r instanceof cc_1.RealCurve&&compressRealCurve(r)}function compressRealCurve(e){var r;e.keyFramesCount<2||Array.from(e.values()).every(({interpolationMode:e})=>e===cc_1.RealInterpolationMode.LINEAR)&&(r=compress(Array.from(e.times()),Array.from(e.values()).map(({value:e})=>e),[{type:"remove-linear-keys",maxDiff:1e-4},{type:"remove-trivial-keys",maxDiff:1e-4}]),e.assignSorted(r.times,r.values))}function compress(e,r,s){for(const a of s)switch(a.type){case"remove-linear-keys":({keys:e,values:r}=removeLinearKeys(e,r,a.maxDiff));break;case"remove-trivial-keys":({keys:e,values:r}=removeTrivialKeys(e,r,a.maxDiff))}return{times:e,values:r}}function removeLinearKeys(r,s,a=.001){var e=r.length;if(e<3)return{keys:r.slice(),values:s.slice()};var o=new Array(e).fill(!1),i=e-1;for(let e=1;e<i;++e){var l=e-1,t=e+1,{[l]:n,[e]:c,[t]:v}=r,{[l]:l,[e]:m,[t]:t}=s,t=(t-l)*((c-n)/(v-n))+l;approx(t,m,a)&&(o[e]=!0)}return filterFromRemoveFlags(r,s,o)}function removeTrivialKeys(e,r,s=.001){var a=e.length;if(a<2)return{keys:e.slice(),values:r.slice()};var o=new Array(a).fill(!1);for(let e=1;e<a;++e){var i=e-1,{[i]:i,[e]:l}=r;approx(i,l,s)&&(o[e]=!0)}return filterFromRemoveFlags(e,r,o)}function filterFromRemoveFlags(s,a,o){var i=s.length,e=o.reduce((e,r)=>r?e+1:e,0);if(!e)return{keys:s.slice(),values:a.slice()};var e=i-e,l=new Array(e).fill(0),t=new Array(e).fill(0);for(let e=0,r=0;r<i;++r)o[r]||(l[e]=s[r],t[e]=a[r],++e);return{keys:l,values:t}}exports.compressAnimationClip=compressAnimationClip;