"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.splitAnimation=void 0;const cc_1=require("cc"),exotic_animation_1=require("cc/editor/exotic-animation"),curve_utils_1=require("./curve-utils");function splitAnimation(e,t,i){var n=new cc_1.AnimationClip;n.duration=i-t,n.enableTrsBlending=e.enableTrsBlending;for(const o of e.tracks){var a=cloneTrackWithoutChannels(o),r=Array.from(o.channels());const c=Array.from(a.channels());r.forEach(({name:e,curve:n},a)=>{c[a].name=e;e=c[a].curve;if(n instanceof cc_1.RealCurve)splitRealCurve(n,t,i,e);else{if(!(n instanceof cc_1.QuatCurve))throw new Error("Unknown curve type.");splitQuaternionCurve(n,t,i,e)}}),n.addTrack(o)}e=e[exotic_animation_1.exoticAnimationTag];return e&&(n[exotic_animation_1.exoticAnimationTag]=e.split(t,i)),n}function cloneTrackWithoutChannels(e){switch(!0){default:throw new Error("Unknown track type.");case e instanceof cc_1.animation.RealTrack:return new cc_1.animation.RealTrack;case e instanceof cc_1.animation.QuatTrack:return new cc_1.animation.QuatTrack;case e instanceof cc_1.animation.ObjectTrack:return new cc_1.animation.ObjectTrack;case e instanceof cc_1.animation.VectorTrack:var n=new cc_1.animation.VectorTrack;return n.componentsCount=e.componentsCount,n;case e instanceof cc_1.animation.ColorTrack:return new cc_1.animation.ColorTrack;case e instanceof exotic_animation_1.RealArrayTrack:n=new exotic_animation_1.RealArrayTrack;return n.elementCount=e.elementCount,n}}function splitRealCurve(e,n,a,t){var i,r=e.indexOfKeyframe(n),o=e.indexOfKeyframe(a),c=r,l=o,u=[...e.keyframes()].slice(c,l);c!==r&&({value:c,tangent:i}=evaluateBetweenKeyframes(e,r,c,n),u.unshift([n,{value:c,interpolationMode:e.getKeyframeValue(r).interpolationMode,rightTangent:i.y,rightTangentWeight:i.x}])),l!==o&&({value:n,tangent:c}=evaluateBetweenKeyframes(e,l,o,a),u.unshift([a,{value:n,interpolationMode:e.getKeyframeValue(o).interpolationMode,leftTangent:c.y,leftTangentWeight:c.x}])),t.assignSorted(u),t.preExtrapolation=e.preExtrapolation,t.postExtrapolation=e.postExtrapolation}function splitQuaternionCurve(e,n,a,t){var i=e.indexOfKeyframe(n),r=e.indexOfKeyframe(a),o=i,c=r,l=[...e.keyframes()].slice(o,c);o!==i&&0<=i&&(o=e.evaluate(n),l.unshift([n,{value:o,interpolationMode:e.getKeyframeValue(i).interpolationMode,easingMethod:e.getKeyframeValue(i).easingMethod}])),c!==r&&0<=r&&(n=e.evaluate(a),l.unshift([a,{value:n,interpolationMode:e.getKeyframeValue(r).interpolationMode,easingMethod:e.getKeyframeValue(r).easingMethod}])),t.assignSorted(l)}function evaluateBetweenKeyframes(e,n,a,t){var i=e.getKeyframeTime(n),{value:n,rightTangent:r,rightTangentWeight:o}=e.getKeyframeValue(n),c=e.getKeyframeTime(a),{value:e,leftTangent:a,leftTangentWeight:l}=e.getKeyframeValue(a);return(0,curve_utils_1.evaluateValueTangent)(t,i,n,o,r,c,e,l,a)}exports.splitAnimation=splitAnimation;