"use strict";function clamp(e,n,t){return Math.min(t,Math.max(n,e))}function srgbToLinear(e){return Math.pow(e,2.2)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.equirectToCubemapFaces=exports.InterpolationType=exports.nearestPowerOfTwo=exports.linearToSRGB=exports.srgbToLinear=void 0,exports.srgbToLinear=srgbToLinear;const i255=1/255;function betweenZeroAndOne(e){return i255*e}function linearToSRGB(e){return Math.pow(e,.454545)}exports.linearToSRGB=linearToSRGB;const ilog2=1/Math.log(2);function nearestPowerOfTwo(e){return 1<<Math.round(Math.log(e)*ilog2)}var InterpolationType;exports.nearestPowerOfTwo=nearestPowerOfTwo,function(e){e.BILINEAR="bilinear",e.NEAREST="nearest"}(InterpolationType=exports.InterpolationType||(exports.InterpolationType={}));const DEFAULT_OPTIONS={flipTheta:!1,interpolation:InterpolationType.BILINEAR,isRGBE:!1},rgbe_base=1.1;function floatToRGBE(e,n,t,r,a){var o=Math.max(Math.max(e,n),t),o=Math.ceil(Math.log(o)/Math.log(rgbe_base)),o=Math.min(Math.max(o+128,0),255),i=Math.pow(rgbe_base,o-128);r[a+0]=e/i*255|0,r[a+1]=n/i*255|0,r[a+2]=t/i*255|0,r[a+3]=o}function transformSingleFace(e,n,t,r){var o=r.flipTheta?-1:1,i=0|t.width,b=0|e.width,s=0|e.height,h=e.data,w=r.interpolation===InterpolationType.NEAREST,l=r.isRGBE,d=t.data,g=0|t.width,T=0|t.height,C=0|n,N=2/g,k=2/T;for(let a=0;a<T;++a)for(let r=0;r<g;++r){var c=N*r,p=k*a,f=r+a*i<<2;let e=0,n=0,t=0;switch(C){case 0:e=1,n=1-c,t=1-p;break;case 1:e=-1,n=c-1,t=1-p;break;case 2:e=c-1,n=p-1,t=1;break;case 3:e=c-1,n=1-p,t=-1;break;case 4:e=c-1,n=1,t=1-p;break;case 5:e=1-c,n=-1,t=1-p}var u,A,O,m,M,Z,x,I,L,B,R,E,S,P,y,G=o*Math.atan2(n,e),v=Math.sqrt(e*e+n*n),v=Math.atan2(t,v),G=b/4*2*(G+Math.PI)/Math.PI,v=b/4*2*(Math.PI/2-v)/Math.PI,_=0|Math.floor(G),F=0|Math.floor(v);w?(u=_%b+b*clamp(F,0,s-1)<<2,d[f]=0|h[u],d[1+f]=0|h[1+u],d[2+f]=0|h[2+u],d[3+f]=0|h[3+u]):(u=1+_,y=1+F,G=G-_,v=v-F,P=_%b+b*clamp(F,0,s-1)<<2,F=u%b+b*clamp(F,0,s-1)<<2,_=_%b+b*clamp(y,0,s-1)<<2,y=u%b+b*clamp(y,0,s-1)<<2,A=(1-G)*(1-v),O=G*(1-v),m=(1-G)*v,G=G*v,l?(v=Math.pow(rgbe_base,(0|h[3+P])-128),R=Math.pow(rgbe_base,(0|h[3+F])-128),E=Math.pow(rgbe_base,(0|h[3+_])-128),S=Math.pow(rgbe_base,(0|h[3+y])-128),M=betweenZeroAndOne(0|h[P])*v,I=betweenZeroAndOne(0|h[1+P])*v,v=betweenZeroAndOne(0|h[2+P])*v,Z=betweenZeroAndOne(0|h[F])*R,L=betweenZeroAndOne(0|h[1+F])*R,R=betweenZeroAndOne(0|h[2+F])*R,x=betweenZeroAndOne(0|h[_])*E,B=betweenZeroAndOne(0|h[1+_])*E,E=betweenZeroAndOne(0|h[2+_])*E,floatToRGBE(M*A+Z*O+x*m+betweenZeroAndOne(0|h[y])*S*G,I*A+L*O+B*m+betweenZeroAndOne(0|h[1+y])*S*G,v*A+R*O+E*m+betweenZeroAndOne(0|h[2+y])*S*G,d,f)):(M=betweenZeroAndOne(0|h[3+P]),Z=betweenZeroAndOne(0|h[3+F]),x=betweenZeroAndOne(0|h[3+_]),I=betweenZeroAndOne(0|h[3+y]),L=srgbToLinear(betweenZeroAndOne(0|h[P]))*M,B=srgbToLinear(betweenZeroAndOne(0|h[1+P]))*M,v=srgbToLinear(betweenZeroAndOne(0|h[2+P]))*M,R=srgbToLinear(betweenZeroAndOne(0|h[F]))*Z,E=srgbToLinear(betweenZeroAndOne(0|h[1+F]))*Z,S=srgbToLinear(betweenZeroAndOne(0|h[2+F]))*Z,P=srgbToLinear(betweenZeroAndOne(0|h[_]))*x,F=srgbToLinear(betweenZeroAndOne(0|h[1+_]))*x,_=srgbToLinear(betweenZeroAndOne(0|h[2+_]))*x,P=L*A+R*O+P*m+srgbToLinear(betweenZeroAndOne(0|h[y]))*I*G,F=B*A+E*O+F*m+srgbToLinear(betweenZeroAndOne(0|h[1+y]))*I*G,v=v*A+S*O+_*m+srgbToLinear(betweenZeroAndOne(0|h[2+y]))*I*G,y=1/(_=M*A+Z*O+x*m+I*G),d[3+f]=255*_|0,d[f]=255*linearToSRGB(P*y)|0,d[1+f]=255*linearToSRGB(F*y)|0,d[2+f]=255*linearToSRGB(v*y)|0))}return t}function transformToCubeFaces(n,t,r){if(6!==t.length)throw new Error("facePixArray length must be 6!");for(let e=0;e<6;++e)transformSingleFace(n,e,t[e],r);return t}function imageGetPixels(e){if(e instanceof ImageData)return e;let n=e,t;return"CANVAS"!==n.tagName?((n=document.createElement("canvas")).width=e.width,n.height=e.height,(t=n.getContext("2d")).drawImage(e,0,0,n.width,n.height,0,0,n.width,n.height)):t=n.getContext("2d"),t.getImageData(0,0,n.width,n.height)}async function equirectToCubemapFaces(e,n,t){var r=await e.metadata(),a=await e.raw().toBuffer();let o=null;if(3===r.channels){var i=(r.width||0)*(r.height||0);o=new Uint8Array(4*i);for(let e=0;e<i;++e)o[4*e+0]=a[3*e+0],o[4*e+1]=a[3*e+1],o[4*e+2]=a[3*e+2],o[4*e+3]=255}var e={width:r.width||0,height:r.height||0,data:o?Buffer.from(o.buffer):a},b=[];for(let e=0;e<6;++e)b.push({width:n,height:n,data:new Uint8Array(n*n*4)});return transformToCubeFaces(e,b,t=t||DEFAULT_OPTIONS),b}exports.equirectToCubemapFaces=equirectToCubemapFaces;