"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&("get"in a?t.__esModule:!a.writable&&!a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,s,a)}:function(e,t,r,s){e[s=void 0===s?r:s]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpineHandler=void 0;const asset_db_1=require("@editor/asset-db"),path=__importStar(require("path")),fs=__importStar(require("fs")),fse=__importStar(require("fs-extra")),ATLAS_EXTS=[".atlas",".txt",".atlas.txt",""],cc_1=require("cc"),utils_1=require("../utils");function searchAtlas(a,n){var e=path.extname(a);a=a.substr(0,a.length-e.length),function t(r){var e=ATLAS_EXTS[r];const s=a+e;fs.exists(s,e=>{if(e)return n(null,s);r+1<ATLAS_EXTS.length?t(r+1):n(new Error("Can not find "+(a+ATLAS_EXTS[0])))})}(0)}function loadAtlasText(e,s){searchAtlas(e,(e,r)=>{if(e)return s(e);fs.readFile(r,{encoding:"utf8"},(e,t)=>{s(e,{data:t,atlasPath:r})})})}class TextureParser{constructor(e,t){this.atlasPath=t,this.texturesUUID=[],this.textureNames=[],this.asset=e,this.asset.depend(t)}load(e){var t=path.basename(e),r=path.dirname(this.atlasPath),r=path.resolve(r,t),t=(0,asset_db_1.queryAsset)(r);return t?(t=t.uuid+"@6c48a",this.asset.depend(t),console.log('UUID is initialized for "%s".',r),this.texturesUUID.push(t),this.textureNames.push(e)):fs.existsSync(r)?console.warn('WARN: UUID not yet initialized for "%s".',path):console.error('Can not find texture "%s" for atlas "%s"',e,this.atlasPath),null}}const scale=1;let textures=[];function initTexture(c,d,e){return new Promise((l,u)=>{loadAtlasText(e,(e,t)=>{if(e)return u(e);var r=new TextureParser(c,t.atlasPath),s=t?.data.split("\n");if(!s||s.length<1)return u(new Error(`Failed to load atlas file: "${t.atlasPath}"`));let a=null;var n=s.length;for(let e=0;e<n;e++){var i=s[e].trim();0===i.length?a=null:a||(a=i,r.load(a))}textures=r.texturesUUID,d.textures=r.texturesUUID.map(e=>EditorExtends.serialize.asAsset(e,cc_1.Texture2D)),d.textureNames=r.textureNames,d.atlasText=t.data;const o=EditorExtends.serialize(d);c.saveToLibrary(".json",o).then(()=>{var e=(0,utils_1.getDependUUIDList)(o);c.setData("depends",e),l(!0)},u)})})}async function importJson(e){var t=e.source,r=await fse.readFile(t,{encoding:"utf8"});let s;try{s=JSON.parse(r)}catch(e){return console.error(e),!1}r=new cc_1.sp.SkeletonData;return r.name=e.basename||"",r.skeletonJson=s,r.scale=scale,initTexture(e,r,t)}async function importBinary(e){await e.copyToLibrary(".bin",e.source);var t=e.source,r=new cc_1.sp.SkeletonData;return r.name=e.basename||"",r._setRawAsset(".bin"),r.scale=scale,initTexture(e,r,t)}exports.SpineHandler={name:"spine-data",assetType:"sp.SkeletonData",async validate(e){e=e.source;if(e.endsWith(".skel"))return!0;let t;var e=fs.readFileSync(e,"utf8"),r=e.slice(0,30);if(0<r.indexOf("slots")||0<r.indexOf("skins")||0<r.indexOf("events")||0<r.indexOf("animations")||0<r.indexOf("bones")||0<r.indexOf("skeleton")||0<r.indexOf('"ik"')){try{t=JSON.parse(e)}catch(e){return!1}return Array.isArray(t.bones)}return!1},importer:{version:"1.2.6",async import(e){return(e.source.endsWith(".skel")?importBinary:importJson)(e)}}},exports.default=exports.SpineHandler;