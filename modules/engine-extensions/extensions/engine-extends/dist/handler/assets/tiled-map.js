"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a);var i=Object.getOwnPropertyDescriptor(t,a);i&&("get"in i?t.__esModule:!i.writable&&!i.configurable)||(i={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,r,i)}:function(e,t,a,r){e[r=void 0===r?a:r]=t[a]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&__createBinding(t,e,a);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TiledMapHandler=void 0;const asset_db_1=require("@editor/asset-db"),path=__importStar(require("path")),fs=__importStar(require("fs")),xmldom_1=require("xmldom"),sharp_1=__importDefault(require("sharp")),cc_1=require("cc"),image_utils_1=require("./utils/image-utils"),utils_1=require("../utils");async function searchDependFiles(a,r,e){var t=(new xmldom_1.DOMParser).parseFromString(e);if(!t)throw console.error("failed to parse "+e),new Error("TiledMap import failed: failed to parser "+r);let i=[];var s=[];let n=[],l=[];var e=t.documentElement,u=e.getElementsByTagName("tileset");for(let e=0;e<u.length;e++){var m=u[e],o=m.getAttribute("source");if(o){o=path.join(path.dirname(r),o);if(a.depend(o),!fs.existsSync(o))return console.warn("cannot find "+o),null;s.push(o);var c=fs.readFileSync(o,"utf-8"),c=(new xmldom_1.DOMParser).parseFromString(c);if(c){c=await parseTilesetImages(a,c,o);if(!c)return null;i=i.concat(c.imageFullPath),n=n.concat(c.imageBaseName),l=l.concat(c.imageSizes)}else console.warn("Parse %s failed.",o)}c=await parseTilesetImages(a,m,r);if(!c)return null;i=i.concat(c.imageFullPath),n=n.concat(c.imageBaseName),l=l.concat(c.imageSizes)}var p=[],d=[],f=e.getElementsByTagName("imagelayer");for(let e=0,t=f.length;e<t;e++){var g=f[e].getElementsByTagName("image");if(g&&0<g.length){g=g[0].getAttribute("source"),g=path.join(path.dirname(r),g);if(a.depend(g),fs.existsSync(g)){p.push(g);let e=path.relative(path.dirname(r),g);e=e.replace(/\\/g,"/"),d.push(e)}else console.warn("cannot find "+g)}}return{imgFullPaths:i,tsxFiles:s,imgBaseNames:n,imageLayerTextures:p,imageLayerTextureNames:d,imgSizes:l}}async function parseTilesetImages(t,e,a){var r=e.getElementsByTagName("image"),i=[],s=[],n=[];for(let e=0;e<r.length;e++){var l=r[e].getAttribute("source");if(l){l=path.join(path.dirname(a),l);if(t.depend(l),!fs.existsSync(l))throw new Error("Image does not exist: "+l);var u=await(0,sharp_1.default)(l).metadata(),u=(n.push(new cc_1.Size(u.width,u.height)),i.push(l),path.basename(l));s.push(u)}}return{imageFullPath:i,imageBaseName:s,imageSizes:n}}exports.TiledMapHandler={name:"tiled-map",assetType:"cc.TiledMapAsset",async validate(e){return!0},importer:{version:"1.0.2",async import(t){await t.copyToLibrary(t.extname,t.source);var e=new cc_1.TiledMapAsset,a=fs.readFileSync(t.source,{encoding:"utf8"}),r=(e.name=path.basename(t.source,t.extname),new cc_1.TextAsset),r=(r.name=e.name,r.text=a,e.tmxXmlStr=a,await searchDependFiles(t,t.source,a));if(!r)return!1;e.spriteFrames=r.imgFullPaths.map(e=>{t.depend(e);e=(0,asset_db_1.queryAsset)(e);if(e)return(0,image_utils_1.changeImageDefaultType)(e,"sprite-frame"),EditorExtends.serialize.asAsset(e.uuid+"@f9941",cc_1.SpriteFrame)}),e.spriteFrameNames=r.imgBaseNames,e.tsxFiles=r.tsxFiles.map(e=>{e=(0,asset_db_1.queryAsset)(e);if(e)return EditorExtends.serialize.asAsset(e.uuid,cc_1.TextAsset)}),e.tsxFileNames=r.tsxFiles.map(e=>path.basename(e)),e.imageLayerSpriteFrame=r.imageLayerTextures.map(e=>{e=(0,asset_db_1.queryAsset)(e);return EditorExtends.serialize.asAsset(e.uuid+"@f9941",cc_1.SpriteFrame)}),e.imageLayerSpriteFrameNames=r.imageLayerTextureNames.map(e=>path.basename(e)),e.spriteFrameSizes=r.imgSizes;a=EditorExtends.serialize(e),await t.saveToLibrary(".json",a),r=(0,utils_1.getDependUUIDList)(a);return t.setData("depends",r),!0}}},exports.default=exports.TiledMapHandler;