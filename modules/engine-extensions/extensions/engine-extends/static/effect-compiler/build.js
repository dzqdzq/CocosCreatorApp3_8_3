"use strict";const ps=require("path"),fs=require("fs-extra"),fsJetpack=require("fs-jetpack"),Module=require("module")["Module"],editorRoot=ps.join(__dirname,"../../../../../../.."),options={engineRoot:"",shouldThrow:!1,noSource:!1,stripSpaces:!1,noOutput:!1,essentialOnly:!1,keepNewlines:!1,filesOrDirs:[]},argc=process.argv.length;for(let e=2;e<argc;e++){const b=process.argv[e];"--engine"===b&&e<argc-1?options.engineRoot=ps.resolve(process.argv[++e]):"--default-engine"===b?options.engineRoot="default":"--throw"===b?options.shouldThrow=!0:"--no-source"===b?options.noSource=!0:"--strip-spaces"===b?options.stripSpaces=!0:"--no-output"===b?options.noOutput=!0:"--essential-only"===b?options.essentialOnly=!0:b.startsWith("--keep-newlines")?options.keepNewlines=15<b.length?b.substring(16):"":options.filesOrDirs.push(b)}const defaultEngineRoot=ps.join(editorRoot,"resources/3d/engine"),cacheFile=ps.join(__dirname,"engine_root_cache.txt"),preload=(options.engineRoot?("default"===options.engineRoot&&(options.engineRoot=defaultEngineRoot),fs.existsSync(options.engineRoot)&&fs.writeFileSync(cacheFile,options.engineRoot)):(fs.existsSync(cacheFile)&&(options.engineRoot=fs.readFileSync(cacheFile,"utf8")),options.engineRoot||(options.engineRoot=defaultEngineRoot)),console.log("Editor location: "+editorRoot),Object.assign(global,{Manager:{AssetInfo:{engine:options.engineRoot}},cc:{},CC_EDITOR:!1,CC_DEV:!1,CC_TEST:!1}),(Module.createRequire||Module.createRequireFromPath)(ps.resolve(editorRoot,"app/index.js"))("cc/preload"))["default"];function main(){const i=require(ps.join(editorRoot,"app/modules/engine-extensions/extensions/engine-extends/static/effect-compiler")),o=(i.options.throwOnWarning=i.options.throwOnError=options.shouldThrow,i.options.noSource=options.noSource,i.options.skipParserTest=!0,{dir:""}),r={dir:ps.join(options.engineRoot,"editor/assets/chunks")};i.options.chunkSearchFn=t=>{var n={name:void 0,content:void 0};for(let s=0;s<t.length;s++){var i=t[s];let e=ps.resolve(o.dir,i+".chunk");if(fs.existsSync(e)||(e=ps.resolve(r.dir,i+".chunk"),fs.existsSync(e))){n.name=i,n.content=fs.readFileSync(e,{encoding:"utf-8"});break}}return n};var s=e=>{var s=fsJetpack.find(e,{matching:"*.chunk",recursive:!1});for(let e=0;e<s.length;++e){var t=ps.basename(s[e],".chunk"),n=fs.readFileSync(s[e],{encoding:"utf8"});i.addChunk(t,n)}};s(ps.join(options.engineRoot,"editor/assets/chunks"));const $=(e,s)=>e.replace(/\n/g,"\n"+" ".repeat(s)),v=e=>JSON.stringify(e).replace(/([,{]|":)/g,"$1 ").replace(/([}])/g," $1"),y=(e,s=v)=>{let t="";if(!e.length)return"[]";for(const n of e)t+=`  ${$(s(n),2)},
`;return`[
${t.slice(0,-2)}
]`},R=(()=>{const t=/\s*?\n\s*/g,n=/[\s\n]+/g,i=/\w/,o=(e,s,t)=>s&&i.test(t[s-1])&&i.test(t[s+e.length])?" ":"",r=(e,s)=>(options.stripSpaces&&(e=e.replace(n,o)),options.essentialOnly&&(e=e.replace(t,"\n")),s.includes(options.keepNewlines)?`\`${e}\``:`"${e.replace(/\n/g,"\\n")}"`);return(e,s)=>{var t="{\n";return(t+=`  "vert": ${$(r(e.vert,s+".vert"),4)},
`)+`  "frag": ${$(r(e.frag,s+".frag"),4)},
`+"}"}})(),n=(()=>{const m=e=>`{"name": "${e.name}", "defines": ${v(e.defines)}, "binding": ${e.binding}, `+(e.descriptorType?'"descriptorType": '+e.descriptorType+", ":"")+`"stageFlags": ${e.stageFlags}, "members": ${y(e.members)}}`,t=e=>{let s="";var{name:e,hash:t,glsl4:n,glsl3:i,glsl1:o,builtins:r,defines:l,blocks:a,samplerTextures:c,buffers:p,images:u,textures:d,samplers:g,subpassInputs:f,attributes:h,varyings:b}=e;return s=(s+="{\n")+`  "name": "${e}",
`+`  "hash": ${t},
`,n&&(s+=`  "glsl4": ${$(R(n,"glsl4"),2)},
`),i&&(s+=`  "glsl3": ${$(R(i,"glsl3"),2)},
`),o&&(s+=`  "glsl1": ${$(R(o,"glsl1"),2)},
`),b&&(s+=`  "varyings": ${$(y(b),2)},
`),s=(s=(s=(s=(s=(s=(s=(s=(s=(s=(s=(s=(s+='  "builtins": {\n')+`    "statistics": ${v(r.statistics)},
`)+`    "globals": ${v(r.globals)},
`)+`    "locals": ${v(r.locals)}
`+"  },\n")+`  "defines": ${$(y(l),2)},
`)+`  "attributes": ${$(y(h),2)},
`)+`  "blocks": ${$(y(a,m),2)},
`)+`  "samplerTextures": ${$(y(c),2)},
`)+`  "buffers": ${$(y(p),2)},
`)+`  "images": ${$(y(u),2)},
`)+`  "textures": ${$(y(d),2)},
`)+`  "samplers": ${$(y(g),2)},
`)+`  "subpassInputs": ${$(y(f),2)}
`+"}"};return e=>{options.essentialOnly&&i.stripEditorSupport(e);let s="";return s=(s=(s=(s+="{\n")+`  "name": "${e.name}",
`)+(e._uuid?`  "_uuid": "${e._uuid}",
`:""))+`  "techniques": ${$(y(e.techniques),2)},
`,options.essentialOnly||(s+=`  "dependencies": ${$(y(e.dependencies),2)},
`,e.editor&&(s+=`  "editor": ${$(v(e.editor),2)},
`)),s=s+`  "shaders": ${$(y(e.shaders,t),2)}
`+"}"}})();var t=(()=>{const i={"pipeline/planar-shadow":{techs:[]},"pipeline/skybox":{techs:[]},"pipeline/deferred-lighting":{techs:[]},"pipeline/bloom":{techs:[]},"pipeline/post-process":{techs:[]},"util/profiler":{techs:[]},"util/splash-screen":{techs:[]},"builtin-standard":{techs:[0]},"builtin-unlit":{techs:[0]},"builtin-sprite":{techs:[]},"builtin-particle":{techs:[0]},"builtin-particle-gpu":{techs:[0]},"builtin-particle-trail":{techs:[0]},"builtin-billboard":{techs:[0]},"builtin-terrain":{techs:[0]},"builtin-graphics":{techs:[]},"builtin-clear-stencil":{techs:[]},"builtin-spine":{techs:[0]},"builtin-occlusion-query":{techs:[0]},"builtin-geometry-renderer":{techs:[]},"builtin-debug-renderer":{techs:[0]}};return(e,s,t)=>{s=i[s];if(void 0!==s){const n=Object.assign({},t);s.techs.length&&(n.techniques=s.techs.reduce((e,s)=>(e.push(n.techniques[s]),e),[]),n.shaders=n.shaders.filter(s=>n.techniques.some(e=>e.passes.some(e=>e.program===s.name)))),n.shaders=n.shaders.map(e=>{return Object.assign({},e)}),n.techniques=n.techniques.map(e=>{e=Object.assign({},e);return e.passes=e.passes.map(e=>{return Object.assign({},e)}),e}),e.push(n)}}})();const l=(e,s)=>{let t=null;if(options.shouldThrow)try{t=i.buildEffect(e,s)}catch(e){console.log(e)}else t=i.buildEffect(e,s);return t},a=(e,s)=>{options.noOutput||(fs.ensureDirSync(ps.dirname(e)),fs.writeFileSync(e,s,{encoding:"utf8"}),console.log(e+" saved."))};if(options.filesOrDirs.length){const S=e=>{var s=ps.basename(e,".effect"),t=fs.readFileSync(e,{encoding:"utf8"}),t=(o.dir=ps.dirname(e),l(s,t));t&&a(ps.join(ps.dirname(e),s+".ts"),"/* eslint-disable */\n"+`export const effect = ${n(t)};
`)};for(let e=0;e<options.filesOrDirs.length;e++){var c=options.filesOrDirs[e],p=(s=>{try{return fs.lstatSync(s)}catch(e){console.error(s,"does not exist!")}return null})(c);p&&(p.isDirectory()?(s(c),fsJetpack.find(c,{matching:"*.effect",recursive:!1}).forEach(e=>S(e))):(s(ps.dirname(c)),S(c)))}process.exit()}var u=ps.join(options.engineRoot,"editor/assets"),d=fsJetpack.find(u,{matching:"**/*.effect"}),e=ps.join(editorRoot,"effects.ts"),g=ps.join(options.engineRoot,"test/fixtures/builtin-effects.ts"),f=ps.join(options.engineRoot,"test/fixtures/builtin-glsl4.ts"),h=[],b=[];for(let e=0;e<d.length;++e){var m=ps.relative(ps.join(u,"effects"),ps.dirname(d[e])).replace(/\\/g,"/"),m=m+(m.length?"/":"")+ps.basename(d[e],".effect"),x=fs.readFileSync(d[e],{encoding:"utf8"}),x=l(m,x);x&&(h.push(x),t(b,m,x,d[e]))}a(e,`
export const effects = ${y(h,n)};
`),options.essentialOnly=!0;e=b.map(({shaders:e})=>e.map(e=>{var s=e.glsl4||null;return delete e.glsl4,s}));a(f,"/* eslint-disable */\n"+`export const glsl4 = ${y(e,e=>y(e,e=>R(e,version)))};
`),a(g,"/* eslint-disable */\n// absolute essential effects\n"+`export const effects = ${y(b,n)};
`)}(async()=>{await preload({root:options.engineRoot,editorExtensions:!1,requiredModules:["cc/editor/offline-mappings"]}),main()})().catch(e=>{console.error(e)});