const ps=require("path"),fs=require("fs"),fsJetpack=require("fs-jetpack"),{Module}=require("module"),editorRoot=ps.resolve(__dirname,"../../../../../../../.."),engineRoot=ps.join(editorRoot,"resources/3d/engine"),shdcLib=(Object.assign(global,{Manager:{AssetInfo:{engine:engineRoot}},cc:{},CC_EDITOR:!1,CC_DEV:!1,CC_TEST:!1}),(Module.createRequire||Module.createRequireFromPath)(ps.resolve(editorRoot,"app","index.js"))("cc/location").set(engineRoot),require(ps.resolve(__dirname,".."))),errorTests=(shdcLib.options.noSource=!0,shdcLib.options.throwOnWarning=!0,shdcLib.options.skipParserTest=!0,()=>{const t=/EFX\d\d\d\d/i,n=/\/\/\s*@efx-([\w-]*)/g;return fsJetpack.find(ps.resolve(__dirname,"./errors"),{matching:"*.effect",recursive:!1}).reduce((r,e)=>{var s=ps.basename(e,".effect"),c=fs.readFileSync(e,{encoding:"utf8"});n.lastIndex=0;let a=n.exec(c);for(;a;){if("no-check"===a[1])return r;a=n.exec(c)}try{shdcLib.buildEffect(s,c),r.push("no error reported from "+s)}catch(e){"string"==typeof e&&2===e.match(new RegExp(s.match(t)[0],"g")).length||r.push(e)}return r},[])}),featureTests=()=>{const spacesRE=/[\s\n]+/g,identifierRE=/\w/,replacer=(e,r,s)=>r&&identifierRE.test(s[r-1])&&identifierRE.test(s[r+e.length])?" ":"",checkRE=/\/\/\s*@check(.*)/g,objEquals=(s,r)=>Array.isArray(r)?r.every((e,r)=>s&&objEquals(s[r],e)):"object"==typeof r?Object.keys(r).every(e=>s&&objEquals(s[e],r[e])):s===r,{UniformBinding}=shdcLib.mappings;return fsJetpack.find(__dirname,{matching:"*.effect",recursive:!1}).reduce((acc,file)=>{const name=ps.basename(file,".effect"),content=fs.readFileSync(file,{encoding:"utf8"});try{const effect=shdcLib.buildEffect(name,content);for(const shader of effect.shaders)shader.glsl1.vert=shader.glsl1.vert.replace(spacesRE,replacer),shader.glsl1.frag=shader.glsl1.frag.replace(spacesRE,replacer),shader.glsl3.vert=shader.glsl3.vert.replace(spacesRE,replacer),shader.glsl3.frag=shader.glsl3.frag.replace(spacesRE,replacer),shader.glsl4.vert=shader.glsl4.vert.replace(spacesRE,replacer),shader.glsl4.frag=shader.glsl4.frag.replace(spacesRE,replacer);checkRE.lastIndex=0;let count=1,cap=checkRE.exec(content);for(;cap;)eval(cap[1])||acc.push(`${name}.effect check #${count} failed`),cap=checkRE.exec(content),count++}catch(e){acc.push(e)}return acc},[])};errorTests().forEach(e=>console.log(e)),featureTests().forEach(e=>console.log(e));