"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.previewImageManager=exports.AssetPreviewImageManager=void 0;const fs_extra_1=require("fs-extra"),stream_1=require("stream");class AssetPreviewImageManager extends stream_1.EventEmitter{constructor(){super(...arguments),this.cache={},this.iconConfigMap={},this._hasInit=!1,this._defaultIcon={type:"icon",value:"file"},this._dbReady=!1}get ready(){return this._dbReady&&this._hasInit}async init(){this._dbReady=await Editor.Message.request("asset-db","query-ready"),this._dbReady&&await this.refresh(),Editor.Message.__protected__.addBroadcastListener("asset-db:ready",onAssetDBReady),Editor.Message.__protected__.addBroadcastListener("asset-db:close",onAssetDBClose),Editor.Message.__protected__.addBroadcastListener("asset-db:asset-delete",onAssetDelete),Editor.Message.__protected__.addBroadcastListener("asset-db:asset-change",onAssetDelete)}async refresh(){try{this.iconConfigMap=await Editor.Message.request("asset-db","query-icon-config-map")}catch(e){console.error(e)}this._hasInit=!0}async onDBReady(){this._dbReady=!0,await this.refresh(),this.emit("ready")}async onDBClose(){this._dbReady=!1,this.cache={},this.emit("close")}async get(e,t,s){if(!this._hasInit||s&&!this.iconConfigMap[s])return{type:"icon",value:"file"};if(s&&!this.iconConfigMap[s].thumbnail)return this.iconConfigMap[s];let a=e;e=(a=Editor.Utils.UUID.isUUID(a)?a:await Editor.Message.request("asset-db","query-uuid",e)||e)+(t?"-"+t:"");if(this.cache[e]){if("icon"===this.cache[e].type)return this.cache[e];if((0,fs_extra_1.existsSync)(this.cache[e].value))return this.cache[e];delete this.cache[e]}try{var r=await Editor.Message.request("asset-db","query-asset-thumbnail",a,t);return r?(this.cache[e]={...r,timestamp:Date.now()},this.cache[e]):this.getDefault(s)}catch(e){return console.debug(`query thumbnail of asset${a} failed!`),this.getDefault(s)}}getDefault(e){return e?this.iconConfigMap[e]:this._defaultIcon}delete(t){var e=Object.keys(this.cache).filter(e=>e.startsWith(t));e.length&&e.forEach(e=>{delete this.cache[e]})}destroyed(){this._hasInit=!1,Editor.Message.__protected__.removeBroadcastListener("asset-db:ready",onAssetDBReady),Editor.Message.__protected__.removeBroadcastListener("asset-db:close",onAssetDBClose),Editor.Message.__protected__.removeBroadcastListener("asset-db:asset-delete",onAssetDelete),Editor.Message.__protected__.removeBroadcastListener("asset-db:asset-change",onAssetDelete)}}async function onAssetDBReady(){await exports.previewImageManager.onDBReady()}async function onAssetDBClose(){await exports.previewImageManager.onDBClose()}function onAssetDelete(e){exports.previewImageManager.delete(e)}exports.AssetPreviewImageManager=AssetPreviewImageManager,exports.previewImageManager=new AssetPreviewImageManager;