{const a=require("path")["join"],b=a(Editor.App.path,"node_modules");module.paths.push(b)}Object.defineProperty(exports,"__esModule",{value:!0});var ps=require("path"),cc=require("cc"),exec=require("child_process"),fs$1=require("fs"),EventEmitter=require("events"),image=require("../image-91ee442d.js"),fe=require("fs-extra");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var NodeEventType,NodeOperationType,EventSourceType,ps__default=_interopDefaultLegacy(ps),cc__default=_interopDefaultLegacy(cc),exec__default=_interopDefaultLegacy(exec),fs__default=_interopDefaultLegacy(fs$1),EventEmitter__default=_interopDefaultLegacy(EventEmitter),fe__default=_interopDefaultLegacy(fe);class LFX_Settings{constructor(){this.MSAA=4,this.Highp=!1,this.Size=1024,this.Gamma=2.2,this.SkyRadiance=[0,0,0],this.GIScale=1,this.GISamples=25,this.GIPathLength=2,this.GIProbeScale=1,this.GIProbeSamples=1024,this.GIProbePathLength=2,this.AOLevel=0,this.AOStrength=1,this.AORadius=1,this.AOColor=[0,0,0],this.Threads=1,this.Filter=!1,this.BakeLightMap=!0,this.BakeLightProbe=!1}}class LFX_Vertex{constructor(){this.Position=[0,0,0],this.Normal=[0,0,0],this.UV=[0,0],this.LUV=[0,0]}}class LFX_Triangle{constructor(){this.Index=[0,0,0],this.MaterialId=0}}class LFX_Material{constructor(){this.AlphaCulloff=.5,this.Metallic=0,this.Roughness=0,this.Diffuse=[1,1,1],this.Emissive=[0,0,0],this.Texture="",this.PBRMap="",this.EmissiveMap=""}}class LFX_Mesh{constructor(){this.CastShadow=!1,this.ReceiveShadow=!1,this.LightMapSize=0,this.VertexBuffer=new Array,this.TriangleBuffer=new Array,this.MaterialBuffer=new Array}}class LFX_Terrain{constructor(){this.Position=[0,0,0],this.TileSize=0,this.BlockCount=[0,0],this.HeightField=new Uint16Array,this.LightMapSize=0}}class LFX_Light{constructor(){this.Type=LFX_Light.POINT,this.Position=[0,0,0],this.Direction=[0,0,0],this.Color=[0,0,0],this.Illuminance=1,this.Size=0,this.Range=0,this.AttenFallOff=1,this.SpotInner=1,this.SpotOuter=.7071,this.SpotFallOff=1,this.DirectScale=1,this.IndirectScale=1,this.GIEnable=!1,this.CastShadow=!1,this.ShadowMask=0}}LFX_Light.POINT=0,LFX_Light.SPOT=1,LFX_Light.DIRECTION=2;class LFX_LightProbe{constructor(){this.Position=[0,0,0],this.Normal=[0,0,0]}}class LFX_Buffer{constructor(){this.Length=0,this.Buffer=new Uint8Array(2048),this._dview=new DataView(this.Buffer.buffer),this._seekPos=0}Reserve(t){if(!(this.Buffer.byteLength>t)){let e=this.Buffer.byteLength;for(;e<t;)e+=e;var i=new Uint8Array(e);for(let e=0;e<this.Length;++e)i[e]=this.Buffer[e];this.Buffer=i,this._dview=new DataView(this.Buffer.buffer)}}Assign(e){this.Buffer=e,this.Length=e.length,this._seekPos=e.byteOffset,this._dview=new DataView(e.buffer)}WriteInt8(e){this.Reserve(this.Length+1),this._dview.setInt8(this.Length,e),this.Length+=1}WriteInt16(e){this.Reserve(this.Length+2),this._dview.setInt16(this.Length,e,!0),this.Length+=2}WriteInt32(e){this.Reserve(this.Length+4),this._dview.setInt32(this.Length,e,!0),this.Length+=4}WriteHeightField(t){this.Reserve(this.Length+2*t.length);for(let e=0;e<t.length;++e)this._dview.setUint16(this.Length+2*e,t[e],!0);this.Length+=2*t.length}WriteIntArray(t){this.Reserve(this.Length+4*t.length);for(let e=0;e<t.length;++e)this._dview.setInt32(this.Length+4*e,t[e],!0);this.Length+=4*t.length}WriteFloat(e){this.Reserve(this.Length+4),this._dview.setFloat32(this.Length,e,!0),this.Length+=4}WriteFloatArray(t){this.Reserve(this.Length+4*t.length);for(let e=0;e<t.length;++e)this._dview.setFloat32(this.Length+4*e,t[e],!0);this.Length+=4*t.length}WriteString(t){this.Reserve(this.Length+t.length+4),this._dview.setInt32(this.Length,t.length,!0);for(let e=0;e<t.length;++e)this._dview.setInt8(this.Length+4+e,t.charCodeAt(e));this.Length+=t.length+4}ReadInt8(){var e=this._dview.getInt8(this._seekPos);return this._seekPos+=1,e}ReadInt16(){var e=this._dview.getInt16(this._seekPos,!0);return this._seekPos+=2,e}ReadInt(){var e=this._dview.getInt32(this._seekPos,!0);return this._seekPos+=4,e}ReadIntArray(t){for(let e=0;e<t.length;++e)t[e]=this._dview.getInt32(this._seekPos+4*e,!0);return this._seekPos+=4*t.length,t}ReadFloat(){var e=this._dview.getFloat32(this._seekPos,!0);return this._seekPos+=4,e}ReadFloatArray(t){for(let e=0;e<t.length;++e)t[e]=this._dview.getFloat32(this._seekPos+4*e,!0);return this._seekPos+=4*t.length,t}ReadString(){var t=this.ReadInt();let i="";for(let e=0;e<t;++e)i+=String.fromCharCode(this.ReadInt8());return i}}class LFX_World{constructor(){this.Name="",this.Settings=new LFX_Settings,this.Textures=new Array,this.Terrains=new Array,this.Meshes=new Array,this.Lights=new Array,this.LightProbes=new Array}AddUniqueTexture(e){if(0<e.length){for(const t of this.Textures)if(t===e)return e;this.Textures.push(e)}return e}}class LFX_TerrainLightMapInfo{constructor(){this.Id=0,this.BlockId=0,this.Index=0,this.Offset=[0,0],this.Scale=[0,0]}}class LFX_MeshLightMapInfo{constructor(){this.Id=0,this.Index=0,this.Offset=[0,0],this.Scale=[0,0]}}class LFX_LightProbeInfo{constructor(){this.Position=[0,0,0],this.Normal=[0,0,0],this.Coefficients=[0]}}class LFX_File{constructor(){this.Verison=0,this.MeshInfos=new Array,this.TerrainInfos=new Array,this.LightProbeInfos=new Array}}const io=require("socket.io"),LFX_FILE_VERSION=14128,LFX_FILE_TERRAIN=1,LFX_FILE_MESH=2,LFX_FILE_LIGHT=3,LFX_FILE_LIGHT_PROBE=4,LFX_FILE_EOF=0;class LFX_Baker extends EventEmitter__default.default{constructor(){super(),this.World=new LFX_World,this.Started=!1,this.Finished=!1,this.Error=!1,this._server=null,this._client=null,this._path=null,this._lfxpath=null}get lfxpath(){return this._lfxpath||ps__default.default.resolve("tools/lightmap-tools")}set lfxpath(e){this._lfxpath=e}get closed(){return null==this._server}get connected(){return null!=this._client}get client(){return this._client}Launch(e=0){return this.Started=!1,this.Finished=!1,this.Error=!1,this._server=io.listen(e),this._server.on("connection",t=>{t.on("Login",e=>{this._client=t,this.emit("login",this._client)}),t.on("Log",e=>{this.emit("log",e)}),t.on("Progress",e=>{this.emit("progress",e)}),t.on("Finished",e=>{this.Finished=!0,this.emit("fineshed",e)})}),e}Close(){null!=this._server&&this._server.close(),this._server=null,this._client=null}Upload(e){this._path=e;var t=new LFX_Buffer;let i=0;var r=e+"/tmp";fs__default.default.existsSync(r)||fs__default.default.mkdirSync(r),t.WriteInt32(LFX_FILE_VERSION),t.WriteString(this.World.Name);t.WriteFloatArray([0,0,0]),t.WriteFloatArray(this.World.Settings.SkyRadiance),t.WriteInt32(this.World.Settings.MSAA),t.WriteInt32(this.World.Settings.Size),t.WriteFloat(this.World.Settings.Gamma),t.WriteInt8(this.World.Settings.Highp?1:0),t.WriteFloat(this.World.Settings.GIScale),t.WriteInt32(this.World.Settings.GISamples),t.WriteInt32(this.World.Settings.GIPathLength),t.WriteFloat(this.World.Settings.GIProbeScale),t.WriteInt32(this.World.Settings.GIProbeSamples),t.WriteInt32(this.World.Settings.GIProbePathLength),t.WriteInt32(this.World.Settings.AOLevel),t.WriteFloat(this.World.Settings.AOStrength),t.WriteFloat(this.World.Settings.AORadius),t.WriteFloat(this.World.Settings.AOColor[0]/255),t.WriteFloat(this.World.Settings.AOColor[1]/255),t.WriteFloat(this.World.Settings.AOColor[2]/255),t.WriteInt32(this.World.Settings.Threads),t.WriteInt8(this.World.Settings.Filter?1:0),t.WriteInt8(this.World.Settings.BakeLightMap?1:0),t.WriteInt8(this.World.Settings.BakeLightProbe?1:0);for(const a of this.World.Terrains)t.WriteInt32(LFX_FILE_TERRAIN),t.WriteFloatArray(a.Position),t.WriteFloat(a.TileSize),t.WriteIntArray(a.BlockCount),t.WriteInt32(a.LightMapSize),t.WriteHeightField(a.HeightField);for(const n of this.World.Meshes){t.WriteInt32(LFX_FILE_MESH),t.WriteInt8(n.CastShadow?1:0),t.WriteInt8(n.ReceiveShadow?1:0),t.WriteInt32(n.LightMapSize),t.WriteInt32(n.VertexBuffer.length),t.WriteInt32(n.TriangleBuffer.length),t.WriteInt32(n.MaterialBuffer.length),i+=n.TriangleBuffer.length;for(const l of n.VertexBuffer)t.WriteFloatArray(l.Position),t.WriteFloatArray(l.Normal),t.WriteFloatArray(l.UV),t.WriteFloatArray(l.LUV);for(const h of n.TriangleBuffer)t.WriteIntArray(h.Index),t.WriteInt32(h.MaterialId);for(const c of n.MaterialBuffer)t.WriteFloat(c.AlphaCulloff),t.WriteFloat(c.Metallic),t.WriteFloat(c.Roughness),t.WriteFloatArray(c.Diffuse),t.WriteFloatArray(c.Emissive),t.WriteString(c.Texture),t.WriteString(c.PBRMap),t.WriteString(c.EmissiveMap)}for(const g of this.World.Lights)t.WriteInt32(LFX_FILE_LIGHT),t.WriteInt32(g.Type),t.WriteFloatArray(g.Position),t.WriteFloatArray(g.Direction),t.WriteFloatArray(g.Color),t.WriteFloat(g.Size),t.WriteFloat(g.Range),t.WriteFloat(g.AttenFallOff),t.WriteFloat(g.SpotInner),t.WriteFloat(g.SpotOuter),t.WriteFloat(g.SpotFallOff),t.WriteFloat(g.DirectScale),t.WriteFloat(g.IndirectScale),t.WriteInt8(g.GIEnable?1:0),t.WriteInt8(g.CastShadow?1:0),t.WriteFloat(g.ShadowMask);for(const d of this.World.LightProbes)t.WriteInt32(LFX_FILE_LIGHT_PROBE),t.WriteFloatArray(d.Position),t.WriteFloatArray(d.Normal);t.WriteInt32(LFX_FILE_EOF),fs__default.default.writeFileSync(r+"/lfx.in",t.Buffer);for(const f of this.World.Textures){var s=fs__default.default.readFileSync(e+"/"+f),o=f.replace("/","$");fs__default.default.writeFileSync(r+"/"+o,s)}Editor.Metrics.trackEvent({sendToNewCocosAnalyticsOnly:!0,category:"bakingSystem",value:{A100001:i}})}Download(){var t=new LFX_File,e=this._path+"/output/lfx.out",e=fs__default.default.readFileSync(e);if(null!=e){var i=new LFX_Buffer;for(i.Assign(e),t.Verison=i.ReadInt();;){var r=i.ReadInt();if(r===LFX_FILE_EOF)break;if(r===LFX_FILE_TERRAIN){var s=i.ReadInt(),o=i.ReadInt();for(let e=0;e<o;++e){var a=new LFX_TerrainLightMapInfo;a.Id=s,a.BlockId=i.ReadInt(),a.Index=i.ReadInt(),a.Offset[0]=i.ReadFloat(),a.Offset[1]=i.ReadFloat(),a.Scale[0]=i.ReadFloat(),a.Scale[1]=i.ReadFloat(),t.TerrainInfos.push(a)}}else if(r===LFX_FILE_MESH){var n=i.ReadInt();for(let e=0;e<n;++e){var l=new LFX_MeshLightMapInfo;l.Id=i.ReadInt(),l.Index=i.ReadInt(),l.Offset[0]=i.ReadFloat(),l.Offset[1]=i.ReadFloat(),l.Scale[0]=i.ReadFloat(),l.Scale[1]=i.ReadFloat(),t.MeshInfos.push(l)}}else if(r===LFX_FILE_LIGHT_PROBE){var h=i.ReadInt();for(let e=0;e<h;++e){var c=new LFX_LightProbeInfo;i.ReadFloatArray(c.Position),i.ReadFloatArray(c.Normal),c.Coefficients.length=i.ReadInt(),i.ReadFloatArray(c.Coefficients),t.LightProbeInfos.push(c)}}else console.log("LightFX unknown chunk "+r)}}return t}Start(){this._client&&this._client.emit("Start"),this.Started=!0}Stop(){this._client&&this._client.emit("Stop")}}!function(e){e.TRANSFORM_CHANGED="transform-changed",e.SIZE_CHANGED="size-changed",e.ANCHOR_CHANGED="anchor-changed",e.CHILD_ADDED="child-added",e.CHILD_REMOVED="child-removed",e.PARENT_CHANGED="parent-changed",e.CHILD_CHANGED="child-changed",e.COMPONENT_CHANGED="component-changed",e.ACTIVE_IN_HIERARCHY_CHANGE="active-in-hierarchy-changed",e.PREFAB_INFO_CHANGED="prefab-info-changed"}(NodeEventType=NodeEventType||{}),function(e){e.SET_PROPERTY="set-property",e.MOVE_ARRAY_ELEMENT="move-array-element",e.REMOVE_ARRAY_ELEMENT="remove-array-element",e.CREATE_COMPONENT="create-component",e.RESET_COMPONENT="reset-component"}(NodeOperationType=NodeOperationType||{}),function(e){e.EDITOR="editor",e.UNDO="undo",e.ENGINE="engine"}(EventSourceType=EventSourceType||{});const fs=require("fs"),os=require("os"),net=require("net"),path=require("path"),_async=require("async"),debug=require("debug"),mkdirp=require("mkdirp").mkdirp,debugTestPort=debug("portfinder:testPort"),debugGetPort=debug("portfinder:getPort"),debugDefaultHosts=debug("portfinder:defaultHosts"),internals={testPort:function(t,i){function r(){debugTestPort("done w/ testPort(): OK",t.host,"port",t.port),t.server.removeListener("error",e),t.server.close(),i(null,t.port)}function e(e){return debugTestPort("done w/ testPort(): failed",t.host,"w/ port",t.port,"with error",e.code),t.server.removeListener("listening",r),"EADDRINUSE"!=e.code&&"EACCES"!=e.code?i(e):(e=nextPort(t.port))>highestPort?i(new Error("No open ports available")):void internals.testPort({port:e,host:t.host,server:t.server},i)}i||(i=t,t={}),t.server=t.server||net.createServer(function(){}),debugTestPort("entered testPort(): trying",t.host,"port",t.port),t.server.once("error",e),t.server.once("listening",r),t.host?t.server.listen(t.port,t.host):t.server.listen(t.port)}},basePort=8e3,highestPort=65535;function getPort(s,i){if(i||(i=s,s={}),s.port=Number(s.port)||Number(basePort),s.host=s.host||null,s.stopPort=Number(s.stopPort)||Number(highestPort),!s.startPort){if(s.startPort=Number(s.port),s.startPort<0)throw Error("Provided options.startPort("+s.startPort+") is less than 0, which are cannot be bound.");if(s.stopPort<s.startPort)throw Error("Provided options.stopPort("+s.stopPort+"is less than options.startPort ("+s.startPort+")")}if(s.host){let t;for(let e=0;e<_defaultHosts.length;e++)if(_defaultHosts[e]===s.host){t=!0;break}t||_defaultHosts.push(s.host)}const o=[];let a;return _async.eachSeries(_defaultHosts,function(i,r){return debugGetPort("in eachSeries() iteration callback: host is",i),internals.testPort({host:i,port:s.port},function(e,t){return e?(debugGetPort("in eachSeries() iteration callback testPort() callback","with an err:",e.code),a=i,r(e)):(debugGetPort("in eachSeries() iteration callback testPort() callback","with a success for port",t),o.push(t),r())})},function(e){var t;return e?(debugGetPort("in eachSeries() result callback: err is",e),"EADDRNOTAVAIL"===e.code||"EINVAL"===e.code?s.host===a?(t="Provided host "+s.host+" could NOT be bound. Please provide a different host address or hostname",i(Error(t))):(t=_defaultHosts.indexOf(a),_defaultHosts.splice(t,1),getPort(s,i)):i(e)):(o.sort(function(e,t){return e-t}),debugGetPort("in eachSeries() result callback: openPorts is",o),o[0]===o[o.length-1]?o[0]<=s.stopPort?i(null,o[0]):(t="No open ports found in between "+s.startPort+" and "+s.stopPort,i(Error(t))):getPort({port:o.pop(),host:s.host,startPort:s.startPort,stopPort:s.stopPort},i))})}function nextPort(e){return e+1}const _defaultHosts=function(){let t={};try{t=os.networkInterfaces()}catch(e){if(!e||"uv_interface_addresses"!==e.syscall)throw e}var i=Object.keys(t),r=["0.0.0.0"];for(let e=0;e<i.length;e++){var s=t[i[e]];for(let e=0;e<s.length;e++){var o=s[e];r.push(o.address)}}return r.push(null),debugDefaultHosts("exports._defaultHosts is: %o",r),r}(),nodeMgr=cce.Node;function clamp(e,t,i){var r;return i<t&&(r=t,t=i,i=r),e<t?t:i<e?i:e}let fileInfoMap;async function readImageList(l,e=!1,t){e||(fileInfoMap={});e=fs__default.default.readdirSync(l);return await Editor.Message.request("asset-db","refresh-asset",l),await Promise.all(e.map(async t=>{var i=ps.join(l,t),r=fs__default.default.statSync(i);if(r.isDirectory())await readImageList(i,!0);else if(t.endsWith(".png")){var s=await Editor.Message.request("asset-db","query-url",i);let e=null;s&&(e=await Editor.Message.request("asset-db","query-uuid",s));s=i+".meta";if(fs$1.existsSync(s))try{var o=fe__default.default.readJSONSync(s),a=(o.userData||(o.userData={}),o.userData);a.fixAlphaTransparencyArtifacts=!1,a.type="texture",fe__default.default.writeJsonSync(s,o,{encoding:"utf8",spaces:2}),await Editor.Message.request("asset-db","refresh-asset",i)}catch(e){console.error("change meta failed",i),console.error(e)}const n={path:l,filename:t,size:image.formatBytes(r.size),uuid:e};fileInfoMap[n.filename]=n,await new Promise((i,r)=>{cc.assetManager.loadAny(n.uuid+"@6c48a",(e,t)=>{e?r(e):(n.texture=t,i())})})}})),t&&t(fileInfoMap),fileInfoMap}class LFX_App{constructor(){this.Baker=new LFX_Baker,this.Scene=null,this.Models=[],this.Lights=[],this.Terrains=[],this.MainLight=null,this.MainCamera=null,this._numLights=0,this._numObjects=0,this._numTriangles=0,this._currentTicks=0,this._lastTicks=0,this._uploadPath="",this._process=null,this._timer=null}static Reset(e){var t,i=e.scene,r=(null!==i&&(i.globals.bakedWithStationaryMainLight=!1,i.globals.bakedWithHighpLightmap=!1),e.getComponent(cc.Terrain));if(null!=r&&r.enabled)for(let e=0;e<r.getBlocks().length;++e)r._updateLightmap(e,null,0,0,0,0);for(const s of e.getComponents(cc.MeshRenderer))s._updateLightmap(null,0,0,0,0),s.node&&(t=s.node.components.indexOf(s),nodeMgr.emit("change",s.node,{type:NodeOperationType.SET_PROPERTY,propPath:`__comps__.${t}.bakeSettings`}));for(const o of e.getComponents(cc.Light))o.baked=!1;for(const a of e.children)!a.active||1024&a._objFlags||this.Reset(a)}static Disable(e,t){if(null!==e.scene){e.scene.globals.disableLightmap=t;var i=e.getComponent(cc.Terrain);if(null!=i&&i.enabled)for(let t=0;t<i.info.blockCount[1];++t)for(let e=0;e<i.info.blockCount[0];++e){var r=t*i.info.blockCount[0]+e,s=i._getLightmapInfo(e,t);null!==s&&null!==s.texture&&i._updateLightmap(r,s.texture,s.UOff,s.VOff,s.UScale,s.VScale)}for(const a of e.getComponents(cc.MeshRenderer)){var o=a.bakeSettings;null!==o.texture&&a._updateLightmap(o.texture,o.uvParam.x,o.uvParam.y,o.uvParam.z,o.uvParam.w)}for(const n of e.children)!n.active||1024&n._objFlags||this.Disable(n,t)}}static DirtyBaked(e){if(e.mobility==cc.MobilityMode.Static)for(const t of e.getComponents(cc.Light))t.baked=!0;for(const i of e.children)!i.active||1024&i._objFlags||this.DirtyBaked(i)}Init(e={}){this.Baker.World=new LFX_World,this.Scene=null,this.Models=[],this.Lights=[],this.Terrains=[],this.MainLight=null,this.MainCamera=null,this._currentTicks=0,this._lastTicks=0,this.Baker.World.Name=e.name||"Test",this.Baker.World.Settings.SkyRadiance=e.skyRadiance||[.5,.5,.5],this.Baker.World.Settings.Highp=!!e.highp,this.Baker.World.Settings.MSAA=e.msaa||4,this.Baker.World.Settings.Size=e.size||1024,this.Baker.World.Settings.Gamma=2.2,this.Baker.World.Settings.GIScale=e.giScale||0,this.Baker.World.Settings.GIPathLength=e.giPathLength||4,this.Baker.World.Settings.AOLevel=e.aoLevel||0,this.Baker.World.Settings.AOColor=e.aoColor||[127.5,127.5,127.5],this.Baker.World.Settings.AORadius=e.aoRadius||1,this.Baker.World.Settings.AOStrength=e.aoStrength||1,this.Baker.World.Settings.Threads=e.threads||1,this.Baker.World.Settings.Filter=void 0!==e.filter&&e.filter,this._uploadPath=e.path||""}Index2Str(e){let t="";return e<1e3&&(t+="0"),e<100&&(t+="0"),e<10&&(t+="0"),t+=e}Cancel(){this._timer&&(clearInterval(this._timer),this.Baker.Stop(),this.Baker.Close(),this._timer=null,this.Baker.emit("cancel",!0),null!==this._process)&&(this._process.kill("SIGKILL"),this._process=null)}async Bake(e){this.Baker.World.Settings.BakeLightMap=!0,this.Baker.World.Settings.BakeLightProbe=!0,await this._bakeImp(e)}async BakeLightMap(e){this.Baker.World.Settings.BakeLightMap=!0,this.Baker.World.Settings.BakeLightProbe=!1,await this._bakeImp(e)}async BakeLightProbe(e){this.Baker.World.Settings.BakeLightMap=!1,this.Baker.World.Settings.BakeLightProbe=!0,await this._bakeImp(e)}async _bakeImp(e){if(this._process)console.warn("Baker has already starting");else{this.Scene=e,this._numLights=0,this._numObjects=0,this._numTriangles=0,this._export(e),this._exportLightProbes(e.scene);var t,i,e=this.Scene?.scene;this.Baker.World.Settings.BakeLightProbe&&e&&e.globals&&e.globals.lightProbeInfo&&(this.Baker.World.Settings.GIProbeScale=e.globals.lightProbeInfo.giScale,this.Baker.World.Settings.GIProbeSamples=e.globals.lightProbeInfo.giSamples,this.Baker.World.Settings.GIProbePathLength=e.globals.lightProbeInfo.bounces);for(const s of this.Baker.World.Meshes)for(const o of s.MaterialBuffer)0!==o.Texture.length&&(-1===(t=o.Texture).search("@")?(i=await Editor.Message.request("asset-db","query-path",t),o.Texture=null!==i?i:""):o.Texture=ps.join(Editor.Project.path,"library",t.substr(0,2),t),0===o.Texture.length)&&console.warn("query-path texture "+t+" failed");if(cc.director.root.pipeline.pipelineSceneData.isHDR){var r=cc.renderer.scene.Camera.standardExposureValue;for(const a of this.Baker.World.Lights)a.Color[0]*=a.Illuminance*r,a.Color[1]*=a.Illuminance*r,a.Color[2]*=a.Illuminance*r}else for(const n of this.Baker.World.Lights)n.Color[0]*=n.Illuminance,n.Color[1]*=n.Illuminance,n.Color[2]*=n.Illuminance;this.Baker.Upload(this._uploadPath),this._run()}}async _export(e){this._exportImp(e)}_exportImp(e){if(e.mobility!==cc.MobilityMode.Movable){e instanceof cc.Scene||this._exportNode(e);for(const t of e.children)!t.active||1024&t._objFlags||this._exportImp(t)}}_exportNode(e){var t=e.getComponent(cc.Terrain),t=(null!=t&&t.enabled&&this._exportTerrain(t),e.getComponents(cc.MeshRenderer));for(const i of t)i.enabled&&this._exportModel(i);for(const r of e.getComponents(cc.Light))r.enabled&&this._exportLight(r)}_exportTerrain(e){var t=new LFX_Terrain;t.Position[0]=e.node.getWorldPosition().x,t.Position[1]=e.node.getWorldPosition().y,t.Position[2]=e.node.getWorldPosition().z,t.TileSize=e.info.tileSize,t.BlockCount[0]=e.info.blockCount[0],t.BlockCount[1]=e.info.blockCount[1],t.LightMapSize=e.info.lightMapSize,t.HeightField=e.getHeightField(),this.Baker.World.Terrains.push(t),this.Terrains.push(e),this._numObjects++,this._numTriangles+=t.BlockCount[0]*t.BlockCount[1]*2048}async _exportModel(i){var e=i.mesh;if(null==e)return!1;if(this.Baker.World.Settings.BakeLightMap){if(!i.bakeSettings.bakeable&&!i.bakeSettings.castShadow)return!1}else if(this.Baker.World.Settings.BakeLightProbe&&!i.bakeSettings.bakeToLightProbe)return!1;var r=new LFX_Mesh;this.Baker.World.Settings.BakeLightMap?(r.CastShadow=i.bakeSettings.castShadow,r.ReceiveShadow=i.bakeSettings.receiveShadow,i.bakeSettings.bakeable&&(r.LightMapSize=i.bakeSettings.lightmapSize)):this.Baker.World.Settings.BakeLightProbe&&(r.CastShadow=i.bakeSettings.bakeToLightProbe);let s=!1,o=!1,a=0;var n=i.node.getWorldMatrix();for(let t=0;t<e.struct.primitives.length;++t){var l=e.readAttribute(t,cc.gfx.AttributeName.ATTR_POSITION),h=e.readAttribute(t,cc.gfx.AttributeName.ATTR_NORMAL),c=e.readAttribute(t,cc.gfx.AttributeName.ATTR_TEX_COORD),g=e.readAttribute(t,cc.gfx.AttributeName.ATTR_TEX_COORD1),d=e.readIndices(t);if(!l||!h||!d)return!1;if(l.length!==h.length)return!1;if(null!=c&&l.length/3!=c.length/2)return!1;if(null!=g&&l.length/3!=g.length/2)return!1;null==g&&(0<r.LightMapSize&&(s=!0),r.ReceiveShadow=!1);for(let e=0;e<l.length/3;++e){var f=new cc.Vec3,u=(f.x=l[3*e+0],f.y=l[3*e+1],f.z=l[3*e+2],cc.Vec3.transformMat4(f,f,n),new cc.Vec3),p=(u.x=h[3*e+0],u.y=h[3*e+1],u.z=h[3*e+2],cc.Vec3.transformMat4Normal(u,u,n),u.normalize(),new LFX_Vertex);p.Position[0]=f.x,p.Position[1]=f.y,p.Position[2]=f.z,p.Normal[0]=u.x,p.Normal[1]=u.y,p.Normal[2]=u.z,null!=c&&(p.UV[0]=c[2*e+0],p.UV[1]=c[2*e+1]),null!=g&&0<r.LightMapSize&&(p.LUV[0]=g[2*e+0],p.LUV[1]=g[2*e+1],p.LUV[0]<0||1<p.LUV[0]||p.LUV[1]<0||1<p.LUV[1])&&(o=!0),r.VertexBuffer.push(p)}for(let e=0;e<d.length/3;++e){var _=new LFX_Triangle;l.length<256||l.length,_.Index[0]=d[3*e+0]+a,_.Index[1]=d[3*e+1]+a,_.Index[2]=d[3*e+2]+a,0<i.materials.length?_.MaterialId=clamp(t,0,i.materials.length-1):_.MaterialId=0,r.TriangleBuffer.push(_)}a=r.VertexBuffer.length}if(0<i.materials.length){const P=cc.Texture2D.PixelFormat;for(let e=0;e<i.materials.length;++e){var t=new LFX_Material,L=(t.Diffuse[0]=1,t.Diffuse[1]=1,t.Diffuse[2]=1,t.Emissive[0]=0,t.Emissive[1]=0,t.Emissive[2]=0,i.materials[e]);if(null!==L){var b=L.getProperty("mainColor",0),b=(b&&(t.Diffuse[0]=b.x,t.Diffuse[1]=b.y,t.Diffuse[2]=b.z),L.passes[0].blendState.targets[0].blend?t.AlphaCulloff=.5:(b=L.getProperty("alphaThreshold",0),t.AlphaCulloff=b||.5),L.getProperty("roughness",0)),b=(t.Roughness=b||.8,L.getProperty("metallic",0)),b=(t.Metallic=b||.6,L.getProperty("albedoScale",0));b&&(b instanceof cc.Vec3?(t.Diffuse[0]*=b.x,t.Diffuse[1]*=b.y,t.Diffuse[2]*=b.z):(t.Diffuse[0]*=b,t.Diffuse[1]*=b,t.Diffuse[2]*=b));let e=L.getProperty("mainTexture",0);var S,b=e=>{e=e.getPixelFormat();return e==P.RGBA8888||e===P.RGB888},m=(null!==(e=null==e?L.getProperty("albedoMap",0):e)&&b(e)&&null!==(S=e.mipmaps[0])&&(-1!==S._uuid.search("@")?t.Texture=S._uuid+S._native:t.Texture=S._uuid),null!==(e=L.getProperty("pbrMap",0))&&b(e)&&null!==(S=e.mipmaps[0])&&(-1!==S._uuid.search("@")?t.PBRMap=S._uuid+S._native:t.PBRMap=S._uuid),L.getProperty("emissive",0));m&&(t.Emissive[0]=m.x,t.Emissive[1]=m.y,t.Emissive[2]=m.z,m=L.getProperty("emissiveScale",0))&&(m instanceof cc.Vec3?(t.Emissive[0]*=m.x,t.Emissive[1]*=m.y,t.Emissive[2]*=m.z):(t.Emissive[0]*=m,t.Emissive[1]*=m,t.Emissive[2]*=m)),null!==(e=L.getProperty("emissiveMap",0))&&b(e)&&null!==(m=e.mipmaps[0])&&(-1!==m._uuid.search("@")?t.EmissiveMap=m._uuid+m._native:t.EmissiveMap=m._uuid)}r.MaterialBuffer.push(t)}}else{var I=new LFX_Material;I.Diffuse[0]=1,I.Diffuse[1]=1,I.Diffuse[2]=1,r.MaterialBuffer.push(I)}s?this.Baker.World.Settings.BakeLightMap&&((I=await Editor.Message.request("asset-db","query-path",e._uuid))?console.error("Error: missing lightmap uv, "+I):console.error("Error: missing lightmap uv, "+e._uuid)):o&&(this.Baker.World.Settings.BakeLightMap&&((I=await Editor.Message.request("asset-db","query-path",e._uuid))?console.error("Error: error lightmap uv, "+I):console.error("Error: error lightmap uv, "+e._uuid)),r.LightMapSize=0),this.Baker.World.Meshes.push(r),this.Models.push(i),this._numObjects++,0<r.LightMapSize&&(this._numTriangles+=r.TriangleBuffer.length)}_exportLight(e){var t=new LFX_Light,i=(t.Type=LFX_Light.DIRECTION,t.GIEnable=!0,t.CastShadow=e.staticSettings.castShadow,t.Position[0]=e.node.getWorldPosition().x,t.Position[1]=e.node.getWorldPosition().y,t.Position[2]=e.node.getWorldPosition().z,new cc.Vec3(0,0,-1));cc.Vec3.transformQuat(i,i,e.node.getWorldRotation()),t.Direction[0]=i.x,t.Direction[1]=i.y,t.Direction[2]=i.z,t.Color[0]=e.color.x,t.Color[1]=e.color.y,t.Color[2]=e.color.z;if(e instanceof cc.DirectionalLight){i=e;t.Type=LFX_Light.DIRECTION,t.Illuminance=i.illuminance,t.ShadowMask=1-i.shadowSaturation,null===this.MainLight&&(this.MainLight=e)}else{if(e instanceof cc.SphereLight){i=e;t.Type=LFX_Light.POINT,t.Size=i.size,t.Range=i.range,t.AttenFallOff=1,t.Illuminance=i.luminance}else{if(!(e instanceof cc.SpotLight))return;i=e;t.Type=LFX_Light.SPOT,t.Size=i.size,t.Range=i.range,t.AttenFallOff=1,t.SpotInner=Math.cos(i.spotAngle/4*(Math.PI/180)),t.SpotOuter=Math.cos(i.spotAngle/2*(Math.PI/180)),t.SpotFallOff=1,t.Illuminance=i.luminance}cc.director.root.pipeline.pipelineSceneData.isHDR&&(t.Illuminance*=1e4)}e.node.mobility===cc.MobilityMode.Static?t.DirectScale=1:t.DirectScale=0,t.IndirectScale=1,this.Baker.World.Lights.push(t),this.Lights.push(e),this._numLights++}_exportCamera(e){(null===this.MainCamera||"MainCamera"===e.node.name)&&(this.MainCamera=e)}_exportLightProbes(e){if(null!==e.globals.lightProbeInfo.data)for(const i of e.globals.lightProbeInfo.data.probes){var t=new LFX_LightProbe;t.Position[0]=i.position.x,t.Position[1]=i.position.y,t.Position[2]=i.position.z,t.Normal[0]=i.normal.x,t.Normal[1]=i.normal.y,t.Normal[2]=i.normal.z,this.Baker.World.LightProbes.push(t)}}_run(){let n=!1,f=3e3;f=0,getPort((e,t)=>{e?(f=-1,console.log("Configure port failed")):f=t}),console.log("Start baker server "+f),this._timer=setInterval(()=>{var e;if(n)if(this.Baker.closed)clearInterval(this._timer);else{if(this.Baker.Started){if(this.Baker.Finished){console.log("End");let n=null;try{n=this.Baker.Download()}catch(e){console.error("LightFX get result file failed."),n=null}var t="Bake scene stats:\n\tobjects "+this._numObjects+"\n\tlights "+this._numLights+"\n\ttriangles "+this._numTriangles+"\n";if(this.Baker.emit("log",t),null!==n){for(let e=0;e<n.MeshInfos.length;++e){var i=n.MeshInfos[e],i="Mesh "+i.Id+": Index("+i.Index+")  Offset("+i.Offset[0]+", "+i.Offset[1]+")  Scale("+i.Scale[0]+", "+i.Scale[1]+")";this.Baker.emit("log",i)}for(let e=0;e<n.LightProbeInfos.length;++e){var r=n.LightProbeInfos[e],r="LightProbe "+e+": pos("+r.Position[0]+", "+r.Position[1]+", "+r.Position[2]+") coef("+r.Coefficients[0]+", "+r.Coefficients[1]+", "+r.Coefficients[2]+", ...)";this.Baker.emit("log",r)}}if(this.Baker.Stop(),clearInterval(this._timer),this.Baker.Close(),this._timer=null,this.Baker.emit("end",!0),null!==this._process&&(this._process.kill("SIGKILL"),this._process=null),this.Baker.World.Settings.BakeLightMap){var t=this.Scene?.scene;null!=this.Scene&&LFX_App.DirtyBaked(this.Scene);for(const d of this.Terrains)0<d.lightMapSize&&d._resetLightmap(!0);t&&this.MainLight&&this.MainLight.node&&this.MainLight.node.mobility==cc.MobilityMode.Stationary&&(t.globals.bakedWithStationaryMainLight=!0),t&&(t.globals.bakedWithHighpLightmap=this.Baker.World.Settings.Highp)}if(null!==n&&this.Baker.World.Settings.BakeLightProbe){var s=this.Scene?.scene;if(s&&s.globals&&s.globals.lightProbeInfo&&s.globals.lightProbeInfo.data&&s.globals.lightProbeInfo.data.probes)if(s.globals.lightProbeInfo.data.probes.length!==n.LightProbeInfos.length){s.globals.lightProbeInfo.data.probes.length=n.LightProbeInfos.length;for(let e=0;e<s.globals.lightProbeInfo.data.probes.length;++e){var o=n.LightProbeInfos[e],a=new cc.Vec3(o.Position[0],o.Position[1],o.Position[2]),l=new cc.Vec3(o.Normal[0],o.Normal[1],o.Normal[2]),h=(s.globals.lightProbeInfo.data.probes[e]=new cc.Vertex(a),s.globals.lightProbeInfo.data.probes[e]);if(o&&h){h.normal=l,h.coefficients.length=o.Coefficients.length/3;for(let e=0;e<h.coefficients.length;++e)h.coefficients[e]=new cc.Vec3,h.coefficients[e].x=o.Coefficients[3*e+0],h.coefficients[e].y=o.Coefficients[3*e+1],h.coefficients[e].z=o.Coefficients[3*e+2];cce.Engine.repaintInEditMode(),cce.SceneFacadeManager.recordNode(s),cce.SceneFacadeManager.snapshot()}}}else if(n.LightProbeInfos.length===s.globals.lightProbeInfo.data?.probes.length){if(this.Baker.World.Settings.BakeLightProbe&&s.globals.lightProbeInfo.data){for(let e=0;e<s.globals.lightProbeInfo.data.probes.length;++e){var c=n.LightProbeInfos[e],g=s.globals.lightProbeInfo.data.probes[e];if(c&&g){g.coefficients.length=c.Coefficients.length/3;for(let e=0;e<g.coefficients.length;++e)g.coefficients[e]=new cc.Vec3,g.coefficients[e].x=c.Coefficients[3*e+0],g.coefficients[e].y=c.Coefficients[3*e+1],g.coefficients[e].z=c.Coefficients[3*e+2]}}cce.Engine.repaintInEditMode(),cce.SceneFacadeManager.recordNode(s),cce.SceneFacadeManager.snapshot()}}else console.error("Light probe bake result mismatch with scene.");else console.warn("No light probes were found in the scene and cannot be baked.")}null!==n&&this.Baker.World.Settings.BakeLightMap&&readImageList(ps.join(this._uploadPath,"output"),!1,e=>{for(const o of n.TerrainInfos){var t=this.Terrains[o.Id],i=e["LFX_Terrain_"+this.Index2Str(o.Index)+".png"];i&&((i=i.texture)?t._updateLightmap(o.BlockId,i,o.Offset[0],o.Offset[1],o.Scale[0],o.Scale[1]):t._updateLightmap(o.BlockId,null,o.Offset[0],o.Offset[1],o.Scale[0],o.Scale[1]),Editor.Message.broadcast("scene:change-node",t.node.uuid))}for(const a of n.MeshInfos){var r=this.Models[a.Id],s=e["LFX_Mesh_"+this.Index2Str(a.Index)+".png"];s&&((s=s.texture)?(r._updateLightmap(s,a.Offset[0],a.Offset[1],a.Scale[0],a.Scale[1]),r.node._dirtyFlags=1):r._updateLightmap(null,a.Offset[0],a.Offset[1],a.Scale[0],a.Scale[1]),r.node)&&(s=r.node.components.indexOf(r),nodeMgr.emit("change",r.node,{type:NodeOperationType.SET_PROPERTY,propPath:`__comps__.${s}.bakeSettings`}))}image.Profile.setLatestLightmapResults(this.Scene.uuid,Object.values(e).map(e=>e.uuid).filter(Boolean)),image.Profile.setLatestLightmapResultsDir(this.Scene.uuid,this._uploadPath),cce.Engine.repaintInEditMode()})}}else this.Baker.connected&&(this.Baker.Start(),this.Baker.client.on("Tick",e=>{this._lastTicks=this._currentTicks}));this._currentTicks+=100}else 0<f?(this.Baker.Launch(f),t="http://127.0.0.1:"+f,e=this.Baker.lfxpath+"/LightFX",console.log("Launching "+e),this._process=exec__default.default.execFile(e,[t],{cwd:this._uploadPath},(e,t,i)=>{e&&"SIGKILL"!==e.signal&&(this.Baker.Error=!0,console.error(e),console.error("Baker app aborted with an exception"),this.Baker.Stop(),clearInterval(this._timer),this.Baker.Close(),this._timer=null,this.Baker.emit("end",!0),this._process.kill("SIGKILL"))}),this._process||(console.log("Launching baker failed."),clearInterval(this._timer)),n=!0):f<0&&clearInterval(this._timer)},100)}}class Lightmap{constructor(){this.scene=null,this.renderScene=null,this._startBakerTim=0}init(){this.lfxApp=new LFX_App,this.lfxApp.Baker.on("login",e=>{console.debug("lightFX output info: login",e),this._startBakerTim=(new Date).getTime(),this.lfxApp?.Baker.World.Settings.BakeLightMap&&Editor.Message.broadcast("lightmap:start"),this.lfxApp?.Baker.World.Settings.BakeLightProbe&&Editor.Message.broadcast("lightmap:light-probe-start")}),this.lfxApp.Baker.on("log",e=>{console.debug("lightFX output info: log",e),this.lfxApp?.Baker.World.Settings.BakeLightMap&&Editor.Message.broadcast("lightmap:log",e),this.lfxApp?.Baker.World.Settings.BakeLightProbe&&Editor.Message.broadcast("lightmap:light-probe-log",e)}),this.lfxApp.Baker.on("progress",e=>{console.debug("lightFX output info: progress",e),this.lfxApp?.Baker.World.Settings.BakeLightMap&&Editor.Message.broadcast("lightmap:progress",e),this.lfxApp?.Baker.World.Settings.BakeLightProbe&&Editor.Message.broadcast("lightmap:light-probe-progress",e)}),this.lfxApp.Baker.on("fineshed",e=>{console.debug("lightFX output info: fineshed",e),this.lfxApp?.Baker.World.Settings.BakeLightMap&&Editor.Message.broadcast("lightmap:finished"),this.lfxApp?.Baker.World.Settings.BakeLightProbe&&(Editor.Message.broadcast("lightmap:light-probe-finished"),this.scene?.globals.lightProbeInfo.onProbeBakeFinished())}),this.lfxApp.Baker.on("end",e=>{var t;console.debug("lightFX output info: end",e),this.lfxApp?.Baker.World.Settings.BakeLightMap&&(Editor.Message.broadcast("lightmap:end",e),this.reportLightMap("A100002",this.lfxApp?.Baker.World.Lights.length),t=Number((((new Date).getTime()-this._startBakerTim)/1e3/60).toFixed(2)),this.reportLightMap("A100000",t)),this.lfxApp?.Baker.World.Settings.BakeLightProbe&&Editor.Message.broadcast("lightmap:light-probe-end",e),cce.Engine.repaintInEditMode()}),this.lfxApp.Baker.on("cancel",e=>{console.debug("lightFX output info: cancel",e),this.lfxApp?.Baker.World.Settings.BakeLightMap&&Editor.Message.broadcast("lightmap:cancel",e),this.lfxApp?.Baker.World.Settings.BakeLightProbe&&Editor.Message.broadcast("lightmap:light-probe-cancel",e)}),this.scene=cc__default.default.director.getScene(),cce.Scene.on("open",this.onLoadScene.bind(this)),cce.Scene.on("reload",this.onLoadScene.bind(this))}reportLightMap(e,t){var i={};i[e]=t,Editor.Metrics.trackEvent({sendToNewCocosAnalyticsOnly:!0,category:"bakingSystem",value:i})}onLoadScene(e){this.scene=e,this.renderScene=this.scene.renderScene}async apply(e,t){fs__default.default.existsSync(e.path)||fs__default.default.mkdirSync(e.path),t&&(this.lfxApp.Baker.lfxpath=ps__default.default.join(t,"../tools/lightmap-tools")),this.lfxApp.Init(e),await this.bake()}clear(){LFX_App.Reset(this.scene),cce.Engine.repaintInEditMode()}async bake(){await this.lfxApp.BakeLightMap(this.scene)}cancel(){this.lfxApp.Cancel()}bakeLightProbe(e,t){fs__default.default.existsSync(e.path)||fs__default.default.mkdirSync(e.path),t&&(this.lfxApp.Baker.lfxpath=ps__default.default.join(t,"../tools/lightmap-tools")),this.lfxApp.Init(e),this.lfxApp.BakeLightProbe(this.scene);try{var i;this.scene&&this.scene.globals.lightProbeInfo&&this.scene.globals.lightProbeInfo.data&&this.scene.globals.lightProbeInfo.data.probes&&(i=this.scene.globals.lightProbeInfo.data.probes.length,Editor.Metrics._trackEventWithTimer({category:"bakingSystem",id:"A100010",value:i}))}catch(e){console.debug(e)}}cancelLightProbe(){this.lfxApp.Cancel()}}var lightMap=new Lightmap;function load(){lightMap.init()}function unload(){}const methods={async apply(e,t){await lightMap.apply(e,t)},cancel(){lightMap.cancel()},clear(){lightMap.clear()},bakeLightProbe(e,t){lightMap.bakeLightProbe(e,t)},cancelLightProbe(){lightMap.cancelLightProbe()}};exports.load=load,exports.methods=methods,exports.unload=unload;