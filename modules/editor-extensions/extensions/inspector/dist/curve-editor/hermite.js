"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const clamp=Editor.Utils.Math["clamp"],{drawLine,calcHermite,calcFunc,Point}=require("./utils"),POINT_LENGTH=2;class Hermite{get keyFrames(){return this._keyframes.map(t=>{var e=this.grid.axisToOri(t.point),{w:i,h:n}=this.grid.location;return{...e,inTangent:Number((t.inTangent*i/n).toFixed(POINT_LENGTH)),outTangent:Number((t.outTangent*i/n).toFixed(POINT_LENGTH))}})}get ctrlKey(){return this._keyframes.map((t,e)=>{t.index=e;var i=this.calcCtrl(e),e=(0!==e&&(t.inPoint=i.inPoint),e!==this._keyframes.length-1&&(t.outPoint=i.outPoint),this.grid.axisToCanvas(t.point));return t.point.canvas=e,t})}constructor(t){this.negative=!1,this.multi=1,this.grid=t.grid,this.ctrlConfig=t.ctrlConfig,this.curveConfig=t.curveConfig,this.cxt2D=t.context,this.cxt2D.strokeStyle=t.curveConfig.strokeStyle,this.canvas=t.context.canvas,this.negative=!!t.range}rePaint(){this.clear(),this.cxt2D.strokeStyle=this.curveConfig.strokeStyle;for(const t of this._keyframes)t.outTangent=t.outTangent/this.multi,t.inTangent=t.inTangent/this.multi;this.draw(this._keyframes)}draw(t){var e=this.cxt2D,{w:i,h:n}=this.grid.location;try{this._keyframes=require("lodash").cloneDeep(t)}catch(t){return void console.error(t)}this.negative?this.multi=n/i/2:this.multi=n/i;for(const c of this._keyframes){var s=this.grid.tranToAxis(c);c.outTangent*=this.multi,c.inTangent*=this.multi,c.point=s}this.hermiteArgs=[];for(let t=0;t<this._keyframes.length-1;t++){var r=this._keyframes[t+1],a=this._keyframes[t],h=(this.hermiteArgs[t]=calcHermite(a.point,a.outTangent,r.point,r.inTangent),calcFunc(this.hermiteArgs[t]));e.beginPath();for(let t=a.point.x;t<=r.point.x;t++){var o=this.grid.axisToCanvas({x:t,y:h(t)});e.lineTo(o.x,o.y)}a.outTangent!==Number.POSITIVE_INFINITY&&r.inTangent!==Number.POSITIVE_INFINITY||(a=this.grid.axisToCanvas(r.point),e.lineTo(a.x,a.y)),e.stroke(),e.closePath()}this.drawEdge()}updateTan(t,e,i){var n;0===t&&"inTangent"===i||t===this._keyframes.length-1&&"outTangent"===i||(this._keyframes[t][i]=e,e=this._keyframes[t],"outTangent"===i?(n=this._keyframes[t+1],this.hermiteArgs[t]=calcHermite(e.point,e.outTangent,n.point,n.inTangent)):"inTangent"===i&&(n=this._keyframes[t-1],this.hermiteArgs[t-1]=calcHermite(n.point,n.outTangent,e.point,e.inTangent)))}addKeyFrame(e){e-=this.grid.location.x;let i=null;for(let t=0;t<this._keyframes.length-1;t++){var n=this._keyframes[t].point,s=this._keyframes[t+1].point;if(e>n.x&&s.x>e){i=t;break}}var t,r;return null===i?null:(t=this.calcSlope(e,i),r=calcFunc(this.hermiteArgs[i])(e),this.hermiteArgs.splice(i+1,0,this.hermiteArgs[i]),this._keyframes.splice(i+1,0,{point:new Point({x:e,y:r}),outTangent:t,inTangent:t}),i+1)}delKeyFrame(t){var e=this._keyframes[t+1],i=this._keyframes[t-1];e&&this.hermiteArgs.splice(t,1),i&&this.hermiteArgs.splice(t-1,1),e&&i&&(i=calcHermite(i.point,i.outTangent,e.point,e.inTangent),this.hermiteArgs.splice(t-1,0,i)),this._keyframes.splice(t,1)}update(e=this.cxt2D){var i=this._keyframes;for(let t=1;t<i.length;t++){var n=i[t],s=i[t-1],r=calcFunc(this.hermiteArgs[t-1]);e.beginPath();for(let t=s.point.x;t<=n.point.x;t++){var a=this.grid.axisToCanvas({x:t,y:r(t)});e.lineTo(a.x,a.y)}s.outTangent!==Number.POSITIVE_INFINITY&&n.inTangent!==Number.POSITIVE_INFINITY||(s=this.grid.axisToCanvas(n.point),e.lineTo(s.x,s.y)),e.stroke(),e.closePath()}e===this.cxt2D&&this.drawEdge()}moveY(e){var i=this.grid.location["h"],n=JSON.parse(JSON.stringify(this._keyframes));for(let t=0;t<this._keyframes.length;t++){var s=this._keyframes[t],r=s["point"];if(r.y>i||r.y<0)return this._keyframes=n,!1;r.y+=e,r.y=clamp(r.y,0,i),r.canvas=this.grid.axisToCanvas(r),t<this._keyframes.length-1&&(r=this._keyframes[t+1],this.hermiteArgs[t]=calcHermite(s.point,s.outTangent,r.point,r.inTangent))}return!0}moveKey(t,e,i){var n=this._keyframes[i];let s=this._keyframes[i+1],r=this._keyframes[i-1];var a=n["point"],{w:h,h:o}=this.grid.location;let c=[0,o];return this.negative&&(c=[-o/2,o/2]),(a.x>h||a.x<0)&&(a.y>o||a.y<0)||(o=this.grid.canvasToAxis({x:t,y:e}),a.x=clamp(o.x,0,h),a.y=clamp(o.y,c[0],c[1]),s&&a.x>s.point.x?(this._keyframes.splice(i,1),this._keyframes.splice(i+1,0,n),r&&(this.hermiteArgs[i-1]=calcHermite(r.point,r.outTangent,s.point,s.inTangent)),i++,r=s,s=this._keyframes[i+1]):r&&a.x<r.point.x&&(this._keyframes.splice(i,1),this._keyframes.splice(i-1,0,n),s&&(this.hermiteArgs[i]=calcHermite(r.point,r.outTangent,s.point,s.inTangent)),i--,s=r,r=this._keyframes[i-1]),s&&(this.hermiteArgs[i]=calcHermite(n.point,n.outTangent,s.point,s.inTangent)),r&&(this.hermiteArgs[i-1]=calcHermite(r.point,r.outTangent,n.point,n.inTangent))),i}clear(){this.cxt2D.clearRect(0,0,this.canvas.width,this.canvas.height)}calcCtrl(t,e){var i,n=this._keyframes[t].point;let s=null,r=null;return"outTangent"!==e&&(i=this._keyframes[t].inTangent,(r=this.calcCtrlPoint(n,i,"inTangent")).canvas=this.grid.axisToCanvas(r)),"inTangent"!==e&&(i=this._keyframes[t].outTangent,(s=this.calcCtrlPoint(n,i,"outTangent")).canvas=this.grid.axisToCanvas(s)),{outPoint:s,inPoint:r}}calcSlope(t,e){var{a:e,b:i,c:n}=this.hermiteArgs[e];return 3*e*t*t+2*i*t+n}drawEdge(){var{w:t,x:e}=this.grid.location,i=this.ctrlKey[0].point.canvas,n=this.ctrlKey[this._keyframes.length-1].point.canvas;this.cxt2D.save(),this.cxt2D.strokeStyle="rgba(255, 0, 0, 0.11)",drawLine({x:0,y:i.y},i,this.cxt2D),drawLine({x:2*e+t,y:n.y},n,this.cxt2D),this.cxt2D.restore()}calcCtrlPoint(t,e,i){var n=this.ctrlConfig["handlerSize"];let s=0,r=0;return r=e!==Number.POSITIVE_INFINITY?(s=Math.sqrt(n*n/(1+e*e)),s="inTangent"===i?t.x-s:t.x+s,t.y-e*(t.x-s)):(s=t.x,"inTangent"===i?t.y+n:t.y-n),{x:s,y:r,type:i}}}exports.default=Hermite;