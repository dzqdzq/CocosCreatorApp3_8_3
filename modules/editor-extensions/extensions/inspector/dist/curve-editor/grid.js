"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const HALF_TEXT_WIDTH=5,POINT_LENGTH=2,Point=require("./utils")["Point"];class Grid{set cxt2D(t){this.canvas=t.canvas,this._cxt2D=t}get cxt2D(){return this._cxt2D}set multiplier(t){0!==t&&(this._multiplier=t,this.rePaint())}get multiplier(){return this._multiplier}set negative(t){t!==this._negative&&(this._negative=t,this.rePaint())}get negative(){return this._negative}get step(){var t=this.location.w/this.axis.piece,i=this.location.h/this.axis.piece,{rangeX:e,rangeY:s}=this.axis,e=Number((e/this.axis.piece).toFixed(POINT_LENGTH));let a=Number((s/this.axis.piece).toFixed(POINT_LENGTH));s=Number((1/this.axis.piece).toFixed(POINT_LENGTH));let h=Number((1/this.axis.piece).toFixed(POINT_LENGTH));return this.negative&&(a*=2,h*=2),{spaceX:t,spaceY:i,stepX:e,stepY:a,orgStepX:s,orgStepY:h}}get location(){return{x:this.axesMargin,y:this.axesMargin,w:this.canvas.width-2*this.axesMargin,h:this.canvas.height-2*this.axesMargin}}constructor(t){this._negative=!1,this.cxt2D=t.context,this.axesMargin=t.axisMargin,this.axis=t.axis,this._multiplier=t.multiplier||1,this.cxt2D.lineWidth=t.lineWidth,this.cxt2D.strokeStyle=t.color||"#333"}draw(){var{spaceX:t,spaceY:i}=this.step,{x:t,w:i,h:e}=(this.drawGrid(t/4,i/2,"rgba(51, 51, 51, 0.44)",.5),this.negative?this.drawGrid(t,+i,"#3a3939",1):this.drawGrid(t,2*i,"#3a3939",1),this.location);this.cxt2D.strokeStyle="#333",this.cxt2D.lineWidth=1.5,this.negative&&(this.cxt2D.beginPath(),this.cxt2D.moveTo(t,e/2+t+.5),this.cxt2D.lineTo(i+t,e/2+t+.5),this.cxt2D.stroke()),this.drawAxis()}rePaint(){this.clear(),this.draw()}axisToOri(t){var{w:i,h:e}=this.location;let s;return{time:Number((t.x/i).toFixed(POINT_LENGTH)),value:s=this.negative?Number((t.y/e*2).toFixed(POINT_LENGTH)):Number((t.y/e).toFixed(POINT_LENGTH))}}tranToAxis(t){var{w:i,h:e}=this.location;let s;s=this.negative?t.value*e/2:t.value*e;e=t.time*i;return new Point({x:e,y:s})}tranToCanvas(t){t=this.tranToAxis(t);return this.axisToCanvas(t)}canvasToAxis(t){var{x:i,y:e,h:s}=this.location,i=t.x-i;let a=s-t.y+e;return this.negative&&(a=s/2-t.y+e),new Point({x:i,y:a})}axisToCanvas(t){var{x:i,y:e,h:s}=this.location;return this.negative?new Point({x:t.x+i,y:s/2-t.y+e}):new Point({x:t.x+i,y:s-t.y+e})}clear(){var{x:t,y:i,w:e,h:s}=this.location;this.cxt2D.clearRect(t,i,e,s)}drawAxis(){this.cxt2D.lineWidth=2;var{x:t,y:i,w:e,h:s}=this.location,{stepX:a,stepY:h,spaceX:r,spaceY:x}=this.step;this.cxt2D.clearRect(0,0,this.axesMargin,s+this.axesMargin),this.cxt2D.clearRect(0,s+this.axesMargin,e+this.axesMargin,this.axesMargin),this.cxt2D.strokeRect(t,i,e,s),this.cxt2D.fillStyle="#ccc";let n=t-HALF_TEXT_WIDTH,c=0;for(;n<t+e;)this.cxt2D.fillText(c,n,i+s+t/2),c=Number((c+a).toFixed(2)),n+=r;let o=i+s,l=this.negative?-1*this.multiplier:0;for(;Math.ceil(o)>=i;)this.cxt2D.fillText(l,i/2-HALF_TEXT_WIDTH,o),l=Number((l+h*this.multiplier).toFixed(2)),o-=x}drawGrid(i,e,t,s){s&&(this.cxt2D.lineWidth=s),t&&(this.cxt2D.strokeStyle=t);var{x:a,y:h,w:r,h:x}=this.location;for(let t=a;t<r+a;t+=i)this.cxt2D.beginPath(),this.cxt2D.moveTo(t+.5,h),this.cxt2D.lineTo(t+.5,x+h),this.cxt2D.stroke();for(let t=x+a;t>a;t-=e)this.cxt2D.beginPath(),this.cxt2D.moveTo(a,t+.5),this.cxt2D.lineTo(r+a,t+.5),this.cxt2D.stroke()}}exports.default=Grid;