"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.forceUpdate=exports.setupContext=void 0;const extension_sdk_1=require("@editor/extension-sdk"),semver_1=__importDefault(require("semver")),fs_extra_1=__importDefault(require("fs-extra")),config_1=require("../shared/config"),interface_1=require("../public/interface"),utils_1=require("../public/utils");function assertIsDefined(e,t){if(null==e)throw new Error("string"==typeof t?t:"Expected 'val' to be defined, but received "+e)}function normalizeListResponse(e){var t=new Set,a={};for(const n of e)t.add(n.name),a[n.name]=n;return{names:t,extensions:a}}function normalizeInternalPackages(e){var t={},a={},n=[];for(const o of e){var r=o.name,s=Editor.Package.__protected__.checkType(o.path);n.push(o.path),t[o.path]={...o,pkgType:s},(a[r]??(a[r]={}))[s]=o.path}return{packagesEntry:n,packages:t,nameToPaths:a}}async function setupContext(){var{customSdkDomain:e,extensionPaths:t}=await(0,config_1.readConfigs)(),a=Editor.App.version;return{sdk:new extension_sdk_1.Manager({extensionPaths:[t.project,t.global],domain:e}),editorVersion:a,extensionPaths:t}}async function forceUpdate(e){const{editorVersion:a,sdk:n,extensionPaths:r}=await setupContext();var t=(await n.getExtensionList({e:a,label:""+interface_1.ExtensionManagerTab.ForcedUpdate,lang:Editor.I18n.getLanguage()}))["packages"],{names:t,extensions:s}=normalizeListResponse(t);const{packages:o,nameToPaths:i}=normalizeInternalPackages(await Editor.Package.getPackages());var l=new Map,c=new Map;let p=void 0;for(const b of t)try{var d=s[b],u=i[b]??{},f=Object.keys(u),h=b===utils_1.INTERNAL_EXTENSION_NAME;if(f.length<1)l.set(b,{name:b,type:"global",path:"",builtinPath:"",enabled:!1});else for(const x of f)if(!c.has(b)){var g,P=u[x],_=(assertIsDefined(P,`cannot find path type "${x}" in package local paths`),o[P]);switch(assertIsDefined(_,`cannot find package path "${P}" in package entity map`),x){case"cover":case"builtin":case"local":semver_1.default.gte(_.version,d.latest_version)?(null!=l.get(b)&&l.delete(b),c.set(b,{path:_.path,enabled:_.enable}),h&&!0!==_.enable&&(p={builtInPath:u.builtin??"",currentPath:"",newInstallPath:_.path})):l.has(b)&&!0===_.enable?h&&p?p.currentPath=_.path:(g=l.get(b),l.set(b,{...g,path:_.path,type:_.pkgType})):l.set(b,{name:b,path:_.path,type:x,builtinPath:u.builtin??"",enabled:_.enable})}}}catch(e){console.error(e);continue}t=Array.from(l).map(([,t])=>{var e=t["name"];return n.getDownloader({installPath:r.global,name:e,e:a},{perDownloaded:async e=>{assertIsDefined(e.installPkgPath);var e=e.installPkgPath,t=o[e];fs_extra_1.default.existsSync(e)&&null!=t&&(await Editor.Package.disable(e,{}),await Editor.Package.unregister(e))},perInstalled:async e=>{assertIsDefined(e.installPkgPath),e.name===utils_1.INTERNAL_EXTENSION_NAME?p={currentPath:t.path,newInstallPath:e.installPkgPath,builtInPath:t.builtinPath}:(await Editor.Package.register(e.installPkgPath),await Editor.Package.enable(e.installPkgPath))}})});try{var m=await Promise.allSettled(t.map(e=>e.download()));for(let e=0;e<m.length;e++){var k=m[e];"fulfilled"!==k.status&&console.error(k.reason)}}catch(e){console.error(e)}if(0<c.size){const v=c.entries();setTimeout(async()=>{for(var[t,{enabled:e,path:a}]of v)if(!0!==e)try{await Editor.Package.enable(a)}catch(e){console.error(`Extension enable failed. name "${t}", path "${a}"`),console.error(e);continue}},0)}try{if("object"==typeof p&&null!=p&&e.selfUpdate){const y=e.selfUpdate,E=p;setTimeout(async()=>{var e=await Editor.Panel.has("extension.manager");y({...E,reopenPanel:e})},0)}}catch(e){console.error("Extension forced self update failed"),console.error(e)}}exports.setupContext=setupContext,exports.forceUpdate=forceUpdate;