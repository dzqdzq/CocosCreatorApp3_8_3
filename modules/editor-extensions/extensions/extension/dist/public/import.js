"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a);var o=Object.getOwnPropertyDescriptor(t,a);o&&("get"in o?t.__esModule:!o.writable&&!o.configurable)||(o={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,r,o)}:function(e,t,a,r){e[r=void 0===r?a:r]=t[a]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&__createBinding(t,e,a);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.importPackageByFolderPath=exports.importPackageSymlink=exports.importPackageFolder=exports.importPackage=exports.ImportPackageErrorMessage=void 0;const child_process_1=require("child_process"),fix_path_1=__importDefault(require("fix-path")),fs_extra_1=__importStar(require("fs-extra")),path_1=__importDefault(require("path")),throwIfNotExists=(exports.ImportPackageErrorMessage={invalidPath:"invalid path",decompressFail:"decompress fail",cancel:"cancel",cannotFindPackageJson:"cannot find package.json"},(e,t)=>{if(!fs_extra_1.default.existsSync(e))throw new Error(t??`path not exists: "${e}"`)}),unzipOfDarwin=function(e,t,a){var r=path_1.default.dirname(t),r=(fs_extra_1.default.ensureDirSync(r),(0,fix_path_1.default)(),(0,child_process_1.spawn)("unzip",["-n",e,"-d",t]));let o="",n=(r.stderr.on("data",e=>{o+=e}),"");r.stdout.on("data",e=>{n+=e}),r.on("error",e=>{n&&console.log(n),o&&console.warn(o),a(e)}),r.on("close",e=>{n&&console.log(n),o&&console.warn(o);let t=null;0!==e&&(t=new Error(Editor.I18n.t("extension.menu.decompressFail"))),a(t)})},unzipOfWin32=function(e,t,a){var r=path_1.default.dirname(t),r=(fs_extra_1.default.ensureDirSync(r),(0,child_process_1.spawn)(path_1.default.join(Editor.App.path,"../tools/unzip.exe"),["-n",e,"-d",t]));let o="",n=(r.stderr.on("data",e=>{o+=e}),"");r.stdout.on("data",e=>{n+=e}),r.on("error",e=>{n&&console.log(n),o&&console.warn(o),a(e)}),r.on("close",e=>{n&&console.log("[extension] "+n),o&&console.warn("[extension] "+o);let t=null;0!==e&&(t=new Error(Editor.I18n.t("extension.menu.decompressFail"))),a(t)})};async function importPackage(e="project",r,t){const o=t?.extensionDisplayName||path_1.default.basename(r,".zip");var t=t?.forceImport,a="project"===e?Editor.Project.path:Editor.App.home,a=path_1.default.join(a,"./extensions");if(fs_extra_1.default.existsSync(a)||await fs_extra_1.default.ensureDir(a),!r||r===a)throw new Error("invalid path");let n;n="win32"===process.platform?unzipOfWin32:unzipOfDarwin;a=Editor.App.temp;const i=path_1.default.join(a,`extension_${o}_`+Date.now());try{const s=Editor.Task.addNotice({title:Editor.I18n.t("extension.menu.decompressingNow",{extensionName:o}),type:"log",source:"extension"});await new Promise((t,a)=>{n(r,i,e=>{if(Editor.Task.removeNotice(s),e)return console.error(e),a(e.message);t(null),Editor.Task.addNotice({title:Editor.I18n.t("extension.menu.decompressSuccess",{extensionName:o}),message:Editor.I18n.t("extension.menu.importingNow",{extensionName:o}),type:"success",source:"extension",timeout:5e3})})})}catch(e){throw new Error("decompress fail")}return importPackageTemplate({forceImport:t??!1,extensionDisplayName:o,extensionFolder:i,selectedPath:r,type:e,async processor(e,t){await fs_extra_1.default.move(e,t,{overwrite:!0})},cleanup:async e=>{fs_extra_1.default.existsSync(e)&&await fs_extra_1.default.remove(e),await fs_extra_1.default.remove(i)}})}async function importPackageFolder(e,t,a){return throwIfNotExists(t,`Package import failed: invalid package folder "${t}"`),await importPackageTemplate({forceImport:a?.forceImport??!1,extensionDisplayName:a?.extensionDisplayName??path_1.default.basename(t),type:e,extensionFolder:t,selectedPath:t,async processor(e,t){await fs_extra_1.default.copy(e,t)}})}function importPackageSymlink(e,t,a){return throwIfNotExists(t,`Package import failed: invalid package folder "${t}"`),importPackageTemplate({type:e,extensionDisplayName:a?.extensionDisplayName??path_1.default.basename(t),forceImport:a?.forceImport??!1,extensionFolder:t,selectedPath:t,async processor(e,t){await fs_extra_1.default.symlink(e,t,"junction")}})}async function importPackageByFolderPath(e){try{if(await(0,fs_extra_1.pathExists)(e)){var t;if(null==await detectPackage(e))throw(t=new Error(exports.ImportPackageErrorMessage.cannotFindPackageJson)).path=e,t;await Editor.Package.register(e),await Editor.Package.enable(e)}}catch(e){console.error(e)}}async function importPackageTemplate(e){const{extensionDisplayName:t,type:a,extensionFolder:r}=e,o=e.forceImport;var n="project"===a?Editor.Project.path:Editor.App.home,n=path_1.default.join(n,"./extensions"),i=(fs_extra_1.default.existsSync(n)||await fs_extra_1.default.ensureDir(n),await detectPackage(r));if(null==i)throw(s=new Error(exports.ImportPackageErrorMessage.cannotFindPackageJson)).path=r,s;i.nested&&Editor.Task.addNotice({title:Editor.I18n.t("extension.menu.zipDirectoryWarnTitle",{extensionName:t}),message:Editor.I18n.t("extension.menu.zipDirectoryWarnContent"),type:"warn",source:"extension",timeout:5e3});var s=path_1.default.join(n,i.packageName),n=i.packageFolder;if(fs_extra_1.default.existsSync(s)){if(!await(!!o||1!==(await Editor.Dialog.info(Editor.I18n.t("extension.menu.reinstall",{extensionName:t}),{buttons:[Editor.I18n.t("extension.menu.confirm"),Editor.I18n.t("extension.menu.cancel")],cancel:1})).response))throw"function"==typeof e.cleanup&&await e.cleanup(n),new Error("cancel");try{await Editor.Package.disable(s,{replacement:!1}),await Editor.Package.unregister(s),await Editor.Message.request("extension","trash-item",s)}catch(e){if(await Editor.Package.register(s),await Editor.Package.enable(s),"string"==typeof e)throw new Error(e);throw e}}try{await e.processor(n,s)}finally{if("function"==typeof e.cleanup)try{await e.cleanup(n)}catch(e){console.error(e)}}return Editor.Task.addNotice({title:Editor.I18n.t("extension.menu.importSuccess"),message:t,type:"success",source:"extension",timeout:5e3}),Editor.Package.register(s),s}async function detectPackage(e){var t=path_1.default.join(e,"package.json");if(fs_extra_1.default.existsSync(t))return{packageName:(await fs_extra_1.default.readJson(t)).name,packageJsonPath:t,packageFolder:e,nested:!1};for(const o of await fs_extra_1.default.readdir(e)){var a=path_1.default.join(e,o),r=path_1.default.join(a,"package.json");if(fs_extra_1.default.existsSync(r))return{packageName:(await fs_extra_1.default.readJson(r)).name,packageJsonPath:r,packageFolder:a,nested:!0}}}exports.importPackage=importPackage,exports.importPackageFolder=importPackageFolder,exports.importPackageSymlink=importPackageSymlink,exports.importPackageByFolderPath=importPackageByFolderPath;