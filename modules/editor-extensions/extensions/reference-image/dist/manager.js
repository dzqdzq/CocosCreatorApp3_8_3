"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.manager=exports.Manager=void 0;const package_json_1=__importDefault(require("../package.json")),utils_1=require("./utils");function getDefaultImageData(){return{path:"",x:0,y:0,sx:1,sy:1,opacity:50}}const DefaultConfig={images:[],sceneUUID:{},scene:""};class Manager{constructor(){this._config={images:[],sceneUUID:{},scene:""}}get config(){return this._config}getCurrent(){const{scene:t,sceneUUID:a,images:e}=this.config;let s;return t&&a[t]?s=e.find(e=>e.path===a[t].path):e.length&&(s=e[0]),null!==s&&void 0!==s?s:getDefaultImageData()}async init(){this._config=await Editor.Profile.getConfig(package_json_1.default.name,"config")||DefaultConfig,this._config.scene=await Editor.Message.request("scene","query-current-scene")}openPanel(){Editor.Panel.open(package_json_1.default.name)}async setSceneUUID(e){this.config.scene=e,await this.refresh();e=await Editor.Profile.getConfig(package_json_1.default.name,"show");Editor.Message.broadcast(package_json_1.default.name+":show",e)}async refresh(){await Editor.Profile.setConfig(package_json_1.default.name,"config",this.config);var e=this.getCurrent();0!==this.config.images.length&&e.path?(await(0,utils_1.sendToSceneSwitchImage)(e),await(0,utils_1.sendToSceneSyncImageData)(e)):await(0,utils_1.sendToSceneResetImage)(),this.notifyRefresh()}async addImage(e){let t="";var a,s=[];for(const i of e)this.config.images.every(e=>e.path!==i)?((a=getDefaultImageData()).path=i,this.config.images.push(a),t=t||i):s.push(i);var{scene:e,sceneUUID:n}=this.config;n[e]={path:t||s[s.length-1]||""},await this.refresh()}async removeImage(a){var e,t,s,n=this.config.images.findIndex(e=>e.path===a);-1!==n&&(this.config.images.splice(n,1),Object.entries(this.config.sceneUUID).forEach(([e,t])=>{t.path===a&&(this.config.sceneUUID[e].path="")}),e=this.config.images.length,{scene:t,sceneUUID:s}=this.config,s[t]={path:(null==(t=this.config.images[s=e<=(s=n+1)?e-1:s])?void 0:t.path)||""},await this.refresh())}async switchImage(e,t){var a=this.config["sceneUUID"],t=t||this.config.scene;a[t]?a[t].path=e:a[t]={path:e},await this.refresh()}async setImageData(e,t){var a=this.getCurrent();e in a&&(a[e]=t,await(0,utils_1.sendToSceneSyncImageData)(this.getCurrent()),await Editor.Profile.setConfig(package_json_1.default.name,e,t),this.notifyRefresh())}notifyRefresh(){Editor.Message.send(package_json_1.default.name,"notify-refresh",this.config,this.getCurrent())}}exports.Manager=Manager,exports.manager=new Manager;