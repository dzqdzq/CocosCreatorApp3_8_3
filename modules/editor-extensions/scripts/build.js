"use strict";const rollup=require("rollup")["rollup"],{join,dirname}=require("path"),{readFileSync,existsSync,writeFileSync}=require("fs"),getTaskConfig=require("./rollup-utils/index")["getTaskConfig"],configFile=join(__dirname,"../config.json"),winCmd=(existsSync(configFile)||(console.error("没有找到 config.json，无法正常构建"),process.exit(-1)),{git:"git",npm:"npm.cmd",tsc:"tsc.cmd",lessc:"lessc.cmd"}),macCmd={git:"git",npm:"npm",tsc:"tsc",lessc:"lessc"},cmd="win32"===process.platform?winCmd:macCmd;try{const a=readFileSync(configFile),b=JSON.parse(a);let e="";e=(e+=`/// <reference path="${join(b.enginePath,"./bin/.declarations/cc.d.ts")}"/>
`)+`/// <reference path="${join(b.enginePath,"/bin/.declarations/cc.editor.d.ts")}"/>
`,writeFileSync(join(__dirname,"../@types/cc.d.ts"),e)}catch(e){console.error("config.json 格式错误"),console.error(e),process.exit(-1)}process.argv.some(e=>e.startsWith("--only-dts"))&&process.exit(0);const builder=require("@editor/build");builder.scan(join(__dirname,"../extensions")),builder.config({entry:".workflow.build.js",config:join(__dirname,".build-cache.json")}),builder.register("rollup",{title:"编译 Typescript(Rollup)",timeLength:8,stateLength:7,parallel:5,async execute(e){if("string"==typeof e){var r=e,t={state:"null",info:dirname(r)},i=(e=[],require(r));if(i.rollup)if(t.state="success",e=i.rollup())try{var s=dirname(r);for(const u of e){join(dirname(r),u.sourceDir);var{outputOptions:o,inputOptions:n}=getTaskConfig(u,s);try{await(await rollup(n)).write(o)}catch(e){console.error(e),t.state="error"}}}catch(e){console.error(e),t.state="error"}else t.state="null";else t.state="null";return t}let c="success";try{for(const p of e){join(this.path,p.sourceDir);var{outputOptions:l,inputOptions:a}=getTaskConfig(p,this.path);try{await(await rollup(a)).write(l)}catch(e){console.error(e),c="error"}}}catch(e){console.error(e),c="error"}return c}}),builder.executeTask(["npm","tsc","rollup","lessc","file","compress"]);