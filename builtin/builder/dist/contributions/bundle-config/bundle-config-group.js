"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&("get"in i?t.__esModule:!i.writable&&!i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,i)}:function(e,t,r,o){e[o=void 0===o?r:o]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.beforeDestroy=exports.created=exports.methods=exports.computed=exports.data=exports.components=exports.props=exports.template=void 0;const fs_1=require("fs"),path_1=require("path"),bundle_utils_1=require("../../share/bundle-utils"),ConfigItem=__importStar(require("./bundle-config-item")),PlatformGroup=__importStar(require("./platform-config-group")),DefaultBundleConfigItem={isRemote:!1,compressionType:"merge_dep"},data=(exports.template=(0,fs_1.readFileSync)((0,path_1.join)(__dirname,"../../../static/contributions/bundle-config-group.html"),"utf8"),exports.props=["renderConfig","customConfig","readonly"],exports.components={"config-item":ConfigItem,"platform-group":PlatformGroup},function(){return{platformTypes:bundle_utils_1.BundlePlatformTypes,currentPlatform:Object.keys(bundle_utils_1.BundlePlatformTypes)[0],compressRenderList:Object.freeze(bundle_utils_1.BundlecompressionTypeMap),selectPlatform:[],updateSettings:-1,platformRenderMap:{},restPlatformList:[]}});function created(){var e=this.clearSelect.bind(this);this.clearSelectBind=e,document.addEventListener("click",this.clearSelectBind)}function beforeDestroy(){document.removeEventListener("click",this.clearSelectBind)}exports.data=data,exports.computed={resetUniDisabledState(){var e=this;if(e.readonly)return!0;var t=e.customConfig[e.currentPlatform].overwriteSettings||{};let r=e.customConfig[e.currentPlatform].fallbackOptions;return!r&&0===Object.keys(t).length||(r=Object.assign(Object.assign({},DefaultBundleConfigItem),r||{}),Object.keys(t).length?Object.values(t).every(e=>e.isRemote===r.isRemote&&e.compressionType===r.compressionType):DefaultBundleConfigItem.isRemote===r.isRemote&&DefaultBundleConfigItem.compressionType===r.compressionType)},resetDisabledState(){var e=this;return!!e.readonly||(e=e.customConfig[e.currentPlatform].overwriteSettings||{},0===Object.keys(e).length)||Object.values(e).every(e=>!(void 0!==e.isRemote&&e.isRemote!==DefaultBundleConfigItem.isRemote||e.compressionType&&e.compressionType!==DefaultBundleConfigItem.compressionType))},resetAllDisabledState(){var e=this;return!!e.readonly||!(e=e.customConfig[e.currentPlatform].fallbackOptions)||0===Object.keys(e).length||(e=Object.assign(Object.assign({},DefaultBundleConfigItem),e||{})).isRemote===DefaultBundleConfigItem.isRemote&&e.compressionType===DefaultBundleConfigItem.compressionType}},exports.methods={getRenderList(e,t){var r=this;return r.renderConfig[r.currentPlatform].platformConfigs[e]?[{label:r.renderConfig[r.currentPlatform].platformConfigs[e].platformName,value:e},...t]:t},changePlatform(e){this.currentPlatform=e,this.selectPlatform=[],this.$emit("changeplatform",e)},getRestPlatformList(){const t=this;if(!t.customConfig[t.currentPlatform])return[];const r=t.customConfig[t.currentPlatform].overwriteSettings;let e=[];return(e=r&&Object.keys(r).length?Object.keys(t.renderConfig[t.currentPlatform].platformConfigs).filter(e=>!r[e]):Object.keys(t.renderConfig[t.currentPlatform].platformConfigs)).map(e=>({label:t.renderConfig[t.currentPlatform].platformConfigs[e].platformName,value:e}))},onOverwriteSettingsReset(e){const t=this.customConfig[this.currentPlatform].fallbackOptions;if(!t||e)this.customConfig[this.currentPlatform].overwriteSettings={};else{const r=this.customConfig[this.currentPlatform].overwriteSettings||{};Object.keys(this.renderConfig[this.currentPlatform].platformConfigs).forEach(e=>{r[e]=JSON.parse(JSON.stringify(t))}),this.$set(this.customConfig[this.currentPlatform],"overwriteSettings",Object.assign({},r))}this.onConfigChange()},onFallbackOptionsReset(){this.$set(this.customConfig[this.currentPlatform],"fallbackOptions",{}),this.onConfigChange()},onChangeConfigMode(e,t){this.$set(this.customConfig[this.currentPlatform],"configMode",e&&"fallback"===t||!e&&"overwrite"===t?"fallback":"overwrite"),this.onConfigChange()},onBundleConfigChange(e,t,r){var o=this.customConfig[this.currentPlatform][r]||{};o[e]=t,this.$set(this.customConfig[this.currentPlatform],r,Object.assign({},o)),this.onConfigChange()},onPlatformSettingsChange(e,t){var r=this.customConfig[this.currentPlatform].overwriteSettings||{};r[e]=t,this.$set(this.customConfig[this.currentPlatform],"overwriteSettings",Object.assign({},r)),this.onConfigChange()},deletePlatformOverwrite(){const t=this.customConfig[this.currentPlatform].overwriteSettings;var e;t&&(this.selectPlatform.length?this.selectPlatform.forEach(e=>{delete t[e]}):(e=Object.keys(t)[Object.keys(t).length-1],delete t[e]),this.$set(this.customConfig[this.currentPlatform],"overwriteSettings",Object.assign({},t)),this.updatePlatformRenderMap(),this.onConfigChange())},addPlatformOverwriteMenu(e){const t=this.customConfig[this.currentPlatform].overwriteSettings||{};var r=Object.keys(this.renderConfig[this.currentPlatform].platformConfigs).map(e=>{return{label:this.renderConfig[this.currentPlatform].platformConfigs[e].platformName,enabled:!t[e],click:()=>{this.addPlatformOverwrite(e)}}});Editor.Menu.popup({x:e.x,y:e.y,menu:r})},addPlatformOverwrite(e){var t=this.customConfig[this.currentPlatform].overwriteSettings||{};t[e]=JSON.parse(JSON.stringify(DefaultBundleConfigItem)),this.$set(this.customConfig[this.currentPlatform],"overwriteSettings",Object.assign({},t)),this.updatePlatformRenderMap(),this.onConfigChange()},changeOverWritePlatform(e,t){var r=this.customConfig[this.currentPlatform].overwriteSettings||{},o=r[t],i=this.renderConfig[this.currentPlatform].platformConfigs[e].supportOptions;i.compressionType.includes(o.compressionType)||(o.compressionType=i.compressionType[0]),r[e]=o,delete r[t],this.updatePlatformRenderMap(),this.onConfigChange()},isRemoteLocked(e){return(0,bundle_utils_1.checkRemoteDisabled)(e)},updatePlatformRenderMap(){var e=this.customConfig[this.currentPlatform].overwriteSettings;if(e&&Object.keys(e).length){const t=this.getRestPlatformList();Object.keys(e).forEach(e=>{this.$set(this.platformRenderMap,e,this.getRenderList(e,t))})}else this.platformRenderMap={}},onConfigChange(){this.updateSettings=-this.updateSettings,this.$emit("update",this.customConfig)},clearSelect(){this.selectPlatform=[]}},exports.created=created,exports.beforeDestroy=beforeDestroy;