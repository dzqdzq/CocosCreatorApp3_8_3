"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.close=exports.beforeClose=exports.ready=exports.methods=exports.$=exports.template=exports.style=void 0;const electron_1=require("electron"),fs_extra_1=require("fs-extra"),path_1=require("path"),Vue=require("vue/dist/vue.js"),utils_1=(Vue.config.productionTip=!1,Vue.config.devtools=!1,require("../../share/utils"));let panel=null,vm=null;const vueTemplate=(0,fs_extra_1.readFileSync)((0,path_1.join)(__dirname,"../../../static/template/build-bundle.html"),"utf8"),BuilderBundleVM=Vue.extend({name:"BuilderBundleVM",data(){return{taskInfo:{buildTaskIds:[],dest:"project://build/build-bundle",progress:0,message:"waiting",id:"buildBundle",state:"none"},taskMap:[],buildTaskFree:!0,currentBundle:null,logFile:"",openType:"openFile",bundles:[],isBuildWorkerReady:!1}},computed:{bundleBuildPlatformTips(){return this.currentBundle?Editor.I18n.t("builder.asset_bundle.bundleBuildPlatformTips",{bundleUrl:(0,path_1.basename)(this.currentBundle.root)}):""},maskInfo(){return this.isBuildWorkerReady?this.bundles.length?"":"i18n:builder.asset_bundle.emptyBundle":"i18n:builder.tips.waiting_for_worker_ready"}},async mounted(){this.isBuildWorkerReady=await Editor.Message.request("builder","query-worker-ready"),this.init()},methods:{async init(){await this.refreshTaskList(),await this.initBundleInfo(),this.openType=await Editor.Profile.getConfig("builder","log.openType")},async refreshTaskList(){var{free:e,list:t}=await Editor.Message.request("builder","query-tasks-info",{type:"build"});this.taskMap=t,this.buildTaskFree=e,this.taskMap.length&&(this.taskInfo.buildTaskIds=[this.taskMap[0].id])},async initBundleInfo(){var e=await Editor.Message.request("asset-db","query-assets",{isBundle:!0},["meta"]);e.length&&(this.bundles=e.map(e=>({root:e.url,name:e.meta.userData.bundleName||(0,path_1.basename)(e.url),output:!0})),this.updateCurrentBundle(this.currentBundle||this.bundles[0]))},onSelectBundle(e){const t=e.target["value"];this.updateCurrentBundle(this.bundles.find(e=>e.root===t))},updateCurrentBundle(e){if(e){const t=e.root;this.bundles.find(e=>e.root===t)||(e=this.bundles[0])}else e=this.bundles[0];this.currentBundle=e,this.findLastedLog()},async findLastedLog(){var e;(0,fs_extra_1.existsSync)(LogDestDir)&&(e=(await(0,fs_extra_1.readdir)(LogDestDir)).filter(e=>e.startsWith("build-bundle-"))).length&&(e.sort((e,t)=>(0,utils_1.transTimeToNumber)(t)-(0,utils_1.transTimeToNumber)(e)),this.logFile=(0,path_1.join)(LogDestDir,e[0]))},onToggleTask(e,t){e?this.taskInfo.buildTaskIds=[...this.taskInfo.buildTaskIds,t]:this.taskInfo.buildTaskIds.splice(this.taskInfo.buildTaskIds.findIndex(e=>e===t),1)},updateTasks(e){this.taskInfo.progress=e.progress,this.taskInfo.state=e.state,this.taskInfo.message=e.message},async openLog(){var e=Editor.UI.__protected__.File.resolveToRaw(this.logFile);"openFileDir"===this.openType?electron_1.shell.showItemInFolder(e):await Editor.Message.request("program","open-program","scriptEditor",{_args:[e]})||electron_1.shell.openPath(e)},async openBuildPanel(e,t){Editor.Message.send("builder","open","",e,t)},generateBundleBuildOptions(){return{buildTaskIds:this.taskInfo.buildTaskIds,dest:this.taskInfo.dest,id:this.taskInfo.id,bundleConfigs:[this.currentBundle],taskName:"build bundle "+this.currentBundle.root}},async onBuild(){var e;this.currentBundle&&(e=(0,utils_1.getTaskLogDest)("build-bundle-",Date.now()),this.logFile=e,1!==(e=await Editor.Message.request("builder","add-bundle-task",Object.assign(Object.assign({},this.generateBundleBuildOptions()),{logDest:e}))))&&(0===e?this.taskInfo.message="i18n:builder.asset_bundle.buildBundleBusy":2===e&&(this.taskInfo.message="i18n:builder.asset_bundle.buildBundleParams"),this.taskInfo.state="failed")},async onButtonClick(){"processing"!==this.taskInfo.state&&"waiting"!==this.taskInfo.state||await Editor.Message.request("builder","break-task",this.taskInfo.id),this.taskInfo.state="none"}},template:vueTemplate}),LogDestDir=(0,path_1.join)(Editor.Project.tmpDir,"builder","log");function ready(e){panel=this,e&&(e.output=!0),null!==vm&&void 0!==vm&&vm.$destroy(),(vm=new BuilderBundleVM).currentBundle=e,vm.$mount(panel.$.container)}async function updateVmAssetInfo(e,t){vm&&"directory"===t.importer&&await vm.initBundleInfo()}async function beforeClose(){return!vm||!vm.taskInfo||"processing"!==vm.taskInfo.state||1===(await Editor.Dialog.info(Editor.I18n.t("builder.asset_bundle.bundleBuildCloseTip"),{buttons:[Editor.I18n.t("builder.confirm"),Editor.I18n.t("builder.cancelBuild")],cancel:0,default:0})).response&&(Editor.Message.send("builder","break-task",vm.taskInfo.id),!0)}function close(){null!==vm&&void 0!==vm&&vm.$destroy(),vm=null,panel=null}exports.style=(0,fs_extra_1.readFileSync)((0,path_1.join)(__dirname,"../../../dist/build-bundle.css"),"utf8"),exports.template=`
<div class="container"></div>
`,exports.$={container:".container"},exports.methods={async"bundle-task:changed"(e,t,s){vm&&e&&e===vm.taskInfo.id&&await vm.updateTasks(t,s)},async"builder:task-add"(e,t){"build"===t.type&&vm&&await vm.refreshTaskList()},async"builder:task-delete"(e,t){vm&&await vm.refreshTaskList()},async"builder:task-changed"(e,t){vm&&await vm.refreshTaskList()},"asset-db:asset-delete":updateVmAssetInfo,"asset-db:asset-add":updateVmAssetInfo,"asset-db:asset-change":updateVmAssetInfo,async onBuildWorkerReady(){vm&&(vm.isBuildWorkerReady=!0,await vm.refresh())},onBuildWorkerClosed(){vm&&(vm.isBuildWorkerReady=!1,console.debug("onBuildWorkerClosed"))},changeBuildBundle(t){vm&&t&&vm.updateCurrentBundle(vm.bundles.find(e=>e.root===t.root))},async exportBundleBuildConfig(){var e;vm&&(e=await Editor.Dialog.save({path:(0,path_1.join)(Editor.Project.path,"build-config",`bundle-build-config-${(0,path_1.basename)(vm.currentBundle.root)}.json`)})).filePath&&(await(0,fs_extra_1.outputJSON)(e.filePath,vm.generateBundleBuildOptions(),{spaces:4}),console.log(`Build config has export in {link(${e.filePath})}`))}},exports.ready=ready,exports.beforeClose=beforeClose,exports.close=close;