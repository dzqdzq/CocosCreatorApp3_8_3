"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&("get"in i?t.__esModule:!i.writable&&!i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,i)}:function(e,t,n,o){e[o=void 0===o?n:o]=t[n]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&__createBinding(t,e,n);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.beforeDestroy=exports.mounted=exports.methods=exports.computed=exports.watch=exports.data=exports.components=exports.props=exports.template=void 0;const electron_1=require("electron"),fs_extra_1=require("fs-extra"),path_1=require("path"),platformConfig=__importStar(require("../../../share/platforms-options")),commonOptions=__importStar(require("../../../share/common-options-validator")),bundle_utils_1=require("../../../share/bundle-utils"),plugin_1=require("../../plugin"),buildProp=__importStar(require("../build-prop/index")),buildPlugin=__importStar(require("./build-plugin")),common_options_validator_1=require("../../../share/common-options-validator"),utils_1=require("../../../share/utils"),platforms_options_1=require("../../../share/platforms-options"),lodash=require("lodash"),MessageTypeMap={warn:"warn",error:"danger",log:""};function data(){return{viewTask:!1,platformOrder:platformConfig.PLATFORMS,sceneSearchName:"",dev:!1,compInfos:[],currentCompPlatform:"",builtinPlugins:platformConfig.builtinPlugins,disabledPkg:["android","huawei-agc","ios","windows","mac","native","ohos"],optionsReady:!1,commonOptionsKeys:["md5Cache","debug","sourceMaps","buildScriptTargets","experimentalEraseModules","polyfills","skipCompressTexture"],mainBundleIsRemoteWarnTip:"",bundleSearchName:"",internalBundleList:{[bundle_utils_1.BuiltinBundleName.MAIN]:{name:bundle_utils_1.BuiltinBundleName.MAIN,root:"",output:!0},[bundle_utils_1.BuiltinBundleName.INTERNAL]:{name:bundle_utils_1.BuiltinBundleName.INTERNAL,root:"",output:!0},[bundle_utils_1.BuiltinBundleName.START_SCENE]:{name:bundle_utils_1.BuiltinBundleName.START_SCENE,root:"",output:!0}},physicsConfig:{"physics-2d":{hidden:!0,config:{}},physics:{hidden:!0,config:{}}},webGL2DisplayDump:null,nativePlatforms:platforms_options_1.NATIVE_PLATFORM,enableNativeCodeModules:[],nativeCodeModules:[]}}async function mounted(){console.time("Settings mounted");var e=this,t=(await e.updateOptionScenes(),e.options),n=(t.mainBundleCompressionType===bundle_utils_1.BundleCompressionTypes.SUBPACKAGE?t.mainBundleIsRemote=!1:t.mainBundleCompressionType===bundle_utils_1.BundleCompressionTypes.ZIP&&(t.mainBundleIsRemote=!0),e.$refs["build-path"]&&(e.$refs["build-path"].value=t.buildPath),e.mainBundleIsRemoteWarnTip=checkMainBundleIsRemote(t),await plugin_1.pluginManager.checkCommonOptionByKey("name",t.name,e.options));if(e.errorMap.name="error"===n.level?n.error:"",e.compInfos=plugin_1.pluginManager.getPlatformCompInfos(t.platform),e.currentCompPlatform=t.platform,e.updateInternalBundleList(),t.packages){var o={};for(const i of e.compInfos)o[i.pkgName]={};e.errorMap.packages=o}e.dev=Editor.App.dev,await e.refreshEngineConfig(),e.optionsReady=!0,Editor.Message.__protected__.addBroadcastListener("engine:engine-modules-config-changed",e.refreshEngineConfig),console.timeEnd("Settings mounted")}function beforeDestroy(){Editor.Message.__protected__.removeBroadcastListener("engine:engine-modules-config-changed",this.refreshEngineConfig)}function patchDisabledToConfig(e,t,n){var o;return e?((e=JSON.parse(JSON.stringify(e)))[t]||(e[t]={render:{ui:"ui-checkbox",attributes:{disabled:n}}}),e[t].hidden||((o=e[t].render||{ui:""}).attributes||(o.attributes={}),n?(o.attributes.disabled=!0,delete e[t].verifyRules):o.attributes.disabled=!1)):console.debug(e,t,n),e}function sortScenesWithIBundle(e){return e.sort((e,t)=>(e.bundle?0:-1)-(t.bundle?0:-1))}function checkMainBundleIsRemote(e){return!e.mainBundleIsRemote||e.useBuiltinServer||e.server?"":Editor.I18n.t("builder.options.mainBundleRemoteTips")}exports.template=(0,fs_extra_1.readFileSync)((0,path_1.join)(__dirname,"../../../../static","/template/components/settings/index.html"),"utf8"),exports.props=["type","options","free","task","scenes","bundles","errorMap","platforms"],exports.components={"build-prop":buildProp,"build-plugin":buildPlugin},exports.data=data,exports.watch={"options.startScene"(n){var o=this;if(o.options){let e=!1,t=(o.options.scenes&&(e=o.options.scenes.some(e=>e.uuid===n)),null);for(let e=0;e<o.scenes.length;e++)o.scenes[e].uuid===n&&(t=o.scenes[e]);!e&&t&&o.options.scenes.push(t)}},scenes(){this.updateOptionScenes()},"options.buildPath":{async handler(e){var t,n=this;n.$refs["build-path"]&&(n.$refs["build-path"].invalid?n.onCommonDataChange("buildPath","","buildPath is invalid!"):(t=await plugin_1.pluginManager.checkCommonOptionByKey("buildPath",e,n.options),n.$refs["build-path"].value=e,n.onCommonDataChange("buildPath",e,t.error)))}},"options.platform":{async handler(e){var t=this;t.optionsReady=!1,await t.changePlatform(e),t.optionsReady=!0}},"options.startSceneAssetBundle":{handler(){this.updateInternalBundleList()}}},exports.computed={overwriteProjectSettings(){return this.options.overwriteProjectSettings},showNativeBundleMode(){var e=this;return!e.nativePlatforms.includes(e.options.platform)&&!!e.enableNativeCodeModules.length},buildBtnState(){var e=this.errorMap;for(const t of Object.keys(e))if(e[t])return!1;return!0},sceneList(){const n=this,o=[],i=[],s=n.sceneSearchName&&new RegExp(""+n.sceneSearchName,"i");return n.scenes.forEach((t,e)=>{if(i.push(t.uuid),s&&!s.test(t.url))return o.push(Object.assign({hide:!0},t));if(n.options.bundleConfigs&&n.options.bundleConfigs.length&&t.bundle&&!n.options.bundleConfigs.find(e=>e.root===t.bundle))return;o.push(t)}),n.options.scenes&&n.options.scenes.forEach((e,t)=>{i.includes(e.uuid)||(e=Object.assign({missing:!0},e),o.push(e))}),sortScenesWithIBundle(o)},bundleList(){const n=this,o=[],i=[],s=n.bundleSearchName&&new RegExp(""+n.bundleSearchName,"i");return Object.values(n.internalBundleList).concat(n.bundles).forEach((e,t)=>{if(e.name!==bundle_utils_1.BuiltinBundleName.START_SCENE||n.options.startSceneAssetBundle){if(i.push(e.root),s&&!s.test(e.root)&&!s.test(e.name))return o.push(Object.assign({hide:!0},e));o.push(Object.assign(Object.assign({},e),{output:!0}))}}),n.options.bundleConfigs&&n.options.bundleConfigs.length&&n.options.bundleConfigs.forEach((e,t)=>{i.includes(e.root)||e.name in n.internalBundleList||(e=Object.assign({missing:!0,output:!1},e),o.push(e))}),o},compressionTypes(){return plugin_1.pluginManager.bundleConfigs[this.options.platform]?plugin_1.pluginManager.bundleConfigs[this.options.platform].supportOptions.compressionType:[]},optionConfigs(){var e=this;let t=plugin_1.pluginManager.getCommonOptionConfigs(e.options.platform);return t=patchDisabledToConfig(t,"useBuiltinServer","project://build"!==e.options.buildPath),t=patchDisabledToConfig(t,"bundleCommonChunk","bundle"===e.options.buildMode),"project://build"!==e.options.buildPath&&(t.useBuiltinServer.description="i18n:builder.options.use_builtin_server_disabled"),(t=patchDisabledToConfig(t,"server",e.options.useBuiltinServer&&"project://build"===e.options.buildPath)).server.render.attributes.tooltip=e.options.server,"new"!==e.type&&["android"].includes(e.options.platform)?(t.name.render||(t.name.render={ui:""}),t.name.render.attributes||(t.name.render.attributes={}),t.name.render.attributes.disabled=!0):t.name.render&&null!=(e=t.name.render.attributes)&&delete e.disabled,t},wasmCompressionModeValue(){var e=this.options;return void 0!==e.wasmCompressionMode&&"asmjs"!==e.nativeCodeBundleMode&&!!e.wasmCompressionMode}},exports.methods={updateInternalBundleList(){const t=this;t.options.startSceneAssetBundle?(t.internalBundleList[bundle_utils_1.BuiltinBundleName.START_SCENE]={name:bundle_utils_1.BuiltinBundleName.START_SCENE,root:"",output:!0},t.options.bundleConfigs.length&&t.options.bundleConfigs.push(t.internalBundleList[bundle_utils_1.BuiltinBundleName.START_SCENE])):(delete t.internalBundleList[bundle_utils_1.BuiltinBundleName.START_SCENE],t.options.bundleConfigs.length&&(t.options.bundleConfigs=Object.values(t.options.bundleConfigs).filter(e=>e.name!==bundle_utils_1.BuiltinBundleName.START_SCENE||t.options.startSceneAssetBundle&&e.name===bundle_utils_1.BuiltinBundleName.START_SCENE)))},calcPropClass(e,t){e=null!=(e=this.optionConfigs[e].verifyLevel)?e:"error";return""+(t?MessageTypeMap[e]:"")},t(e,t=!0){e=e.replace("i18n:","");t=Editor.I18n.t((t?"builder.":"")+e);return t&&"string"==typeof t?t:e},_isRemoteLocked(){var e=this.options.mainBundleCompressionType;return e===bundle_utils_1.BundleCompressionTypes.ZIP||e===bundle_utils_1.BundleCompressionTypes.SUBPACKAGE},_checkSelectAllScenes(e,n){return!e||!n||e.every(t=>n.some(e=>e.uuid===t.uuid))},_checkSelectScene(t,e){return!(t&&e&&!t.bundle)||e.some(e=>e.uuid===t.uuid)},_onSelectSceneConfirm(e,n){const o=JSON.parse(JSON.stringify(this.options.scenes));o.some((e,t)=>e.uuid===n.uuid&&(o.splice(t,1),!0)),e.target.value&&o.push({url:n.url,uuid:n.uuid,bundle:n.bundle}),this.onSettingsChange("scenes",o)},async _onCompressionTypeConfirm(e){var t=this;await t.onSettingsChange("mainBundleCompressionType",e.target.value),t.options.mainBundleCompressionType===bundle_utils_1.BundleCompressionTypes.SUBPACKAGE?await t.onSettingsChange("mainBundleIsRemote",!1):t.options.mainBundleCompressionType===bundle_utils_1.BundleCompressionTypes.ZIP&&await t.onSettingsChange("mainBundleIsRemote",!0)},_onSelectAllScenesConfirm(e){var t=this;let n=[];if(e.target.value)n=t.scenes.map(e=>({url:e.url,uuid:e.uuid,bundle:e.bundle}));else for(let e=0;e<t.scenes.length;e++)t.scenes[e].uuid!==t.options.startScene&&!t.scenes[e].bundle||n.push(t.scenes[e]);t.onSettingsChange("scenes",n)},_onSelectAllBundlesConfirm(e){let t=JSON.parse(JSON.stringify(this.options.bundleConfigs||[])),n="";t=e.target.value?[]:"bundle"!==this.options.buildMode?Object.values(this.internalBundleList):(n="i18n:builder.error.bundleConfigs",[]),this.onCommonDataChange("bundleConfigs",t,n)},_onSelectBundleConfirm(e,n){let o=JSON.parse(JSON.stringify(this.options.bundleConfigs)),t=(e.target.value?o.some(e=>e.root&&e.root===n.root||e.name===n.name)||o.push(Object.assign(Object.assign({},n),{output:!0})):(o=o&&o.length?o:this.bundleList).some((e,t)=>(e.root===n.root||e.name===n.name)&&(o.splice(t,1),!0)),"");o.length||(t="i18n:builder.error.bundleConfigs"),this.onCommonDataChange("bundleConfigs",o,t)},_checkSelectBundle(t){var e=this.options.bundleConfigs;return!(t&&e&&(e.length||this.errorMap.bundleConfigs)&&("bundle"===this.options.buildMode||!this.internalBundleList[t.name]))||e.some(e=>(e.root&&e.root===t.root||e.name===t.name)&&e.output)},_checkSelectAllBundles(e){const n=this.options.bundleConfigs;return!e||!n||!n.length&&!this.errorMap.bundleConfigs||e.length===n.length&&((e=e.every(t=>n.some(e=>(e.root&&e.root===t.root||e.name===t.name)&&e.output)))&&(this.options.bundleConfigs.length=0,this.onCommonDataChange("bundleConfigs",n,"")),e)},async onBuildPathConfirm(e){this.$set(this.options,"buildPath",e.target.value)},async onConfirm(t){var n=t.target.getAttribute("path");if(n){let e=t.target.value;void 0!==t.target.value&&null!==t.target.value||(e=t.target.getAttribute("value")),await this.onSettingsChange(n,e)}},async onSettingsChange(e,t){var n;"platform"===e?await this.changePlatform(t):(n=await plugin_1.pluginManager.checkCommonOptionByKey(e,t,this.options),this.onCommonDataChange(e,t,"error"===n.level?n.error:""))},async changePlatform(e){var t,n,o=this;e&&e!==o.currentCompPlatform&&(t=await plugin_1.pluginManager.checkCommonOptionByKey("platform",e,o.options),o.compInfos=[],"new"===o.type&&(n=await plugin_1.pluginManager.getOptionsByPlatform(e),o.$root.task.options=n),o.mainBundleIsRemoteWarnTip=checkMainBundleIsRemote(o.options),n=await plugin_1.pluginManager.checkCommonOptionByKey("buildPath",o.options.buildPath,o.options),await o.onCommonDataChange("buildPath",o.options.buildPath,"error"===n.level?n.error:""),await o.onCommonDataChange("outputName",await(0,common_options_validator_1.calcValidOutputName)(o.options.buildPath,e,o.options.platform,o.task.id)),e&&plugin_1.pluginManager.bundleConfigs[e]&&(n=plugin_1.pluginManager.bundleConfigs[e].supportOptions.compressionType,n=await(0,plugin_1.checkBundleCompressionSetting)(o.options.mainBundleCompressionType,n),await o.onSettingsChange("mainBundleCompressionType",n.newValue)),o.$root.updateErrorMap("packages",{}),o.compInfos=plugin_1.pluginManager.getPlatformCompInfos(e),o.currentCompPlatform=e,o.onCommonDataChange("platform",e,"error"===t.level?t.error:""))},async revealInExplorer(){var e=(0,path_1.join)(Editor.UI.__protected__.File.resolveToRaw(this.options.buildPath),this.options.outputName);electron_1.shell.showItemInFolder(e)},onSetSplashSetting(){Editor.Message.send("project","open-settings","builder","splash-setting")},getType(e){return"new"===this.type?"new":platforms_options_1.NATIVE_PLATFORM.includes(e)?"check":this.type},async initPlatformOptions(e){e=await plugin_1.pluginManager.getOptionsByPlatform(e);lodash.defaultsDeep(this.options,e)},onPluginUpdate(e,t,n,o){var i=this;i.optionsReady?(void 0!==o&&i.$root.updateErrorMap(t,o&&JSON.parse(JSON.stringify(o))||null),"importConfig"===e?(i.mainBundleIsRemoteWarnTip=checkMainBundleIsRemote(i.options),i.emitPluginUpdate(e,t,n,o)):lodash.isEqual(lodash.get(i.options,t),n)||(lodash.set(i.options,t,n&&JSON.parse(JSON.stringify(n))),Editor.Profile.setConfig(e,"builder.options."+i.options.platform,lodash.get(i.options,"packages."+e),"local"),i.emitPluginUpdate(e,t,n,o))):console.debug("change before ready",e,t,n,o)},async onCommonDataChange(e,t,n){var o=this;o.errorMap[e]=n,e.includes(".")?lodash.set(o.options,e,t):o.$set(o.options,e,t),Editor.Profile.setConfig("builder","common."+e,t,"local"),Editor.Profile.setConfig(o.options.platform,"builder.common."+e,t,"local"),["mainBundleIsRemote","useBuiltinServer","server"].includes(e)&&(o.mainBundleIsRemoteWarnTip=checkMainBundleIsRemote(o.options)),o.$root.updateErrorMap(e,n),o.emitPluginUpdate("common",e,t,n),"useBuiltinServer"===e&&!0===t?(0,utils_1.Metric)("B100020"):"skipCompressTexture"===e&&!0===t&&(0,utils_1.Metric)("B100025")},emitPluginUpdate(t,n,o,e){var i=this;i.$root.updateTaskOptions(Object.assign(Object.assign({},i.task),{options:i.options})),i.$refs.plugins&&i.$refs.plugins.forEach(e=>{e.update(t,n,o)})},async updateOptionScenes(){const n=this;var e=n.options,e=(e.scenes?e.scenes.forEach(t=>{var e=n.scenes.find(e=>e.uuid===t.uuid);e?(t.url=e.url,t.bundle=e.bundle):t.missing=!0}):e.scenes=n.scenes,await commonOptions.checkBuildCommonOptionsByKey("startScene",e.startScene,n.options));n.errorMap.startScene=e&&e.error,n.$root.updateErrorMap("startScene",e&&e.error)},async refreshEngineConfig(){var{moduleTreeDump:e,nativeCodeModules:t}=await Editor.Message.request("engine","query-modules-config");if(e){this.nativeCodeModules=t,this.$set(this,"webGL2DisplayDump",e.categories.graphics.modules["gfx-webgl2"]);const n=await Editor.Profile.getProject("engine","modules.includeModules");this.$set(this.physicsConfig,"physics",{enable:!!n.find(common_options_validator_1.overwriteModuleConfig.physics.match),config:e.categories["3d"].modules.physics}),this.$set(this.physicsConfig,"physics-2d",{enable:!!n.find(common_options_validator_1.overwriteModuleConfig["physics-2d"].match),config:e.categories["2d"].modules["physics-2d"]}),this.nativeCodeModules.length&&(this.enableNativeCodeModules=this.nativeCodeModules.filter(e=>n.includes(e)))}},onMacrosConfirm(e){var t=e.target.getAttribute("path");t&&(e=e.target.value,this.onCommonDataChange("overwriteProjectSettings.macroConfig."+t,e))},onModulesConfirm(e){var t=e.target.getAttribute("path");t&&(e=e.target.value,this.onCommonDataChange("overwriteProjectSettings.includeModules."+t,e))},onSetPhysicsModules(){Editor.Message.send("project","open-settings","engine","modules")}},exports.mounted=mounted,exports.beforeDestroy=beforeDestroy;