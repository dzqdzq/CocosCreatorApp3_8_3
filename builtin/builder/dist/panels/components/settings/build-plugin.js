"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&("get"in a?t.__esModule:!a.writable&&!a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,a)}:function(e,t,r,n){e[n=void 0===n?r:n]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.mounted=exports.methods=exports.computed=exports.data=exports.components=exports.props=exports.template=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path"),platformConfig=__importStar(require("../../../share/platforms-options")),buttonsComponent=__importStar(require("../buttons")),buildProp=__importStar(require("../build-prop/index")),Vue=require("vue/dist/vue.js");function data(){return{builtinPlugins:platformConfig.builtinPlugins,disabledPkg:["android","huawei-agc","ios","windows","mac","native","ohos"]}}function mounted(){var e=this;e.updatePluginRender(e.options.platform),e.dev=Editor.App.dev}Vue.config.productionTip=!1,Vue.config.devtools=!1,exports.template=(0,fs_extra_1.readFileSync)((0,path_1.join)(__dirname,"../../../../static","/template/components/settings/build-plugin.html"),"utf8"),exports.props=["config","options","free","errorMap","name","type"],exports.components={"build-prop":buildProp,buttons:buttonsComponent},exports.data=data,exports.computed={pkgOptions(){var e=this;return JSON.parse(JSON.stringify(e.options.packages&&e.options.packages[e.config.pkgName]||{}))}},exports.methods={t(e,t=!0){e=e.replace("i18n:","");t=Editor.I18n.t((t?"builder.":"")+e);return t&&"string"==typeof t?t:e},onConfirm(e,t){e=e.target.value;this.onDataUpdate(t,e)},onPanelUpdate(e,t,r){this.$emit("datachange",this.config.pkgName,e,t,r)},onDataUpdate(e,t,r){var n=this;n.$root.updateErrorMap(`packages.${n.config.pkgName}.`+e,r),n.$emit("datachange",n.config.pkgName,`packages.${n.config.pkgName}.`+e,t,r)},updatePluginRender(){const t=this,r=t.config;if(r.panelInfo){const n=document.createElement("ui-panel"),a={};Object.keys(r.panelInfo).forEach(e=>{a[e]=r.panelInfo[e]}),r.panelInfo.ready&&(a.ready=()=>(n.ready=!0,r.panelInfo.ready.call(n.panelObject,JSON.parse(JSON.stringify(t.options)),t.type,r.pkgName,JSON.parse(JSON.stringify(t.errorMap))))),a.style=(0,fs_extra_1.readFileSync)((0,path_1.join)(__dirname,"./../../../../dist/build-plugin.css"),"utf8")+(a.style||""),n.config=a,n.setAttribute("name",r.displayName),t.$uiPanel=n,Vue.nextTick(()=>{var e=Array.isArray(t.$refs[r.pkgName])?t.$refs[r.pkgName][0]:t.$refs[r.pkgName];e?(e.innerHTML="",e.appendChild(n)):console.warn("Can't get pluginContent from "+r.pkgName)})}},async update(e,t){var r=this;r.$uiPanel&&r.$uiPanel.ready&&r.$uiPanel.update(JSON.parse(JSON.stringify(r.options)),t)}},exports.mounted=mounted;