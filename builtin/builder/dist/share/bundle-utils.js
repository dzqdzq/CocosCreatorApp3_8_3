"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getInvalidRemote=exports.checkRemoteDisabled=exports.transformPlatformSettings=exports.DefaultBundleConfig=exports.genBundleRenderConfig=exports.BundlePlatformTypes=exports.BundlecompressionTypeMap=exports.getBundleDefaultName=exports.BuiltinBundleName=exports.BundleCompressionTypes=void 0;const path_1=require("path");var BundleCompressionTypes,BuiltinBundleName;function getBundleDefaultName(e){return(0,path_1.basename)(e.source).replace(/[^a-zA-Z0-9_-]/g,"_")}function genBundleRenderConfig(i,p){const r={};return Object.keys(p).forEach(e=>{const s=i[e];if(s.platformName=p[e],r[s.platformType]){r[s.platformType].platformConfigs[e]=s;var n=r[s.platformType].maxOptionList;n.compressionType=Array.from(new Set(n.compressionType.concat(s.supportOptions.compressionType)));const o=r[s.platformType].minOptionList||JSON.parse(JSON.stringify(r[s.platformType].maxOptionList)),t=[];n.compressionType.forEach(e=>{s.supportOptions.compressionType.includes(e)&&o.compressionType.includes(e)&&t.push(e)}),t.length!==n.compressionType.length&&(r[s.platformType].minOptionList={compressionType:t})}else r[s.platformType]={platformConfigs:{[e]:s},platformTypeInfo:exports.BundlePlatformTypes[s.platformType],maxOptionList:s.supportOptions}}),r}function transformPlatformSettings(n,o){const t={};return Object.keys(o).forEach(e=>{var s=getValidOption(e,n,o);s.isRemote=getInvalidRemote(s.compressionType,s.isRemote),s.compressionType=s.compressionType||BundleCompressionTypes.MERGE_DEP,t[e]=s}),t}function getValidOption(e,s,n){var o,t=s.configMode||("miniGame"===n[e].platformType?"fallback":"auto");return"fallback"===t&&s.fallbackOptions?Object.assign(Object.assign({},s.preferredOptions),{compressionType:s.fallbackOptions.compressionType,isRemote:null!=(o=s.fallbackOptions.isRemote)&&o}):s.overwriteSettings&&s.overwriteSettings[e]?s.overwriteSettings[e]:(o=n[e].supportOptions.compressionType,"overwrite"!==t||s.overwriteSettings&&s.overwriteSettings[e]?s.preferredOptions&&o.includes(s.preferredOptions.compressionType)?s.preferredOptions:s.fallbackOptions?Object.assign(Object.assign({},s.preferredOptions),{compressionType:s.fallbackOptions.compressionType}):Object.assign({},s.preferredOptions):{compressionType:BundleCompressionTypes.MERGE_DEP,isRemote:!1})}function checkRemoteDisabled(e){return e===BundleCompressionTypes.SUBPACKAGE||e===BundleCompressionTypes.ZIP}function getInvalidRemote(e,s){return e!==BundleCompressionTypes.SUBPACKAGE&&(e===BundleCompressionTypes.ZIP||null!=s&&s)}!function(e){e.NONE="none",e.MERGE_DEP="merge_dep",e.MERGE_ALL_JSON="merge_all_json",e.SUBPACKAGE="subpackage",e.ZIP="zip"}(BundleCompressionTypes=exports.BundleCompressionTypes||(exports.BundleCompressionTypes={})),function(e){e.RESOURCES="resources",e.MAIN="main",e.START_SCENE="start-scene",e.INTERNAL="internal"}(BuiltinBundleName=exports.BuiltinBundleName||(exports.BuiltinBundleName={})),exports.getBundleDefaultName=getBundleDefaultName,exports.BundlecompressionTypeMap={[BundleCompressionTypes.NONE]:"i18n:builder.asset_bundle.none",[BundleCompressionTypes.SUBPACKAGE]:"i18n:builder.asset_bundle.subpackage",[BundleCompressionTypes.MERGE_DEP]:"i18n:builder.asset_bundle.merge_dep",[BundleCompressionTypes.MERGE_ALL_JSON]:"i18n:builder.asset_bundle.merge_all_json",[BundleCompressionTypes.ZIP]:"i18n:builder.asset_bundle.zip"},exports.BundlePlatformTypes={native:{icon:"mobile",displayName:"i18n:builder.asset_bundle.native"},web:{icon:"html5",displayName:"i18n:builder.asset_bundle.web"},miniGame:{icon:"mini-game",displayName:"i18n:builder.asset_bundle.minigame"}},exports.genBundleRenderConfig=genBundleRenderConfig,exports.DefaultBundleConfig={displayName:"i18n:builder.asset_bundle.defaultConfig",configs:{native:{preferredOptions:{isRemote:!1,compressionType:"merge_dep"}},web:{preferredOptions:{isRemote:!1,compressionType:"merge_dep"},fallbackOptions:{compressionType:"merge_dep"}},miniGame:{fallbackOptions:{isRemote:!1,compressionType:"merge_dep"},configMode:"fallback"}}},exports.transformPlatformSettings=transformPlatformSettings,exports.checkRemoteDisabled=checkRemoteDisabled,exports.getInvalidRemote=getInvalidRemote;