"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getMemorySize=exports.formateBytes=exports.MemoryTrack=void 0;class MemoryTrack{constructor(e=1e3){this._startMemory=0,this._maxMemory=0,this._interval=0,this._intervalId=null,this._lastMemory=0,this._interval=e}start(){MemoryTrack.enabled&&(console.debug("memory track start, "+getMemorySize()),this._startMemory=this.currentMemory,this._intervalId=setInterval(()=>{var e=this.currentMemory,t=(this._maxMemory=Math.max(this._maxMemory,e),e-this._lastMemory);t<0||5242880<t&&(console.debug(`memory track increment > 1M, increment: ${formateBytes(t)}, current: ${formateBytes(e)}, last: `+formateBytes(this._lastMemory)),this._lastMemory=e)},this._interval))}stop(){MemoryTrack.enabled&&this._intervalId&&(console.debug("memory track stop, "+getMemorySize()),clearInterval(this._intervalId),this.printResult())}get memoryUsage(){return this._maxMemory-this._startMemory}get currentMemory(){return process.memoryUsage().heapUsed}printResult(){MemoryTrack.enabled&&console.log("memory track usage: "+formateBytes(this.memoryUsage))}}function formateBytes(e){var t=e/1024/1024;return t<1?(e/1024).toFixed(2)+"KB":t.toFixed(2)+"MB"}function getMemorySize(){var e=process.memoryUsage();return"Process: heapTotal "+formateBytes(e.heapTotal)+" heapUsed "+formateBytes(e.heapUsed)+" rss "+formateBytes(e.rss)}(exports.MemoryTrack=MemoryTrack).enabled=!!Editor.App.args.metric,exports.formateBytes=formateBytes,exports.getMemorySize=getMemorySize;