"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.handle=exports.title=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path"),script_1=require("../../asset-handler/script"),engine_1=require("../../asset-handler/script/engine"),utils_1=require("../../utils");async function handle(t,i,r){Editor.Metrics.trackTimeStart("builder:build-script-total");await script_1.ScriptBuilder.buildPolyfills(t.polyfills,i.paths.polyfillsJs)||delete i.paths.polyfillsJs,this.updateProcess("Generate systemJs..."),await script_1.ScriptBuilder.buildSystemJs({dest:i.paths.systemJs,sourceMaps:t.sourceMaps,debug:t.debug,platform:t.platform,hotModuleReload:t.buildScriptParam.hotModuleReload}),this.updateProcess(Editor.I18n.t("builder.tasks.build_project_script")+" start..."),Editor.Metrics.trackTimeStart("builder:build-project-script");var e=await this.bundleManager.buildScript(),e=(e&&(e.scriptPackages&&i.scriptPackages.push(...e.scriptPackages),e.importMappings)&&Object.assign(i.importMap.imports,e.importMappings),await Editor.Metrics.trackTimeEnd("builder:build-project-script"));this.updateProcess(Editor.I18n.t("builder.tasks.build_project_script")+` in (${e} ms) √`),t.buildEngineParam.skip||(t.buildEngineParam.platform!==t.buildScriptParam.platform&&"HTML5"!==t.buildScriptParam.platform&&(t.buildEngineParam.platform=t.buildScriptParam.platform),t.buildEngineParam.targets=t.buildScriptParam.targets,t.buildEngineParam.flags=t.buildScriptParam.flags,t.buildEngineParam.isNative=script_1.ScriptBuilder.projectOptions.ccEnvConstants.NATIVE,this.updateProcess(Editor.I18n.t("builder.tasks.build_engine")+" start..."),Editor.Metrics.trackTimeStart("builder:build-engine"),e=(await(0,engine_1.buildEngineX)(t.buildEngineParam))["metaFile"],i.paths.engineMeta=e,e=await(0,engine_1.queryEngineImportMap)(e,i.paths.engineDir,(0,path_1.dirname)(i.paths.importMap)),Object.assign(i.importMap.imports,e),e=await Editor.Metrics.trackTimeEnd("builder:build-engine"),this.updateProcess(Editor.I18n.t("builder.tasks.build_engine")+` in (${e} ms) √`)),this.updateProcess("Copy plugin script ...");for(const s of i.pluginScripts){var a=(0,utils_1.removeDbHeader)(s.url),a=(0,path_1.join)(i.paths.dir,"src",a);(0,fs_extra_1.ensureDirSync)((0,path_1.dirname)(a)),(0,fs_extra_1.copyFileSync)(s.file,a),i.paths.plugins[s.uuid]=a}this.updateProcess("Generate import-map..."),await script_1.ScriptBuilder.outputImportMap(i.importMap,{dest:i.paths.importMap,importMapFormat:t.buildScriptParam.importMapFormat,debug:t.debug})}exports.title="i18n:builder.tasks.build_script",exports.handle=handle;