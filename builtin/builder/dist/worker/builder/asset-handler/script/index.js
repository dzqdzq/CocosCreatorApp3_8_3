"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(t,e,r,s){void 0===s&&(s=r);var a=Object.getOwnPropertyDescriptor(e,r);a&&("get"in a?e.__esModule:!a.writable&&!a.configurable)||(a={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,s,a)}:function(t,e,r,s){t[s=void 0===s?r:s]=e[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),__importStar=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&__createBinding(e,t,r);return __setModuleDefault(e,t),e},__importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ScriptBuilder=void 0;const path_1=require("path"),build_time_constants_1=require("./build-time-constants"),build_polyfills_1=__importDefault(require("@editor/build-polyfills")),fs_extra_1=require("fs-extra"),module_system_1=require("@cocos/module-system"),sub_process_manager_1=require("../../../worker-pools/sub-process-manager"),asset_library_1=require("../../manager/asset-library"),babel=__importStar(require("@babel/core")),preset_env_1=__importDefault(require("@babel/preset-env"));class ScriptBuilder{constructor(){this.scriptPackages=[]}initTaskOptions(t){var e={};null!=(s=t.buildScriptParam.polyfills)&&s.asyncFunctions||(null!=(s=e.excludes)?s:e.excludes=[]).push("transform-regenerator"),t.buildScriptParam.targets&&(e.targets=t.buildScriptParam.targets);let r="facade";t.buildScriptParam.experimentalEraseModules&&(r="erase");var s=null!=(s=t.buildScriptParam.hotModuleReload)&&s;return{scriptOptions:{modulePreservation:r=s?"preserve":r,debug:t.debug,sourceMaps:t.sourceMaps,hotModuleReload:s,transform:e,moduleFormat:"system",commonDir:t.buildScriptParam.commonDir||"",bundleCommonChunk:null!=(s=t.buildScriptParam.bundleCommonChunk)&&s},importMapOptions:{format:t.buildScriptParam.importMapFormat,data:{imports:{}},output:""}}}async initProjectOptions(t){var{scriptOptions:e,importMapOptions:r}=this.initTaskOptions(t),e=(this._scriptOptions=e,this._importMapOptions=r,await(0,build_time_constants_1.getCCEnvConstants)({platform:t.buildScriptParam.platform,flags:t.buildScriptParam.flags})),r=await Editor.Message.request("programming","query-shared-settings"),t=await Editor.Message.request("asset-db","query-db-list"),t=await Promise.all(t.map(async t=>{return{dbID:t,target:(await Editor.Message.request("asset-db","query-db-info",t)).target}})),s=await Editor.Profile.getProject("engine","macroCustom");ScriptBuilder.projectOptions=Object.assign({customMacroList:s,dbInfos:t,ccEnvConstants:e},r)}async buildBundleScript(t){const e=[],r={};t.forEach(t=>{t.output&&(t.config.hasPreloadScript=!this._scriptOptions.hotModuleReload,e.push({id:t.name,scripts:t.scripts.map(t=>(r[t]=Build.Utils.compressUuid(t,!1),asset_library_1.buildAssetLibrary.getAssetInfo(t))).sort((t,e)=>t.name.localeCompare(e.name)),outFile:t.scriptDest}))});t=Editor.Message.request("programming","packer-driver/query-cc-editor-module-map"),t=Object.assign(Object.assign(Object.assign({},this._scriptOptions),ScriptBuilder.projectOptions),{bundles:e,uuidCompressMap:r,applicationJS:"",cceModuleMap:t}),await sub_process_manager_1.workerManager.registerTask({name:"build-script",path:(0,path_1.join)(__dirname,"./build-script")}),t=await sub_process_manager_1.workerManager.runTask("build-script","buildScriptCommand",[t]);return t&&(t.scriptPackages&&this.scriptPackages.push(...t.scriptPackages),t.importMappings)&&Object.assign(this._importMapOptions.data.imports,t.importMappings),sub_process_manager_1.workerManager.kill("build-script"),console.debug("Copy externalScripts success!"),t}static async buildPolyfills(t={},e){e={debug:!1,sourceMap:!1,file:e},t.asyncFunctions&&(e.asyncFunctions=!0),t.coreJs?e.coreJs={modules:["es"],blacklist:[],targets:t.targets}:e.coreJs={modules:["es.global-this"],blacklist:[],targets:t.targets},t=await(0,build_polyfills_1.default)(e);return!(!t||!await(0,fs_extra_1.pathExists)(e.file))}static async buildSystemJs(t){await(0,module_system_1.build)({out:t.dest,sourceMap:t.sourceMaps,minify:!t.debug,platform:t.platform,hmr:t.hotModuleReload})}static async outputImportMap(t,e){t=(await transformImportMap(t,e)).content;await(0,fs_extra_1.ensureDir)((0,path_1.dirname)(e.dest)),await(0,fs_extra_1.writeFile)(e.dest,t,{encoding:"utf8"})}}async function transformImportMap(t,e){var r=e["importMapFormat"];let s,a=JSON.stringify(t,void 0,e.debug?2:0);return void 0===r?s=".json":(s=".js",t="export default "+a,a=null==(e=await babel.transformAsync(t,{presets:[[preset_env_1.default,{modules:"esm"!==r&&r}]]}))?void 0:e.code),{extension:s,content:a}}exports.ScriptBuilder=ScriptBuilder;