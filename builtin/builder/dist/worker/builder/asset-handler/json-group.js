"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.hasGroups=exports.walk=exports.splitGroups=void 0;const asset_library_1=require("../manager/asset-library"),_=require("lodash");function splitGroups(r,e=!1){if(r.length<2)return r;var t=[r[0]];e:for(let e=1;e<r.length;e++){let s=r[e];var i=t.length;for(let r=0;r<i;r++){let e=t[r];var n=_.intersection(e,s),u=e.length,a=s.length,l=n.length;if(0!==l)if(l===u){if(u===a)continue e;s=_.difference(s,n)}else{if(l===a){u!==a&&(e=_.difference(e,n),t[r]=e,t.push(n));continue e}s=_.difference(s,n),e=_.difference(e,n),t[r]=e,t.push(n)}}t.push(s)}if(e){var e=_.flatten(t),s=_.uniq(e);if(s.length<e.length)return console.warn("Internal error: SizeMinimized.transformGroups: res not unique, transform canceled"),r;e=_.flatten(r);if(0<_.difference(e,s).length)return console.warn("Internal error: SizeMinimized.transformGroups: not have the same members, transform canceled"),r}return t}async function walk(e,n){const u=[],a=new Set,l=e;return await async function r(s){if(a.add(s.uuid),!n.getRedirect(s.uuid)&&!u.includes(s.uuid)){s.meta.files.includes(".json")&&u.push(s.uuid);var t=(await asset_library_1.buildAssetLibrary.getDependUuids(s.uuid)||[]).filter(e=>{return!!(e=asset_library_1.buildAssetLibrary.getAsset(e))&&((e=asset_library_1.buildAssetLibrary.getAssetProperty(e,"type"))?"cc.Texture2D"!==e&&cc.js.getClassByName(e):void 0)});for(let e=0;e<t.length;e++){var i=t[e];a.has(i)?i!==s.uuid&&i!==l.uuid||console.debug(`[json-group] check self or raw asset, skip. ${i} depended by ${s.uuid} has checked in raw asset ${l.uuid}/bundle(${n.name})}`):await r(asset_library_1.buildAssetLibrary.getAsset(i))}}}(e),!u||u.length<1?e.meta.files.includes(".json")?[e.uuid]:[]:(!u.includes(e.uuid)&&e.meta.files.includes(".json")&&u.push(e.uuid),[...new Set(u)])}function hasGroups(r,s){for(let e=0;e<s.length;e++){var t=s[e];for(let e=0;e<t.length;e++)if(t[e]===r)return!0}return!1}exports.splitGroups=splitGroups,exports.walk=walk,exports.hasGroups=hasGroups;