"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s);var o=Object.getOwnPropertyDescriptor(t,s);o&&("get"in o?t.__esModule:!o.writable&&!o.configurable)||(o={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,r,o)}:function(e,t,s,r){e[r=void 0===r?s:r]=t[s]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)"default"!==s&&Object.prototype.hasOwnProperty.call(e,s)&&__createBinding(t,e,s);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.compressCustomFormat=exports.getCompressFunc=exports.compressAstc=exports.compressEtc=exports.compressPVR=exports.compressWebp=exports.compressJpgAndPng=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path"),fs_extra_2=require("fs-extra"),Path=__importStar(require("path")),utils_1=require("./utils"),utils_2=require("../../utils"),Sharp=require("sharp");async function compressJpgAndPng(r){return new Promise((e,t)=>{let s=Sharp(r.src);s="png"===r.format?s.png({quality:r.compressOptions.quality||100}):s.jpeg({quality:r.compressOptions.quality||100}),(0,fs_extra_2.ensureDirSync)((0,path_1.dirname)(r.dest)),s.toFile(r.dest).then(()=>{e()}).catch(e=>{t(e)})})}async function compressWebp(e){var{src:e,dest:t,format:s,compressOptions:r}=e;(0,fs_extra_2.ensureDirSync)((0,path_1.dirname)(t)),console.debug("start compress webp",e,t,s);let o=Path.join(Editor.App.path,"../tools/libwebp_darwin/bin/cwebp");"win32"===process.platform&&(o=Path.join(Editor.App.path,"../tools/libwebp_win32/bin/cwebp.exe"));s=[e,"-o",t,"-q",String(r.quality),"-quiet","-exact"];console.debug(`webp compress command : ${o} `+s.join(" ")),await(0,utils_2.quickSpawn)(o,s,{prefix:"[compress webp]"}),console.log("compress webp success "+`{link(${t})}`)}async function compressPVR(e){console.debug("start compress pvr",e),e.format.endsWith("rgb_a")&&(t=Path.relative(Editor.Project.path,e.src),t=Path.join(Editor.Project.path,"temp","CompressTexture","pvr_alpha",t),await createAlphaAtlas(e.src,t),e.src=t);var{src:t,dest:s,format:r,compressOptions:o}=e;(0,fs_extra_2.ensureDirSync)((0,path_1.dirname)(s));let a=Path.join(Editor.App.path,"../tools/PVRTexTool_darwin/PVRTexToolCLI");"win32"===process.platform&&(a=Path.join(Editor.App.path,"../tools/PVRTexTool_win32/PVRTexToolCLI.exe"));var c={pvrtc_4bits_rgba:"PVRTC1_4",pvrtc_4bits_rgb:"PVRTC1_4_RGB",pvrtc_4bits_rgb_a:"PVRTC1_4_RGB",pvrtc_2bits_rgba:"PVRTC1_2",pvrtc_2bits_rgb:"PVRTC1_2_RGB",pvrtc_2bits_rgb_a:"PVRTC1_2_RGB"}[r];c?(t=["-i",t,"-o",s,"-squarecanvas","+","-potcanvas","+","-q","pvrtc"+o.quality,"-f",c+",UBN,lRGB"],console.debug(`pvrtc compress command :  ${a} `+t.join(" ")),await(0,utils_2.quickSpawn)(a,t,{downGradeWaring:!0,downGradeLog:!0,ignoreError:!0,downGradeError:!0,prefix:"[compress pvrtc]"}),(0,fs_extra_1.existsSync)(s)?console.log("compress pvrtc success "+`{link(${s})}`):console.error(Editor.I18n.t("builder.error.texture_compress_failed",{type:r,asset:`{asset(${Build.Utils.getUuidFromPath(e.src)})}`,toolsPath:`{file(${a})}`,toolHomePage:"https://developer.imaginationtech.com/pvrtextool/"}))):console.error("Invalid pvr compress format "+r)}async function compressEtc(e){var{dest:t,format:s,compressOptions:r}=e;console.debug("start compress etc",e.src,t,s),(0,fs_extra_2.ensureDirSync)((0,path_1.dirname)(t)),s.endsWith("rgb_a")&&(a=Path.relative(Editor.Project.path,e.src),a=Path.join(Editor.Project.path,"temp","CompressTexture","etc_alpha",a),await createAlphaAtlas(e.src,a),e.src=a);let o=Path.join(Editor.App.path,"../tools/mali_darwin/etcpack");"win32"===process.platform&&(o=Path.join(Editor.App.path,"../tools/mali_win32/etcpack.exe"));var a=Path.dirname(o),{etcFormat:c,compressFormat:i}=(o="."+Path.sep+Path.basename(o),{etc1_rgb:{etcFormat:"etc1",compressFormat:"RGB"},etc1_rgb_a:{etcFormat:"etc1",compressFormat:"RGB"},etc2_rgba:{etcFormat:"etc2",compressFormat:"RGBA"},etc2_rgb:{etcFormat:"etc2",compressFormat:"RGB"}}[s]),r=[Path.normalize(e.src),Path.dirname(t),"-c",c,"-s",r.quality],p=a,n=Object.assign({},process.env),a=(n.PATH=a+":"+n.PATH,{cwd:p,env:n,prefix:"[compress etc]"});"etc2"===c&&r.push("-f",i),console.debug(`etc compress command :  ${o} `+r.join(" ")),await(0,utils_2.quickSpawn)(o,r,a),(0,fs_extra_1.existsSync)(t)?console.log("compress etc success "+`{link(${t})}`):console.error(Editor.I18n.t("builder.error.texture_compress_failed",{type:s,asset:`{asset(${Build.Utils.getUuidFromPath(e.src)})}`,toolsPath:`{file(${o})}`,toolHomePage:"https://imagemagick.org/script/command-line-processing.php"}))}async function compressAstc(e){var{src:e,dest:t,format:s,compressOptions:r}=e;console.debug("start compress astc",e,t,s),(0,fs_extra_2.ensureDirSync)((0,path_1.dirname)(t));let o=Path.join(Editor.App.path,"../tools/astc-encoder/astcenc");"win32"===process.platform&&(o=Path.join(Editor.App.path,"../tools/astc-encoder/astcenc.exe"));var a={astc_4x4:"4x4",astc_5x5:"5x5",astc_6x6:"6x6",astc_8x8:"8x8",astc_10x5:"10x5",astc_10x10:"10x10",astc_12x12:"12x12"}[s],a=("veryfast"===r.quality&&(r.quality="fastest"),["-cl",e,t,a,"-"+r.quality]);console.debug(`astc compressed command: ${Path.basename(o)} `+a.join(" ")),await(0,utils_2.quickSpawn)(o,a,{prefix:"[compress astc]"}),(0,fs_extra_1.existsSync)(t)?console.log("Compress astc success "+`{link(${t})}`):console.error(Editor.I18n.t("builder.error.texture_compress_failed",{type:s,asset:`{asset(${Build.Utils.getUuidFromPath(e)})}`,toolsPath:`{file(${o})}`,toolHomePage:"https://github.com/ARM-software/astc-encoder"}))}function getCompressFunc(e){switch(e.slice(0,3)){case"jpg":case"png":return compressJpgAndPng;case"pvr":return compressPVR;case"etc":return compressEtc;case"web":return compressWebp;case"ast":return compressAstc}}function patchCommand(e,t){return new Function("options","with(options){ return String.raw`"+e+"`}")(t)}async function compressCustomFormat(e){var{src:t,dest:s,compressOptions:r}=e,{command:e,path:o}=e.customConfig,o=Editor.UI.__protected__.File.resolveToRaw(o),a={cwd:Path.dirname(o),prefix:"[custom compress]"},e=patchCommand(e,Object.assign(Object.assign({},r),{src:t,dest:s})),r=e.split(" ").filter(e=>!!e);console.debug(`custom compress command : ${o} `+e),await(0,utils_2.quickSpawn)(o,r,a)}async function createAlphaAtlas(e,t){var e=new Sharp(e),s=await e.metadata(),r=s.width,o=s.height,s=(0,utils_1.roundToPowerOfTwo)(r);let a=(0,utils_1.roundToPowerOfTwo)(o);a<s/2&&(a=s/2);var c=await e.raw().toBuffer(),s=2*r*a*3,i=Buffer.alloc(s,0);for(let t=0;t<o;t++)for(let e=0;e<r;e++){var p=t*r+e,n=4*p;i[p=3*p]=c[n],i[1+p]=c[1+n],i[2+p]=c[2+n];p=3+n;i[n=3*((t+a)*r+e)]=c[p],i[1+n]=c[p],i[2+n]=c[p]}e={raw:{width:r,height:2*a,channels:3}};(0,fs_extra_2.ensureDirSync)(Path.dirname(t)),await Sharp(i,e).toFile(t)}exports.compressJpgAndPng=compressJpgAndPng,exports.compressWebp=compressWebp,exports.compressPVR=compressPVR,exports.compressEtc=compressEtc,exports.compressAstc=compressAstc,exports.getCompressFunc=getCompressFunc,exports.compressCustomFormat=compressCustomFormat;