"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.queryAutoAtlasFileCache=exports.packAutoAtlas=exports.TexturePacker=void 0;const fs_extra_1=require("fs-extra"),lodash_1=__importDefault(require("lodash")),path_1=require("path"),asset_library_1=require("../../manager/asset-library"),config_1=require("./config"),pac_info_1=require("./pac-info"),packer_1=require("./packer");class TexturePacker{constructor(){this.pacInfos=[]}static getCacheDirWithUuid(e,t="build"){return(0,path_1.join)(asset_library_1.buildAssetLibrary.getAssetTempDirByUuid(e),t,"texture-packer",t)}static async packSingle(e,t){e=await new pac_info_1.PacInfo(e,t).initSpriteFramesWithRange();return TexturePacker.internalPack(e)}static queryPacStoredPath(e){e=TexturePacker.getCacheDirWithUuid(e.uuid,e.packOptions.mode);return(0,path_1.join)(e,"pac-info.json")}async init(e,t){const r=[];return await Promise.all(e.map(async e=>{e.url.startsWith("db://internal/default_file_content")||0!==(e=await new pac_info_1.PacInfo(e).initSpriteFramesWithRange(t)).spriteFrameInfos.length&&r.push(e)})),this.pacInfos=r,this}async pack(){return Promise.all(this.pacInfos.map(e=>TexturePacker.internalPack(e)))}static async internalPack(e){let t=null;var r=TexturePacker.queryPacStoredPath(e);if(TexturePacker.useCache){var a=TexturePacker.getPacResFromCache(e,r);if(a.result)return e.result=a.result,e.dirty=!1,e;t=a,e.dirty=!0}a=this.getCacheDirWithUuid(e.uuid,e.packOptions.mode);if((0,fs_extra_1.emptyDirSync)(a),e.spriteFrameInfos&&e.spriteFrameInfos.length){a=await(0,packer_1.packer)(e.spriteFrameInfos,Object.assign(Object.assign({},e.packOptions),{destDir:a,name:e.name}));if(e.result=a,TexturePacker.useCache){(t=t||TexturePacker.genNewStoredInfo(e)).result=a;try{(0,fs_extra_1.outputJSONSync)(r,t,{spaces:2})}catch(e){console.debug("write pac info cache failed"),console.error(e)}}}return e}static getStoredPacInfo(e,t){t=t||TexturePacker.queryPacStoredPath(e);e={newStoredPacInfo:TexturePacker.genNewStoredInfo(e),storedPacInfo:null};if((0,fs_extra_1.existsSync)(t))try{e.storedPacInfo=(0,fs_extra_1.readJSONSync)(t)}catch(e){console.debug(e)}return e}static genNewStoredInfo(e){var t={md5:"",versionDev:config_1.versionDev,sharpMd5:Build.Utils.calcMd5(JSON.stringify(require("sharp").versions))};return e.storeInfo.sprites=lodash_1.default.sortBy(e.storeInfo.sprites,"uuid"),t.md5=Build.Utils.calcMd5(JSON.stringify({packStoreInfo:e.storeInfo,versionDev:config_1.versionDev,sharpMd5:t.sharpMd5})),t}static getPacResFromCache(t,e){var{storedPacInfo:e,newStoredPacInfo:r}=TexturePacker.getStoredPacInfo(t,e),a=!e||r.md5!==e.md5;if(!a){try{for(const s of e.result.atlases)if(!(0,fs_extra_1.existsSync)(s.imagePath))break;r.result=e.result}catch(e){console.warn(`Get Cache info of pac failed {asset(${t.uuid})}`),console.warn(e)}console.debug(`Get Cache info of pac success {asset(${t.uuid})}`)}return r}static async queryPacCache(e){e=new pac_info_1.PacInfo(asset_library_1.buildAssetLibrary.getAsset(e)),e.packOptions.mode="preview",await e.initSpriteFramesWithRange(),e=TexturePacker.getStoredPacInfo(e);return e&&e.storedPacInfo&&e.storedPacInfo.result&&e.storedPacInfo.md5===e.newStoredPacInfo.md5?{unpackedImages:e.storedPacInfo.result.unpackedImages,dirty:!1,atlasImagePaths:e.storedPacInfo.result.atlases.map(e=>e.imagePath)}:null}}async function packAutoAtlas(e,t){(t=t||{}).mode="preview";try{var r=await TexturePacker.packSingle(asset_library_1.buildAssetLibrary.getAsset(e),t);return r.result?{atlasImagePaths:r.result.atlases.map(e=>e.imagePath),unpackedImages:r.result.unpackedImages,dirty:r.dirty}:null}catch(e){console.error(e)}return null}function queryAutoAtlasFileCache(e){return TexturePacker.queryPacCache(e)}(exports.TexturePacker=TexturePacker).useCache=!0,exports.packAutoAtlas=packAutoAtlas,exports.queryAutoAtlasFileCache=queryAutoAtlasFileCache;