"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.bundleOutputTask=exports.bundleDataTask=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path"),asset_library_1=require("../../manager/asset-library");function bundleDataTask(t,a){t.assetsWithoutRedirect.forEach(s=>{var s=asset_library_1.buildAssetLibrary.getAsset(s),e=a.addTaskWithAssetInfo(s);e&&(t.compressTask[s.uuid]=e)}),console.debug(`init image compress task ${Object.keys(t.compressTask).length} in bundle `+t.name)}async function bundleOutputTask(i,e){await Promise.all(Object.keys(i.compressTask).map(async a=>{const r=i.compressTask[a];if(r.dest&&r.dest.length){Editor.Utils.Path.contains(i.dest,r.src)&&await(0,fs_extra_1.remove)(r.src);const n=[];await Promise.all(r.dest.map(async(s,e)=>{var t;(0,fs_extra_1.existsSync)(s)&&(t=(0,path_1.join)(i.dest,i.nativeBase,a.substr(0,2),(0,path_1.basename)(s)),await(0,fs_extra_1.copy)(s,t),n.push(r.suffix[e]))}));var s=await e.getInstance(a);s._exportedExts=n.sort(),e.addInstance(s)}else delete i.compressTask[a]}))}exports.bundleDataTask=bundleDataTask,exports.bundleOutputTask=bundleOutputTask;