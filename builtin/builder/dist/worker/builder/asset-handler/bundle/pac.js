"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.sortBundleInPac=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path"),bundle_utils_1=require("../../../../share/bundle-utils"),asset_library_1=require("../../manager/asset-library");function sortBundleInPac(e,s,t,u,i){var{removeTextureInBundle:a,removeImageInBundle:r,removeSpriteAtlasInBundle:o}=t.packOptions;let d=null;var n=[],p=s.imageUuid,l=s.textureUuid;for(const h of e)if(h.output){var m=h.atlasRes,g=h.assetsWithoutRedirect;const I=new Set(g);if(I.has(t.uuid)||t.spriteFrames.find(e=>I.has(e._uuid))){var _=[],c=t.path.startsWith(h.root+"/");c&&console.debug(`Asset {asset(${t.path})} is Bundle`);for(const b of s.spriteFrameInfos)h.getRedirect(b.uuid)||h.getRedirect(b.uuid)||(h.addAssetWithUuid(b.uuid),h.removeFromGroups(b.uuid),u[b.textureUuid]||!a&&c?u[b.textureUuid]&&!c&&console.warn(Editor.I18n.t("builder.tips.use_texture_in_atlas",{info:`{asset(${b.textureUuid})}`,useInfo:`{asset(${u[b.textureUuid].toString()})}`})):h.removeAsset(b.textureUuid),u[b.imageUuid]||!r&&c?u[b.imageUuid]&&!c&&console.warn(Editor.I18n.t("builder.tips.use_image_in_atlas",{info:`{asset(${b.imageUuid})}`,useInfo:`{asset(${u[b.imageUuid].toString()})}`})):(h.removeAsset(b.imageUuid),i&&i.removeTask(b.imageUuid)),_.push(b.uuid),m.assetsToImage[b.uuid]=p,m.assetsToImage[b.imageUuid]=p);d&&d.priority!==h.priority?h.addRedirect(l,d.name):(h.addAssetWithUuid(p),h.addAssetWithUuid(l),h.compressionType===bundle_utils_1.BundleCompressionTypes.MERGE_ALL_JSON?h.groups[0]?h.groups[0].uuids.push(p,l):h.addGroup("NORMAL",[p,l]):h.compressionType!==bundle_utils_1.BundleCompressionTypes.NONE&&(h.addToGroup("IMAGE",p),h.addToGroup("TEXTURE",l)),g=(0,path_1.join)(h.dest,h.nativeBase,p.slice(0,2),p+(0,path_1.extname)(s.imagePath)),(0,fs_extra_1.copySync)(s.imagePath,g),(T=asset_library_1.buildAssetLibrary.getAsset(t.uuid)).meta.userData.compressSettings&&i&&(T=i.genTaskInfoFromAssetInfo(T))&&(T.mtime=(0,fs_extra_1.statSync)(s.imagePath).mtime.getTime(),h.compressTask[s.imageUuid]=i.addTask(s.imageUuid,Object.assign(Object.assign({},T),{src:g}))),d?n.push(h.root):d=h);var T=[..._];u[t.uuid]||c&&!o?(u[t.uuid]||c)&&T.push(t.uuid):(h.removeAsset(t.uuid),console.debug(`remove spriteAtlas._uuid : {asset(${t.uuid})}`)),h.compressionType===bundle_utils_1.BundleCompressionTypes.MERGE_ALL_JSON?h.groups[0]?h.groups[0].uuids.push(...T):h.addGroup("NORMAL",T):h.compressionType!==bundle_utils_1.BundleCompressionTypes.NONE&&h.addGroup("NORMAL",T),m.imageToAtlas[p]=t.uuid,m.assetsToImage[l]=p,m.atlasToImages[t.uuid]||(m.atlasToImages[t.uuid]=[]),m.atlasToImages[t.uuid].push(p)}}d&&n.length&&console.warn(Editor.I18n.t("builder.warn.repeatAtlasInBundle",{imageUuid:p,bundle1:d.root,bundle2:n.toString()}))}exports.sortBundleInPac=sortBundleInPac;