"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.taskManager=void 0;const global_1=require("../../share/global");class TaskManager{constructor(){this._optionsDebug=!1,this.tasks={dataTasks:["data-task/asset","data-task/script"],buildTasks:["build-task/script","build-task/asset"],md5Tasks:["postprocess-task/suffix"],settingTasks:["setting-task/asset","setting-task/script","setting-task/options"],postprocessTasks:["postprocess-task/template"]},this.pluginTasks={onBeforeBuild:"onBeforeBuild",onBeforeInit:"onBeforeInit",onAfterInit:"onAfterInit",onBeforeBuildAssets:"onBeforeBuildAssets",onAfterBuildAssets:"onAfterBuildAssets",onBeforeCompressSettings:"onBeforeCompressSettings",onAfterCompressSettings:"onAfterCompressSettings",onAfterBuild:"onAfterBuild",onBeforeCopyBuildTemplate:"onBeforeCopyBuildTemplate",onAfterCopyBuildTemplate:"onAfterCopyBuildTemplate",onError:"onError"},this.cacheConfig={engine:!0,settings:!1},this.taskWeight={dataTasks:.1,buildTasks:.1,md5Tasks:.1,settingTasks:.05,postprocessTasks:.05,pluginTasks:.2,bundleTask:.3},this.debugTaskConfig={dataTasks:{},settingTasks:{},buildTasks:{}}}get debug(){return this._optionsDebug||global_1.BuildGlobalInfo.debugMode}async init(){this.debugTaskConfig.settingTasks["setting-task/cache"]=!1,this._optionsDebug=!1;var s=await Editor.Profile.getConfig("builder","debug-tools.config");s&&s.config&&Object.assign(this.debugTaskConfig,s.config),s&&s.cacheConfig&&Object.assign(this.cacheConfig,s.cacheConfig)}getTaskHandle(s){if(this.debug){const t=this.debugTaskConfig[s],e=[];return this.tasks[s].forEach(s=>{!1!==t[s]&&e.push(require("./"+s))}),e}return this.tasks[s].map(s=>require("./tasks/"+s))}getTaskHandleFromNames(s){return s.map(s=>require("./tasks/"+s))}setDebugConfig(s,t,e){this.debugTaskConfig[s]&&t&&(this.debugTaskConfig[s][t]=e)}setRecompileTask(s){if(s&&s.enable&&!global_1.BuildGlobalInfo.debugMode){this._optionsDebug=!0;const{generateAssets:t,generateScripts:e,generateEngineByCache:i}=s;this.cacheConfig.engine=i,this.setDebugConfig("dataTasks","data-task/script",e),this.setDebugConfig("buildTasks","build-task/script",e),this.setDebugConfig("settingTasks","setting-task/script",e),this.tasks.buildTasks.forEach(s=>{["build-task/script"].includes(s)||exports.taskManager.setDebugConfig("buildTasks",""+s,t)}),this.setDebugConfig("settingTasks","setting-task/scene",t),this.setDebugConfig("settingTasks","setting-task/group",t),this.setDebugConfig("settingTasks","setting-task/md5",t),this.setDebugConfig("settingTasks","setting-task/cache",!e||!t)}}}exports.taskManager=new TaskManager;