"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BuildStageTask=void 0;const path_1=require("path"),fs_extra_1=require("fs-extra"),sub_process_manager_1=require("../worker-pools/sub-process-manager"),task_base_1=require("./manager/task-base"),tempDir=(0,path_1.join)(Editor.Project.tmpDir,"builder","compile");class BuildStageTask extends task_base_1.BuildTaskBase{constructor(t){super(t.name),this.hooksInfo=t.hooksInfo,this.root=t.root,t.buildTaskOptions&&(this.options=t.buildTaskOptions);t=t.name[0].toUpperCase()+t.name.slice(1,t.name.length);this.hookMap={["onBefore"+t]:"onBefore"+t,[this.name]:this.name,["onAfter"+t]:"onAfter"+t}}init(){try{var t=(0,path_1.join)(this.root,BuildStageTask.optionsFileName);(0,fs_extra_1.existsSync)(t)&&(this.options=(0,fs_extra_1.readJSONSync)(t),console.debug(`Use build file ${BuildStageTask.optionsFileName} in root(${this.root})`))}catch(t){console.warn("Get cache build options failed!")}this.options&&this.options.buildPath&&(this.options.buildPath=Editor.UI.__protected__.File.resolveToRaw(this.options.buildPath))}async run(){var t=`// ---- builder:run-build-stage-${this.name} ----`;console.debug(t),Editor.Metrics.trackTimeStart(t),this.init(),this.updateProcess("init options success",.1),(0,fs_extra_1.emptyDirSync)(tempDir);try{for(const e of Object.keys(this.hookMap))await this.runPluginTask(e)}catch(t){this.error=t}if(await Editor.Metrics.trackTimeEnd(t,{output:!0}),this.error)throw this.error;return!0}async break(t){sub_process_manager_1.workerManager.killRunningChilds(),await super.break(t)}async handleHook(t,e){e?await t.call(this,this.root,this.options):await t(this.root,this.options)}}(exports.BuildStageTask=BuildStageTask).optionsFileName="cocos.compile.config.json";