"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BuildTask=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path"),asset_1=require("./manager/asset"),build_result_1=require("./manager/build-result"),build_result_2=require("./manager/build-result"),task_config_1=require("./task-config"),stage_task_manager_1=require("./stage-task-manager"),common_options_validator_1=require("../../share/common-options-validator"),plugin_1=require("../plugin"),sub_process_manager_1=require("../worker-pools/sub-process-manager"),bundle_1=require("./asset-handler/bundle"),metric_1=require("./metric"),cc_1=require("cc"),task_base_1=require("./manager/task-base"),console_1=require("../console"),utils_1=require("../../share/utils"),build_template_1=require("./manager/build-template");class BuildTask extends task_base_1.BuildTaskBase{constructor(s,t){super("build"),this.mainTaskWeight=1,this.hookMap={onBeforeBuild:"onBeforeBuild",onBeforeInit:"onBeforeInit",onAfterInit:"onAfterInit",onBeforeBuildAssets:"onBeforeBuildAssets",onAfterBuildAssets:"onAfterBuildAssets",onBeforeCompressSettings:"onBeforeCompressSettings",onAfterCompressSettings:"onAfterCompressSettings",onAfterBuild:"onAfterBuild",onBeforeCopyBuildTemplate:"onBeforeCopyBuildTemplate",onAfterCopyBuildTemplate:"onAfterCopyBuildTemplate",onError:"onError"},this.pipeline=[],this.taskResMap={},this.hasInitStatistics=!1,this.crashInfo={},this.id=s,this.dataTasks=task_config_1.taskManager.getTaskHandle("dataTasks"),this.settingTasks=task_config_1.taskManager.getTaskHandle("settingTasks"),this.hooksInfo=plugin_1.pluginManager.getHooksInfo(t.platform),this.options=t,this.crashInfo={},this.cache=new asset_1.BuilderAssetCache(this),this.result=new build_result_1.InternalBuildResult(this,!!t.preview),t.preview||"bundle"===t.buildMode||(this.result.addListener("updateProcess",s=>{this.updateProcess(s)}),this.buildTasks=task_config_1.taskManager.getTaskHandle("buildTasks"),this.md5Tasks=task_config_1.taskManager.getTaskHandle("md5Tasks"),this.postprocessTasks=task_config_1.taskManager.getTaskHandle("postprocessTasks"),this.buildResult=new build_result_2.BuildResult(this),this.options.nextStages&&(this.mainTaskWeight=1/(this.options.nextStages.length+1)),this.hookWeight=this.mainTaskWeight*task_config_1.taskManager.taskWeight.pluginTasks,this.buildTemplate=new build_template_1.BuildTemplate(this.options.platform,this.options.taskName,plugin_1.pluginManager.getBuildTemplateConfig(this.options.platform)))}get stage(){return this.currentStageTask?this.currentStageTask.name:"build"}async addStatistics(){if(!this.hasInitStatistics){try{await(0,metric_1.collectMetricFromResult)(this.options,this.result,this.bundleManager&&this.bundleManager.bundles)}catch(s){console.debug(s)}this.hasInitStatistics=!0}}postCrashStatistics(){(0,metric_1.collectCrashMetric)(this.crashInfo,this.options,this.result,this.bundleManager&&this.bundleManager.bundles),this.emit("store-crash-info",this.crashInfo)}getTaskResult(s){return this.taskResMap[s]}async init(){this.error||this.breakResolve||(console.debug("Query all assets info in project"),await task_config_1.taskManager.init(),await this.initOptions(),cc.assetManager.releaseAll(),await this.cache.init())}async run(){var s=this.result.paths["dir"];return s?("bundle"===this.options.buildMode?await this.buildBundleOnly():(await(0,fs_extra_1.ensureDir)(this.result.paths.dir),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onBeforeBuild),this.options.useCache||(0,fs_extra_1.emptyDirSync)(this.result.paths.dir),await this.lockAssetDB(),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onBeforeInit),await this.init(),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onAfterInit),this.postCrashStatistics(),await this.initBundleManager(),await this.bundleManager.runPluginTask(this.bundleManager.hookMap.onBeforeBundleDataTask),await this.runBuildTask(this.dataTasks,task_config_1.taskManager.taskWeight.dataTasks),await this.bundleManager.runPluginTask(this.bundleManager.hookMap.onAfterBundleDataTask),this.postCrashStatistics(),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onBeforeBuildAssets),await this.bundleManager.runPluginTask(this.bundleManager.hookMap.onBeforeBundleBuildTask),await this.runBuildTask(this.buildTasks,task_config_1.taskManager.taskWeight.buildTasks),await this.bundleManager.runPluginTask(this.bundleManager.hookMap.onAfterBundleBuildTask),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onAfterBuildAssets),await this.runBuildTask(this.settingTasks,task_config_1.taskManager.taskWeight.settingTasks),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onBeforeCompressSettings),await this.runBuildTask(this.postprocessTasks,task_config_1.taskManager.taskWeight.postprocessTasks),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onAfterCompressSettings),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onBeforeCopyBuildTemplate),await this.buildTemplate.copyTo(this.result.paths.dir),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onAfterCopyBuildTemplate),await this.runBuildTask(this.md5Tasks,task_config_1.taskManager.taskWeight.md5Tasks),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onAfterBuild),await this.postBuild(),await this.handleBuildStageTask()),!0):(console.error("No output path can be built."),!1)}async buildBundleOnly(){await this.lockAssetDB(),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onBeforeInit),await this.init(),await this.runPluginTask(task_config_1.taskManager.pluginTasks.onAfterInit),this.bundleManager=new bundle_1.BundleManager(this.options,this),this.bundleManager.options.dest=this.result.paths.assets,this.bundleManager.destDir=this.result.paths.assets,this.bundleManager.on("update",(s,t)=>{this.updateProcess(s,t-this.bundleManager.progress)}),await this.bundleManager.run(),await this.runBuildTask(task_config_1.taskManager.getTaskHandleFromNames(["setting-task/cache","setting-task/asset","setting-task/script"]),task_config_1.taskManager.taskWeight.postprocessTasks);var s=this.bundleManager.bundles.filter(s=>s.output).sort((s,t)=>s.name.localeCompare(t.name));if(this.options.md5Cache)for(const t of s)this.result.settings.assets.bundleVers[t.name]=t.version;s=JSON.stringify(this.result.settings,null,this.options.debug?4:0);(0,fs_extra_1.outputFileSync)(this.result.paths.settings,s,"utf8"),await this.unLockAssetDB()}async postBuild(){this.unLockAssetDB(),this.options.generateCompileConfig&&(0,fs_extra_1.outputJSONSync)((0,path_1.join)(this.result.paths.dir,stage_task_manager_1.BuildStageTask.optionsFileName),this.result.compileOptions||this.options);var s=await Editor.Metrics.trackTimeEnd("builder:build-project-total",{output:!0});this.result.staticsInfo&&(this.result.staticsInfo.B100042=s),await this.addStatistics(),console.debug(`build success in ${s}!`)}async handleBuildStageTask(){if(Array.isArray(this.options.nextStages)){const a=1-this.mainTaskWeight;for(const n of this.options.nextStages){var s=plugin_1.pluginManager.getBuildStageWithHookTasks(this.options.platform,n);if(s){var t=(0,path_1.join)(Editor.UI.__protected__.File.resolveToRaw(this.options.buildPath),this.options.outputName);if(s.message){var{name:e,target:i}=s.message;Editor.Message.send(i,e,t,this.result.rawOptions)}else{i=Date.now(),e=new stage_task_manager_1.BuildStageTask(Object.assign(Object.assign({},s),{hooksInfo:this.hooksInfo,root:t,taskId:this.id,buildTaskOptions:this.options}));if((this.currentStageTask=e).on("update",(s,t)=>{this.updateProcess(s,t*a)}),await e.run(),"make"===n&&(this.result.staticsInfo.B100043=Number((Date.now()-i)/1e3)),this.breakResolve)break;if(e.error){this.error=e.error;break}}}else this.updateProcess(`No stage task: ${n} in platform ${this.options.platform}, please check your build options`,a)}}}async initBundleManager(){this.error||this.breakResolve||(this.bundleManager=new bundle_1.BundleManager(this.options,this),this.bundleManager.options.dest=this.result.paths.assets,this.bundleManager.destDir=this.result.paths.assets,this.options.preview?await this.bundleManager.initOptions():this.bundleManager.addListener("update",(s,t)=>{this.updateProcess(s)}),await this.bundleManager.runPluginTask(this.bundleManager.hookMap.onBeforeBundleInit),await this.bundleManager.initBundle(),await this.bundleManager.runPluginTask(this.bundleManager.hookMap.onAfterBundleInit))}break(t){return new Promise(async s=>{this.breakResolve=s,sub_process_manager_1.workerManager.killRunningChilds(),this.unLockAssetDB(),this.bundleManager&&this.bundleManager.break(t),this.currentStageTask&&this.currentStageTask.break(t)})}async lockAssetDB(){this.error||this.breakResolve||(this.updateProcess("Start lock asset db..."),await Manager.assetDBManager.pause("build"),this.dbPauseNoticeId=Editor.Task.addNotice({title:Editor.I18n.t("builder.tips.pauseAssetImport"),source:Editor.I18n.t("builder.title")}))}unLockAssetDB(){Manager.assetDBManager.resume(),void 0!==this.dbPauseNoticeId&&Editor.Task.removeNotice(this.dbPauseNoticeId)}async getPreviewSettings(){try{return await this.init(),this.dataTasks=task_config_1.taskManager.getTaskHandle("dataTasks"),await this.initBundleManager(),await this.runBuildTask(this.dataTasks,task_config_1.taskManager.taskWeight.dataTasks),await this.runBuildTask(this.settingTasks,task_config_1.taskManager.taskWeight.settingTasks),this.result.settings}catch(s){return console.error(s),null}}updateProcess(s,t){t&&(this.progress=Editor.Utils.Math.clamp01(this.progress+t)),console.debug(`${s}, progress: ${(100*this.progress).toFixed(0)}%`),this.emit("update",s,this.progress)}async initOptions(){await checkDefaultOptions(this.options,BuildTask.isCommandBuild),await(0,common_options_validator_1.checkProjectSetting)(this.options),await(0,common_options_validator_1.checkPreferenceSetting)(this.options,BuildTask.isCommandBuild),this.options.md5CacheOptions=this.options.md5CacheOptions||{excludes:[],includes:[],replaceOnly:[]},this.options.resolution={width:this.options.designResolution.width,height:this.options.designResolution.height,policy:cc_1.ResolutionPolicy.SHOW_ALL};var s,t=this.options.resolution;this.options.designResolution.fitHeight?this.options.designResolution.fitWidth?t.policy=cc_1.ResolutionPolicy.SHOW_ALL:t.policy=cc_1.ResolutionPolicy.FIXED_HEIGHT:this.options.designResolution.fitWidth?t.policy=cc_1.ResolutionPolicy.FIXED_WIDTH:t.policy=cc_1.ResolutionPolicy.NO_BORDER,this.options.preview||(s=await Editor.Message.request("engine","query-engine-info"),this.options.engineInfo||(this.options.engineInfo=s),this.options.appTemplateData={debugMode:this.options.debug,renderMode:!1,showFPS:this.options.debug,resolution:t,md5Cache:this.options.md5Cache,cocosTemplate:""},this.options.buildEngineParam={debug:this.options.debug,sourceMaps:this.options.sourceMaps,includeModules:this.options.includeModules,engineVersion:Editor.App.version,md5Map:[],engineName:"cocos-js",platform:"HTML5",useCache:!1!==this.options.useBuildEngineCache,isNative:!1,nativeCodeBundleMode:this.options.nativeCodeBundleMode,wasmCompressionMode:this.options.wasmCompressionMode},this.options.buildScriptParam={experimentalEraseModules:this.options.experimentalEraseModules,outputName:"project",flags:Object.assign({DEBUG:!!this.options.debug},this.options.flags),polyfills:this.options.polyfills,hotModuleReload:!1,platform:"HTML5",commonDir:"",bundleCommonChunk:null!=(s=this.options.bundleCommonChunk)&&s,targets:this.options.buildScriptTargets},this.options.polyfills?this.options.polyfills.targets=this.options.buildScriptTargets:this.options.polyfills={targets:this.options.buildScriptTargets},this.options.assetSerializeOptions={"cc.EffectAsset":{glsl1:this.options.includeModules.includes("gfx-webgl"),glsl3:this.options.includeModules.includes("gfx-webgl2"),glsl4:!1},exportCCON:!1},task_config_1.taskManager.cacheConfig.engine||(this.options.compileEngineForce=!0),this.options.useBuiltinServer&&this.result.paths.dir===(0,path_1.join)(Editor.Project.path,"build",this.options.outputName)?(t=await Editor.Message.request("preview","query-preview-url"),this.options.server=new URL((0,path_1.relative)(Editor.Project.path,this.result.paths.dir),t).href,console.log("Use builtin remote server: "+this.options.server)):this.options.useBuiltinServer=!1)}async runBuildTask(t,e,...i){e=this.mainTaskWeight*e/t.length;for(let s=0;s<t.length;s++){if(this.error)return;if(this.breakResolve){this.breakResolve(),await this.onError(new Error(`Build task ${this.options.taskName||this.options.outputName} is break!`));break}var a=t[s],n=await transTitle(a.title),o=`// ---- build task ${n} ----`;Editor.Metrics.trackTimeStart(o),this.updateProcess(n+" start"),console.debug(o),console_1.newConsole.trackMemoryStart(n);try{var r=await a.handle.call(this,this.options,this.result,this.cache,...i),l=(a.name&&r&&(this.taskResMap[a.name]=r),await Editor.Metrics.trackTimeEnd(o,{output:!0}));this.updateProcess(`run build task ${n} success in ${(0,utils_1.formatMSTime)(l)}√`,e)}catch(s){return console_1.newConsole.trackMemoryEnd(n),this.updateProcess(`run build task ${n} failed!`,e),void await this.onError(s,!0)}console_1.newConsole.trackMemoryEnd(n)}}async handleHook(s,t,...e){t?await s.call(this,this.options,this.result,this.cache,...e):await s(this.result.rawOptions,this.buildResult,...e)}onError(s,t=!0){if(this.error=s,this.bundleManager&&(this.bundleManager.error=s),t)throw s}async runErrorHook(){try{var t="onError";for(const a of this.hooksInfo.pkgNameOrder){var s,e=this.hooksInfo.infos[a],i=a+`:(${t})`;try{(s=Editor.Module.__protected__.requireFile(e.path))[t]&&(this.updateProcess(i+" start..."),console.debug(`// ---- ${a}:(${t}) ----`),console_1.newConsole.trackMemoryStart(i),e.internal?await s[t].call(this,this.options,this.result,this.cache):await s[t](this.result.rawOptions,this.buildResult),console_1.newConsole.trackMemoryEnd(i),console.debug(`// ---- ${a}:(${t}) success ----`),this.updateProcess(a+`:(${t})`))}catch(s){console_1.newConsole.trackMemoryEnd(i),console.error(new BuildError(`Run build plugin ${a}:(${t}) failed!`).stack)}}await this.postBuild()}catch(s){console.debug(s)}}}function transTitle(s){return"string"!=typeof s?"":s.startsWith("i18n:")&&(s=s.replace("i18n:",""),Editor.I18n.t(""+s)||console.debug(""+Editor.I18n.t("builder.warn.no_defined_in_i18n",{name:s})),Editor.I18n.t(""+s))||s}async function checkDefaultOptions(s,t){if(!t&&s.packages)for(const i of Object.keys(s.packages)){var e=await Editor.Profile.getConfig(i,"builder.options."+s.platform,"default");e&&(Object.assign(e,s.packages[i]),s.packages[i]=e)}}(exports.BuildTask=BuildTask).isCommandBuild=!1;class BuildError{constructor(s){Error.captureStackTrace(this,BuildError),this.message=s}}