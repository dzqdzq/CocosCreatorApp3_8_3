"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.workerManager=exports.WorkerManager=void 0;const child_process_1=require("child_process"),path_1=require("path"),workerPath=(0,path_1.join)(__dirname,"../../../static/sub-process-index");class WorkerManager{constructor(e){this.taskMap={},this.pools=new Set,this.runningPoolMap=new WeakMap,this.debug=Editor.App.dev,this.startPort=9220,this.runningChild=new Set,e&&e.forEach(e=>this.registerTask(e))}async registerTask(e){this.taskMap[e.name]||(this.taskMap[e.name]=e).lazy||await this.getWorkerProcess(e.name)}runTask(i,o,n){return new Promise(async(e,r)=>{this.resetClearTimmer();var s=await this.getWorkerProcess(i),t=this.taskMap[i];console.log(`Run build task(${i}) in child${this.debug?t.port:""}, see: chrome://inspect/#devices`),s&&t?(t.reject=r,t.resolve=e,t.startTime=Date.now(),this.runningPoolMap.set(s,t),this.runningChild.add(s),t.busy=!0,s.send({type:"excute-script",path:t.path,method:o||t.method,args:n})):r(new Error("No worker "+i))})}kill(e){var r,e=this.taskMap[e];e&&(null!=(r=e._handleProcess)&&r.kill(),this.pools.delete(e._handleProcess),this.runningChild.delete(e._handleProcess),delete e._handleProcess)}killRunningChilds(){0!==this.runningChild.size&&(this.runningChild.forEach(e=>{e.kill(),this.pools.delete(e);e=this.runningPoolMap.get(e);e&&delete e._handleProcess}),this.runningChild.clear())}killFreeChilds(){this.pools.forEach(e=>{!this.runningChild.has(e)&&(e.kill(),this.pools.delete(e),e=this.runningPoolMap.get(e))&&delete e._handleProcess})}resetClearTimmer(){this._clearFreeChildTimmer&&clearTimeout(this._clearFreeChildTimmer),this._clearFreeChildTimmer=setTimeout(()=>{this.killFreeChilds()},12e5)}async getWorkerProcess(e){var r,s=this.taskMap[e];return s?(this.taskMap[e]._handleProcess||(r=await Editor.Network.getFreePort(this.startPort+this.pools.size),this.taskMap[e]._handleProcess=await this.createWorkerProcess(r),this.taskMap[e].port=r,Editor.Message.send("process","register-process-info",null==(r=this.taskMap[e]._handleProcess)?void 0:r.pid,"node:"+s.name)),this.taskMap[e]._handleProcess):null}async createWorkerProcess(e){const t=(0,child_process_1.fork)(workerPath,[],{execArgv:this.debug?["--inspect="+e]:[],stdio:["ipc","pipe","pipe","pipe"]});return this.debug&&console.debug(`child ${e} in chrome://inspect/#devices`),this.pools.add(t),t.on("message",e=>{var r=this.runningPoolMap.get(t);e&&"excute-script over"===e.type&&(console.debug(`excute-script over with ${r.name} ${Date.now()-r.startTime}ms`),0===e.code?r.resolve(e.data):r.reject(new Error(`excute-task${r.name} failed!`)))}),t.once("error",e=>{t.kill();var r=this.runningPoolMap.get(t);r&&delete r._handleProcess,this.runningPoolMap.delete(t),r.busy=!1,r.reject(e)}),t.once("exit",(e,r)=>{var s=this.runningPoolMap.get(t);s.busy=!1,0!==e?s.reject(new Error(`Exit with code:${e}, signal:`+r)):(console.debug(`Exit with code:${e}, signal:`+r),s.resolve(),s&&delete s._handleProcess,this.runningPoolMap.delete(t))}),null!=(e=t.stdout)&&e.on("data",e=>{var r=this.runningPoolMap.get(t);console.log(`[${r.name}]`+e.toString())}),null!=(e=t.stderr)&&e.on("data",e=>{var r,e=e.toString();!e||e.includes("Debugger")||e.includes("For help, see")||e.includes("Starting inspector on")?console.debug(e):(r=this.runningPoolMap.get(t),e.includes("[warning]")?console.warn(`[${r.name}]`+e.replace("[warning]","")):console.error(`[${r.name}]`+e))}),t}quickSpawn(i,o,n={downGradeLog:!0,prefix:""}){return"npm"===i&&(i="win32"===process.platform?"npm.cmd":"npm"),n.prefix=n.prefix||"",new Promise((r,s)=>{const t=(0,child_process_1.spawn)(i,o,{cwd:(null==n?void 0:n.cwd)||void 0,env:null==n?void 0:n.env});this.runningChild.add(t),n.ignoreLog||t.stdout.on("data",e=>{e=e.toString(),null!=n&&n.downGradeLog?console.debug(n.prefix+e.toString()):console.log(n.prefix+e.toString())}),t.stderr.on("data",r=>{r=r.toString();if(r&&"\n"!==r&&!/^(?=.*native-pack-tool)(?=.*No repository field)/gi.test(r)){r=n.prefix+r;let e="error";/warn/gi.test(r)?(e="warn",null!=n&&n.downGradeWaring&&(e="log")):null!=n&&n.downGradeError&&(e="log"),console[e](r)}}),t.on("close",e=>{this.runningChild.delete(t),0!==e?s(n.prefix+(`Child process exit width code ${e}:${i} `+o.toString())):(r(!0),console.debug(n.prefix+"Child process exit width code "+e))}),t.on("error",e=>{this.runningChild.delete(t),console.error(n.prefix+(`child process error: ${i} `+o.toString())),s(e)}),t.on("exit",e=>{this.runningChild.delete(t),0!==e?s(n.prefix+(`Child process exit width code ${e}:${i} `+o.toString())):(r(!0),console.debug(n.prefix+"Child process exit width code "+e))})})}}exports.WorkerManager=WorkerManager,exports.workerManager=new WorkerManager;