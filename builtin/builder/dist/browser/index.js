"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,a,r,t){void 0===t&&(t=r);var n=Object.getOwnPropertyDescriptor(a,r);n&&("get"in n?a.__esModule:!n.writable&&!n.configurable)||(n={enumerable:!0,get:function(){return a[r]}}),Object.defineProperty(e,t,n)}:function(e,a,r,t){e[t=void 0===t?r:t]=a[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(a,e,r);return __setModuleDefault(a,e),a};Object.defineProperty(exports,"__esModule",{value:!0}),exports.unload=exports.load=exports.methods=void 0;let pkg=null;const tasks_1=require("./tasks"),fs_1=require("fs"),fs_extra_1=require("fs-extra"),path_1=require("path"),platforms_options_1=require("../share/platforms-options"),plugin_1=require("./plugin"),textureCompressConfig=__importStar(require("../share/texture-compress")),migration_1=require("./migration"),worker_1=require("./worker"),message_1=require("./message"),bundle_utils_1=require("../share/bundle-utils"),utils_1=require("../share/utils"),global_1=require("../share/global");let commandBuildResolve=null;const logLevelMap={error:1,warn:2,log:3,all:4};function load(){pkg=this,initManager().catch(e=>{console.error("init builder manager failed"),console.error(e)}).then(()=>{console.debug("init builder manager success")})}async function unload(){await tasks_1.manager.save(),await tasks_1.manager.destroy(),await worker_1.workerManager.destroy()}async function initManager(){await plugin_1.pluginManager.init(),await tasks_1.manager.init();var e=await Editor.Profile.getConfig("console","panel.filterType");await Editor.Profile.getConfig("builder","log.level")!==logLevelMap[e]&&Editor.Profile.setConfig("builder","log.level",logLevelMap[e]),await Editor.Profile.setProject("builder","splash-setting.logo.image",(0,path_1.join)(Editor.App.path,"builtin/builder/static/logo/logo.png").replace("app.asar","app.asar.unpacked"),"default")}exports.methods={async open(e="",...a){""===e||"default"===e?await Editor.Panel.has("builder")?(Editor.Message.send("builder","open-page",...a),Editor.Panel.focus("builder")):await Editor.Panel.open("builder",...a):Editor.Panel.open("builder."+e,...a)},openBundle(e){Editor.Panel.open("builder.build-bundle",e)},openWorkerDevTool:message_1.openWorkerDevTool,openPanelDevTools:message_1.openPanelDevTools,openDocs:message_1.openDocs,clearAllCache:message_1.clearAllCache,clearEngineCache:message_1.clearEngineCache,clearProjectAssetsCache:message_1.clearProjectAssetsCache,async createBuildPluginTemplate(){await Editor.Panel.open("extension.create",{selectedTemplate:{packageName:"builder",templatePath:"./build-plugin-template"}})},"query-worker-ready"(){return tasks_1.manager.workerReady},async"generate-preview-setting"(e){return e.platform=e.platform||"web-desktop",worker_1.workerManager.send("build-worker:generate-preview-setting",(new Date).getTime(),e)},"query-tasks-info"(a){const r={};Object.values(tasks_1.manager.map).map(e=>{a&&a.type&&e.type!==a.type||(r[e.id]=e.toJSON())});var e=Object.keys(r).sort().map(e=>r[e]);return{queue:r,list:e,free:tasks_1.manager.free}},async"add-task"(r,t){return r?new Promise(e=>{var a=tasks_1.manager.add("build",r,t?e:void 0);t||e(a)}):2},async"add-bundle-task"(a,e){return a?e?new Promise(e=>tasks_1.manager.add("bundle",a,e)):tasks_1.manager.add("bundle",a):2},async"recompile-task"(a,r,t){return new Promise(e=>{tasks_1.manager.recompile(a,r,t?e:void 0),t||e(36)})},async"remove-task"(e,a){return"string"==typeof e?tasks_1.manager.remove(e,a):Promise.all(e.map(e=>tasks_1.manager.remove(e,a)))},async"break-task"(e){await tasks_1.manager.break(e,"cancel")},"query-task"(e){return tasks_1.manager.queryTaskInfo(e)},"update-task"(e){return tasks_1.manager.updateTaskInfo(e)},async"save-task"(){return tasks_1.manager.save()},"copy-build-notice"(e){e&&Editor.Clipboard.write("text",e)},async migrateOptions(e){return await(0,migration_1.migrateOptions)(e),e},async"preview-pac"(e,a){return worker_1.workerManager.send("build-worker:preview-pac",e,a)},async"query-atlas-files"(e){return worker_1.workerManager.send("build-worker:query-atlas-files",e)},async"execute-build-stage"(e,a){e&&a&&await tasks_1.manager.add(e,a)},"command-build"(a,r=!1){return new Promise(async e=>{commandBuildResolve=e,worker_1.workerManager.debug(r);try{await(0,tasks_1.buildWithCommand)(a,e)}catch(e){console.error(e),commandBuildResolve(34)}})},async"programming:pack-build-end"(e){"editor"===e&&(tasks_1.manager.scriptReady=!0)},async createApplicationTemplate(){var e=(await Editor.Message.request("engine","query-engine-info")).typescript.builtin,e=(0,path_1.join)(e,"templates/launcher/application.ejs"),a=(0,path_1.join)(global_1.BuildGlobalInfo.buildTemplateDir,"common",(0,path_1.basename)(e));if((0,fs_1.existsSync)(a)&&1===(await Editor.Dialog.warn("Do you want to overwrite the source file?",{buttons:["Yes","Cancel"],default:0,cancel:1})).response)return;(0,fs_extra_1.copySync)(e,a),console.log(`builder ${Editor.I18n.t("builder.tips.create_application_template_success")}({link(${a})})`)},async"request-to-build-worker"(e,...a){return worker_1.workerManager.send(e,...a)},async"request-plugin-manager"(e,...a){return(0,utils_1.requestModule)(plugin_1.pluginManager,e,...a)},async"preferences-changed"(e,a){"log.level"===e&&worker_1.workerManager.send("build-worker:change-log-level",+a)},async"query-compress-config"(){var e=await Editor.Profile.getProject("builder","textureCompressConfig.customConfigs"),a=textureCompressConfig.formatsInfo,r={};if(e&&Object.keys(e).length)for(const t of Object.values(e))r[t.id]=Object.assign(Object.assign({},a[t.format]),{displayName:t.name,value:t.id,custom:!0});return Object.assign(Object.assign({},textureCompressConfig),{formatsInfo:Object.assign(Object.assign({},a),r),customFormats:r,platformConfig:plugin_1.pluginManager.getTexturePlatformConfigs()})},async"query-platform-config"(){return{order:platforms_options_1.PLATFORMS,config:plugin_1.pluginManager.platformConfig,native:platforms_options_1.NATIVE_PLATFORM}},async"preview-bundle-config"(e){return(0,bundle_utils_1.transformPlatformSettings)(e,plugin_1.pluginManager.bundleConfigs)},async"query-bundle-config"(){return(0,bundle_utils_1.genBundleRenderConfig)(plugin_1.pluginManager.bundleConfigs,plugin_1.pluginManager.platformMap)},"open-platform-debug-tools"(){Editor.Panel.open("builder.platform-debug-tools")},"create-build-template"(e){return plugin_1.pluginManager.createBuildTemplate(e)},async"asset-db:ready"(){tasks_1.manager.dbReady=!0},"asset-db:close"(){worker_1.workerManager.reset()},"console:update-log-level"(e){Editor.Profile.setConfig("builder","log.level",logLevelMap[e])},async"check-and-complete-options"(e){return plugin_1.pluginManager.checkOptions(e)}},exports.load=load,exports.unload=unload;