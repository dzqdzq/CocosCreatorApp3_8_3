"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.initEngineModules=exports.moduleConfigCache=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path");async function initEngineModules(e){e=(0,path_1.join)(e,"editor","engine-features","render-config.json");if((0,fs_extra_1.existsSync)(e)){const a=(0,fs_extra_1.readJSONSync)(e);if(a&&a.features){const d=a.categories,u={},l={},f=[];Object.keys(a.features).forEach(e=>{const o=e,t=a.features[o];s(t,o),t.category&&d[t.category]?(d[t.category].modules||(d[t.category].modules={}),d[t.category].modules[o]=t):exports.moduleConfigCache.moduleTreeDump.default[o]=t,t.options&&Object.keys(t.options).forEach(e=>{s(t.options[e],e),t.options[e].default&&(u[o]._option=e,u[o]._value=!0)})}),exports.moduleConfigCache.moduleTreeDump.categories=d,await Editor.Profile.setProject("engine","modules.includeModules",Array.from(new Set(f)).sort(),"default"),await Editor.Profile.setConfig("engine","modules.moduleConfig",l,"default"),await Editor.Profile.setConfig("engine","modules.flags",{},"default"),await Editor.Profile.setProject("engine","modules.cache",u,"default");var o,t,i,n,r,e=await Editor.Profile.getProject("engine","modules.cache","project");const c=await Editor.Profile.getProject("engine","modules.cache");function s(e,o){u[o]={_value:!!e.default},(exports.moduleConfigCache.features[o]=e).default&&f.push(o),e.cmakeConfig&&(l[o]={native:e.cmakeConfig}),e.isNativeModule&&exports.moduleConfigCache.nativeCodeModules.push(o),e.dependencies&&(exports.moduleConfigCache.moduleDependMap[o]=e.dependencies,e.dependencies.forEach(e=>{exports.moduleConfigCache.moduleDependedMap[e]=exports.moduleConfigCache.moduleDependedMap[e]||[],exports.moduleConfigCache.moduleDependedMap[e].push(o)}))}e&&(i=a.features,n=e=[],r=o={},Object.keys(i).forEach(e=>{var o=i[e],t=c[e];t&&t.flags&&(r[e]=t.flags),(t||o.default)&&(o.default&&!t&&o.required?n.push(e):(!o.default||t||o.required||(c[e]={_value:!1}),t&&(t._option?t._value&&n.push(t._option):t._value&&n.push(e))))}),t=await Editor.Profile.getProject("engine","modules.includeModules"),e=Array.from(new Set(e)),JSON.stringify(t)!==JSON.stringify(e)&&await Editor.Profile.setProject("engine","modules.includeModules",e.sort()),t=await Editor.Profile.getProject("engine","modules.flags"),JSON.stringify(t)!==JSON.stringify(o))&&await Editor.Profile.setProject("engine","modules.flags",o)}else console.error("render-config.json is not exist in engine!")}else console.error("render-config.json is not exist in engine!")}exports.moduleConfigCache={moduleDependMap:{},moduleDependedMap:{},nativeCodeModules:[],features:{},moduleTreeDump:{default:{},categories:{}}},exports.initEngineModules=initEngineModules;