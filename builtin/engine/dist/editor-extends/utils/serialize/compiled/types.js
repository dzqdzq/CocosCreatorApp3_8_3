"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CustomClassNode=exports.ClassNode=exports.DictNode=exports.ArrayNode=exports.Node=exports.TraceableDict=exports.TraceableItem=void 0;const cc_1=require("cc"),{DICT_JSON_LAYOUT,CLASS_TYPE,CLASS_KEYS,CLASS_PROP_TYPE_OFFSET,CUSTOM_OBJ_DATA_CONTENT,MASK_CLASS}=cc_1.deserialize._macros;class TraceableItem{static compareByRefCount(e,s){return s.tracers.length-e.tracers.length}constructor(){this.result=TraceableItem.NO_RESULT,this.tracers=[],this.keys=[]}traceBy(e,s){this.tracers.push(e),this.keys.push(s)}movedTo(s){for(let e=0;e<this.tracers.length;e++)this.tracers[e][this.keys[e]]=s}}(exports.TraceableItem=TraceableItem).NO_RESULT=Object.create(null);class TraceableDict{constructor(){this.values=new Map}trace(e,s,t){let r=this.values.get(e);return r||(r=new TraceableItem,this.values.set(e,r)),r.traceBy(s,t),r}traceString(e,s,t){this.trace(e,s,t).result=e}get(e){return this.values.get(e)}getSortedItems(){var e=Array.from(this.values.values());return e.sort(TraceableItem.compareByRefCount),e}dump(s=0){var t=this.getSortedItems();for(let e=0;e<t.length;e++)t[e].movedTo(s+e);return t.map(e=>e.result)}}(exports.TraceableDict=TraceableDict).PLACEHOLDER=0;class Node{get instanceIndex(){return this._index}set instanceIndex(e){if(this.indexed)throw new Error("Should not change instanceIndex on indexed object");this._index=e}get refType(){return this.indexed?1:this.selfType}static compareByRefCount(e,s){return s.refCount-e.refCount}constructor(e){this.refCount=0,this.indexed=!1,this.shouldBeIndexed=!1,this._index=-1,this.selfType=e}setStatic(e,s,t){}setDynamic(e,s){++e.refCount}setAssetRefPlaceholderOnIndexed(e){}dumpRecursively(e){}}(exports.Node=Node).AssetPlaceholderType=0,Node.AssetPlaceholderValue=null;class ArrayNode extends Node{constructor(e){super(12),this.types=new Array(e),this.datas=new Array(e)}setStatic(e,s,t){this.types[e]=s,this.datas[e]=t}setDynamic(e,s){super.setDynamic(e),this.types[s]=void 0,this.datas[s]=e}setAssetRefPlaceholderOnIndexed(e){this.types[e]=Node.AssetPlaceholderType,this.datas[e]=Node.AssetPlaceholderValue}dumpRecursively(s){for(let e=0;e<this.datas.length;++e){var t,r=this.datas[e];r instanceof Node&&(r.indexed?(t=s.addRef(this,e,r),isFinite(t)?(this.types[e]=1,this.datas[e]=t):(this.types[e]=0,this.datas[e]=null)):(r.instanceIndex=this.instanceIndex,t=r.dumpRecursively(s),this.types[e]=r.refType,this.datas[e]=t))}for(let e=0;e<ArrayNode.DeriveTypes.length;++e){const[a,i]=ArrayNode.DeriveTypes[e];if(this.types.every(e=>e===a))return this.selfType=i,this.datas}return this.selfType=12,[this.datas,...this.types]}}(exports.ArrayNode=ArrayNode).DeriveTypes=[[0,0],[4,9],[6,3],[1,2]];class DictNode extends Node{constructor(){super(11),this.data=[null],this.json=Object.create(null),this.dynamics=Object.create(null),this.data[DICT_JSON_LAYOUT]=this.json}setStatic(e,s,t){0===s?this.json[e]=t:this.data.push(e,s,t)}setDynamic(e,s){super.setDynamic(e),this.dynamics[s]=e}dumpRecursively(e){for(const r in this.dynamics){var s,t=this.dynamics[r];t.indexed?(s=e.addRef(this,r,t),isFinite(s)&&this.data.push(r,1,s)):(t.instanceIndex=this.instanceIndex,s=t.dumpRecursively(e),0===t.refType?this.json[r]=s:this.data.push(r,t.refType,s))}return 1===this.data.length?(this.selfType=0,this.json):this.data}}exports.DictNode=DictNode;class ClassNode extends Node{static fromData(s,t,r){var e=s[CLASS_TYPE],a=new ClassNode(e),i=(a.dumped=r,a.simpleValues=null,s[CLASS_KEYS]),d=s[CLASS_PROP_TYPE_OFFSET],n=t[t.length-1];let o=MASK_CLASS+1;for(;o<n;++o){var c=i[t[o]];a.simpleKeys.push(c)}for(let e=n;e<r.length;++e){var h=i[t[e]],l=s[t[e]+d];a.advanceds.push(h,l)}return a}constructor(e){super(4),this.simpleKeys=new Array,this.simpleValues=[],this.advanceds=new Array,this.ctor=e}setStatic(e,s,t){0===s?(this.simpleKeys.push(e),this.simpleValues.push(t)):this.advanceds.push(e,s,t)}setDynamic(e,s){super.setDynamic(e),this.advanceds.push(s,void 0,e)}dumpRecursively(s){var t=this.advanceds;for(let e=t.length-3;0<=e;e-=3){var r,a=t[e+2];a instanceof Node&&(a.indexed?(r=s.addRef(this,t[e],a),isFinite(r)?(t[e+1]=1,t[e+2]=r):t.splice(e,3)):(a.instanceIndex=this.instanceIndex,r=a.dumpRecursively(s),0===a.refType?(this.simpleKeys.push(t[e]),this.simpleValues.push(r),t.splice(e,3)):(t[e+1]=a.refType,t[e+2]=r)))}var e=TraceableDict.PLACEHOLDER;this.dumped=[e].concat(this.simpleValues);for(let e=0;e<t.length;e+=3)this.dumped.push(t[e+2]);return this.simpleValues=null,this.advanceds=this.advanceds.filter((e,s)=>s%3!=2),this.dumped}}exports.ClassNode=ClassNode;class CustomClassNode extends Node{static fromData(e,s){var t=s[CUSTOM_OBJ_DATA_CONTENT],e=new CustomClassNode(e,t);return e.dumped=s,e}constructor(e,s){super(10),this.ctor=e,this.content=s}setStatic(e,s,t){throw new Error("Should not set property of CustomClass")}setDynamic(e,s){throw new Error("Should not set property of CustomClass")}dumpRecursively(e){var s=TraceableDict.PLACEHOLDER;return this.dumped=[s,this.content],this.dumped}}exports.CustomClassNode=CustomClassNode;