"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.findRootObject=exports.setName=exports.asAsset=void 0;const cc_1=require("cc"),base_builder_1=require("./base-builder");class DynamicBuilder extends base_builder_1.Builder{constructor(e){super(e),this.serializedList=[],this.forceInline=!!e.forceInline}setProperty_Array(e,r,t,s){return this.addObject(s.writeOnlyArray,r,t,s.formerlySerializedAs,!1)}setProperty_Dict(e,r,t,s){return this.addObject({},r,t,null==s?void 0:s.formerlySerializedAs,!1)}addObject(e,r,t,s,i){let a=-1,d=e;return(!this.forceInline&&i||!r)&&(a=this.serializedList.length,this.serializedList.push(e),this.forceInline||(d={__id__:a})),r&&(r.data[t]=d,s)&&(r.data[s]=d),{data:e,id:a}}setProperty_Class(e,r,t,s){var i={__type__:s.type};return this.addObject(i,r,t,s.formerlySerializedAs,!(null!=(i=s.uniquelyReferenced)&&i))}setProperty_CustomizedClass(e,r,t,s){var i={__type__:s.type,content:s.content};return this.addObject(i,r,t,s.formerlySerializedAs,!0)}setProperty_ParsedObject(e,r,t,s){!this.forceInline&&0<=t.id?e.data[r]={__id__:t.id}:e.data[r]=t.data,s&&(e.data[s]=e.data[r])}setProperty_Raw(e,r,t,s,i){r.data[t]=s,null!=i&&i.formerlySerializedAs&&(r.data[i.formerlySerializedAs]=s)}setProperty_ValueType(e,r,t,s,i){var a={__type__:cc_1.js.getClassId(s,!1)},d=s.constructor.__values__;if(d)for(let e=0;e<d.length;e++){var l=d[e];a[l]=s[l]}return r?(r.data[t]=a,null!=i&&i.formerlySerializedAs&&(r.data[i.formerlySerializedAs]=a),{data:a,id:-1}):(this.serializedList.push(a),{data:a,id:0})}setProperty_TypedArray(e,r,t,s,i){let a;var d,l;a=this.hasBinaryBuffer?((d=s instanceof DataView)||this.mainBufferBuilder.alignAs(s.constructor.BYTES_PER_ELEMENT),l=this.mainBufferBuilder.append(s),{__type__:"TypedArrayRef",ctor:s.constructor.name,offset:l,length:d?s.byteLength:s.length}):{__type__:"TypedArray",ctor:s.constructor.name,array:Array.from(s)},r?(r.data[t]=a,null!=i&&i.formerlySerializedAs&&(r.data[i.formerlySerializedAs]=a)):this.serializedList.push(a)}setProperty_AssetUuid(e,r,t,s,i){r.data[t]={__uuid__:s},null!=i&&i.formerlySerializedAs&&(r.data[i.formerlySerializedAs]=r.data[t]),null!=i&&i.expectedType&&(r.data[t].__expectedType__=i.expectedType)}setRoot(e){console.assert(0===e.id,"Wrong root object to serialize, id is "+e.id)}finalizeJsonPart(){var e=this.serializedList;let r;return r=1!==e.length||Array.isArray(e[0])?e:e[0]}}function asAsset(e,r=cc_1.Asset){return e?((r=new r)._uuid=e,r):((0,cc_1.error)("[EditorExtends.serialize.asAsset] The uuid must be non-nil!"),null)}function setName(e,r){Array.isArray(e)?e[0]._name=r:e._name=r}function findRootObject(r,t){if(Array.isArray(r))for(let e=0;e<r.length;e++){var s=r[e];if(s.__type__===t)return s}else if(r.__type__===t)return r;return null}exports.default=DynamicBuilder,exports.asAsset=asAsset,exports.setName=setName,exports.findRootObject=findRootObject;