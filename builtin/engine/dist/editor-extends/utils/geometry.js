"use strict";function forEachFace(t,e,a){let i=0;var c=[];switch(e){case ccm.gfx.PrimitiveMode.TRIANGLE_LIST:i=t.length/3;for(let e=0;e<i;e++)c[0]=t[3*e],c[1]=t[3*e+1],c[2]=t[3*e+2],a(c);break;case ccm.gfx.PrimitiveMode.TRIANGLE_STRIP:i=t.length-2;let r=0;for(let e=0;e<i;e++)c[0]=t[e-r],c[1]=t[e+r+1],c[2]=t[e+2],a(c),r=~r;break;case ccm.gfx.PrimitiveMode.TRIANGLE_FAN:i=t.length-1;var o=t[0];for(let e=1;e<i;e++)c[0]=o,c[1]=t[e],c[2]=t[e+1],a(c);break;case ccm.gfx.PrimitiveMode.LINE_LIST:i=t.length/2;for(let e=0;e<i;e++)c[0]=t[2*e],c[1]=t[2*e+1],a(c);break;case ccm.gfx.PrimitiveMode.LINE_STRIP:i=t.length-1;for(let e=0;e<i;e++)c[0]=t[e],c[1]=t[e+1],a(c);break;case ccm.gfx.PrimitiveMode.LINE_LOOP:i=t.length;for(let e=0;e<i;e++)c[0]=t[e],c[1]=t[e+1===i?0:e+1],a(c);break;case ccm.gfx.PrimitiveMode.POINT_LIST:i=t.length;for(let e=0;e<i;e++)c[0]=t[e],a(c)}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getUintArrayCtor=exports.splitBasedOnJoints=exports.MeshSplitInfo=exports.forEachFace=exports.calculateTangents=exports.calculateNormals=void 0,exports.calculateNormals=(()=>{const f=cc["Vec3"],m=new f,d=new f,x=new f,I=new f,g=new f,y=new f;return(r,t,a=[])=>{var i=t.length/3,c=r.length/3,o=Array(3*c).fill(0).map(()=>new f);for(let e=0;e<i;++e){var n=t[3*e+0],l=t[3*e+1],s=t[3*e+2];f.fromArray(m,r,3*n),f.fromArray(d,r,3*l),f.fromArray(x,r,3*s),f.subtract(I,d,m),f.subtract(g,x,m),f.cross(y,I,g),f.add(o[n],o[n],y),f.add(o[l],o[l],y),f.add(o[s],o[s],y)}for(let e=0;e<c;++e)f.toArray(a,f.normalize(y,o[e]),3*e);return a}})(),exports.calculateTangents=(()=>{const{Vec2:p,Vec3:u}=cc,A=new u,S=new u,h=new u,v=new u,T=new u,E=new p,P=new p,L=new p,M=new u,w=new u,N=new u,_=new u;return(t,a,r,i,c=[])=>{var e=a.length/3,o=t.length/3,n=Array(o).fill(0).map(()=>new u),l=Array(o).fill(0).map(()=>new u);for(let r=0;r<e;++r){var s=a[3*r+0],f=a[3*r+1],m=a[3*r+2],d=(u.fromArray(A,t,3*s),u.fromArray(S,t,3*f),u.fromArray(h,t,3*m),p.fromArray(E,i,2*s),p.fromArray(P,i,2*f),p.fromArray(L,i,2*m),u.subtract(v,S,A),u.subtract(T,h,A),P.x-E.x),x=L.x-E.x,I=P.y-E.y,g=L.y-E.y;let e=d*g-x*I;0!==e&&(e=1/e),u.multiplyScalar(M,u.subtract(N,u.multiplyScalar(N,v,g),u.multiplyScalar(_,T,I)),e),u.multiplyScalar(w,u.subtract(N,u.multiplyScalar(N,T,d),u.multiplyScalar(_,v,x)),e),u.add(n[s],n[s],M),u.add(n[f],n[f],M),u.add(n[m],n[m],M),u.add(l[s],l[s],w),u.add(l[f],l[f],w),u.add(l[m],l[m],w)}for(let e=0;e<o;++e){const M=n[e],w=l[e];var y=u.fromArray(N,r,3*e);u.subtract(_,M,u.multiplyScalar(_,y,u.dot(M,y)/u.dot(y,y))),0==u.dot(_,_)&&(y.x||y.z?u.set(_,y.z,0,-y.x):u.set(_,0,y.x,-y.y)),u.toArray(c,u.normalize(_,_),4*e),c[4*e+3]=0<u.dot(u.cross(_,w,M),y)?1:-1}return c}})(),exports.forEachFace=forEachFace;class MeshSplitInfo{constructor(e=ccm.gfx.PrimitiveMode.TRIANGLE_LIST){this.indices=[],this.jointSet=new Set,this.primitiveMode=e}}function getUintArrayCtor(e){return e<1<<8*Uint8Array.BYTES_PER_ELEMENT?Uint8Array:e<1<<8*Uint16Array.BYTES_PER_ELEMENT?Uint16Array:Uint32Array}exports.MeshSplitInfo=MeshSplitInfo,exports.splitBasedOnJoints=(c,e,r,o)=>{let n;switch(r){case ccm.gfx.PrimitiveMode.TRIANGLE_LIST:case ccm.gfx.PrimitiveMode.TRIANGLE_STRIP:case ccm.gfx.PrimitiveMode.TRIANGLE_FAN:n=ccm.gfx.PrimitiveMode.TRIANGLE_LIST;break;case ccm.gfx.PrimitiveMode.LINE_LIST:case ccm.gfx.PrimitiveMode.LINE_STRIP:case ccm.gfx.PrimitiveMode.LINE_LOOP:n=ccm.gfx.PrimitiveMode.LINE_LIST;break;case ccm.gfx.PrimitiveMode.POINT_LIST:n=ccm.gfx.PrimitiveMode.POINT_LIST}if(void 0===n)return[];const l=[new MeshSplitInfo(n)];let s=l[0];return forEachFace(e,r,e=>{!function(r,t,a,e){let i=0;for(let e=0;e<a.length;e++){var c=a[e];for(let e=0;e<4;e++)r.jointSet.has(t[4*c+e])||i++}return r.jointSet.size+i<=e}(s,c,e,o)&&(s=new MeshSplitInfo(n),l.push(s));var r=s,t=c,a=e;for(let e=0;e<a.length;e++){var i=a[e];for(let e=0;e<4;e++)r.jointSet.add(t[4*i+e]);r.indices.push(i)}}),l},exports.getUintArrayCtor=getUintArrayCtor;