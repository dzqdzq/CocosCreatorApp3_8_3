"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.unload=exports.load=exports.methods=void 0;const path_1=require("path"),fs_extra_1=require("fs-extra"),plugin_1=require("./plugin");async function load(){await plugin_1.pluginManager.init()}function unload(){plugin_1.pluginManager.destroy()}exports.methods={async openSettings(e,...r){await Editor.Panel.has("preferences.settings")?(Editor.Message.send("preferences","change-settings-tab",e,...r),Editor.Panel.open("preferences.settings")):await Editor.Panel.has("scene")&&!await Editor.Task.__protected__.hasSyncTask()?Editor.Panel.openBeside("scene","preferences.settings",e,...r):Editor.Panel.open("preferences.settings",e,...r)},async queryConfig(e,r,t){return plugin_1.pluginManager.hasRegisterPackages.has(e)?Editor.Profile.getConfig(e,r,t):null},async setConfig(e,r,t,n){return!!plugin_1.pluginManager.hasRegisterPackages.has(e)&&(await Editor.Profile.setConfig(e,r,t,n),!0)},async queryConfigsFromPath(e,r=0){try{var t;if((0,fs_extra_1.existsSync)(Editor.UI.__protected__.File.resolveToRaw(e)))return t=(0,fs_extra_1.readJSONSync)(e),await plugin_1.pluginManager.handleQueryConfigs(t);throw new Error("The file path to query config does not exist!")}catch(e){console.error("Query preferences config failed! ",e)}},async importConfig(e){if(!e){var r=await Editor.Dialog.select({title:Editor.I18n.t("preferences.menu.importConfig"),type:"file",multi:!1,filters:[{name:"JSON",extensions:["json"]}]});if(!r.filePaths||!r.filePaths[0])return;e=r.filePaths[0]}try{if(!(0,fs_extra_1.existsSync)(Editor.UI.__protected__.File.resolveToRaw(e)))throw new Error("The file path to import config does not exist!");var t=(0,fs_extra_1.readJSONSync)(e),n=(await plugin_1.pluginManager.handleImportConfigs(t),console.log("Import preferences config success!"),await Editor.Message.request("preferences","query-settings-tab"));n&&Editor.Message.send("preferences","refresh-settings-tab",n)}catch(e){console.error("Import preferences config failed! ",e)}},async exportConfig(e){var r=await plugin_1.pluginManager.handleExportConfigs();if(!e){var t=await Editor.Dialog.save({title:Editor.I18n.t("preferences.menu.exportConfig"),path:(0,path_1.join)(Editor.Project.path,"preferences-configs.json"),filters:[{name:"JSON",extensions:["json"]}]});if(!t.filePath)return;e=t.filePath}try{if(!(0,fs_extra_1.existsSync)(Editor.UI.__protected__.File.resolveToRaw((0,path_1.dirname)(e))))throw new Error("The file path to export config does not exist!");(0,fs_extra_1.outputFileSync)(e,JSON.stringify(r,null,2)),console.log(`Preferences config has exported in {link[${e}](${e})}`)}catch(e){console.error("Export preferences config failed!",e)}},queryPreferencesConfigs(){return plugin_1.pluginManager.configs}},exports.load=load,exports.unload=unload;