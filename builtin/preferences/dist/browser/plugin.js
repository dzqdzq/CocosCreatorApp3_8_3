"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.pluginManager=void 0;const lodash_1=require("lodash"),path_1=require("path");class PluginManager{constructor(){this.configs={},this.customHandlers={},this.hasRegisterPackages=new Set}async init(){var e=Editor.Package.getPackages({enable:!0});await Promise.all(e.map(e=>register(e))),Editor.Package.__protected__.on("enable",register),Editor.Package.__protected__.on("disable",unRegister)}async handleExportConfigs(){var e={};for(const s in this.configs){var o=this.configs[s].properties||{},r=this.configs[s].laboratory||[];if(this.configs[s].properties||this.configs[s].laboratory){var t={__version__:this.configs[s].version};for(const l in o){var i=await Editor.Profile.getConfig(s,l,"local"),i=null!=i?"local":"global";t.properties=t.properties||{},t.properties[l]={type:i,value:"local"==i?await Editor.Profile.getConfig(s,l,i):await Editor.Profile.getConfig(s,l)}}for(let e=0;e<r.length;e++)t.laboratory=t.laboratory||{},t.laboratory[r[e].path]={type:"global",value:await Editor.Profile.getConfig(s,r[e].path)};e[s]=t}}for(const c in this.customHandlers){e[c]&&e[c].__version__||(e[c]={__version__:this.configs[c].version});var a=this.customHandlers[c];if(a.exportConfig)try{var n=await a.exportConfig.call(a)||{};Array.isArray(n)||"object"!=typeof n||(e[c]=Object.assign({},e[c],{custom:n}))}catch(e){console.debug("[Export Preferences Configs] Handle custom export error in "+c,e)}}return e}async handleImportConfigs(e){for(const n in e)if("object"==typeof e[n])if(e[n].__version__){if(e[n].__version__===this.configs[n].version&&(i=e[n].__version__,(a=convertToProfileConfigs(e[n])).global&&await Editor.Profile.__protected__.migrateGlobal(n,i,a.global),a.local&&await Editor.Profile.__protected__.migrateLocal(n,i,a.local),syncMigrateConfigs(e[n],a)),e[n].properties){var o,r=e[n].properties;for(const s in r)void 0!==r[s].value&&this.configs[n].properties&&this.configs[n].properties[s]&&(o=r[s].type||"global",await Editor.Profile.setConfig(n,s,r[s].value,o))}if(e[n].laboratory){var t=e[n].laboratory;for(const l in t)void 0!==t[l].value&&this.configs[n].laboratory&&this.configs[n].laboratory.find(e=>e.path===l)&&await Editor.Profile.setConfig(n,l,t[l].value,"global")}if(e[n].custom){var i=e[n].custom,a=this.customHandlers[n];if("object"==typeof i&&a.importConfig)try{await a.importConfig.call(a,i)}catch(e){console.debug("[Import Preferences Configs] Handle custom import error in "+n,e)}}}else console.warn(`[Import Preferences Configs] ${n} Plugin config without version`)}async handleQueryConfigs(e){var o,r,t={};for(const i in e)"object"==typeof e[i]&&(e[i].__version__?(o=convertToProfileConfigs(e[i]),e[i].__version__===this.configs[i].version&&(r=e[i].__version__,o.global&&await Editor.Profile.__protected__.migrateGlobal(i,r,o.global),o.local)&&await Editor.Profile.__protected__.migrateLocal(i,r,o.local),t[i]=(0,lodash_1.merge)(o.global,o.local)):console.warn(`[${i}] Plugin config without version`));return t}destroy(){Editor.Package.__protected__.removeListener("enable",register),Editor.Package.__protected__.removeListener("disable",unRegister)}}exports.pluginManager=new PluginManager;const register=async function(o){if(!o||o.invalid||!o.info||!o.info.contributions||!o.info.contributions.preferences||!o.info.contributions.profile)return!1;exports.pluginManager.hasRegisterPackages.add(o.name);try{var e=o.info.contributions.preferences;const i=o.info.contributions.profile;var r={title:o.info.title||o.name,properties:null,custom:e.custom?(0,path_1.join)(o.path,e.custom):"",laboratory:e.laboratory?e.laboratory.map(e=>i.editor&&i.editor[e]?{path:e,label:i.editor[e].label,description:i.editor[e].description}:(console.warn(`The data is not defined.
  package: ${o.name}
  key: `+e),null)):null,version:o.version};if(e.properties)for(const a in e.properties)i.editor&&i.editor[a]?(r.properties=r.properties||{},r.properties[a]={label:i.editor[a].label,description:i.editor[a].description,render:e.properties[a]}):console.warn(`The data is not defined.
  package: ${o.name}
  key: `+a);if(e.custom)try{var t=Editor.Module.__protected__.requireFile((0,path_1.join)(o.path,e.custom));(t.exportConfig||t.importConfig)&&(exports.pluginManager.customHandlers[o.name]=t)}catch(e){console.log(o.name+": register custom preferences failed."),console.error(e)}exports.pluginManager.configs[o.name]=r,await Editor.Panel.has("preferences.settings")&&Editor.Message.broadcast("preferences:packages-changed")}catch(e){console.log(o.name+": register default preferences failed."),console.error(e)}},unRegister=async function(e){if(!exports.pluginManager.hasRegisterPackages.has(e.name))return!1;exports.pluginManager.hasRegisterPackages.delete(e.name),delete exports.pluginManager.configs[e.name],delete exports.pluginManager.customHandlers[e.name],await Editor.Panel.has("preferences.settings")&&Editor.Message.broadcast("preferences:packages-changed")},convertToProfileConfigs=function(r){const t={};var o=["properties","laboratory","custom"];for(let e=0;e<o.length;e++){var i=o[e];if(r[i])for(const l in r[i]){a=void 0;n=void 0;s=void 0;var a=l;var n=r[i][l];var s=a.split(".").reverse();let o={[s[0]]:n.value};for(let e=1;e<s.length;e++)o={[s[e]]:o};"global"===n.type?(t.global=t.global||{__version:r.__version__},t.global=(0,lodash_1.merge)(t.global,o)):"local"===n.type&&(t.local=t.local||{__version:r.__version__},t.local=(0,lodash_1.merge)(t.local,o))}}return t},syncMigrateConfigs=function(t,i){var o=["properties","laboratory","custom"];for(let e=0;e<o.length;e++){var a=o[e];if(t[a])for(const g in t[a]){n=void 0;s=void 0;l=void 0;c=void 0;var n=g;var s=a;var l=t[a][g].type;var c=n.split(".");let o=i[l]||{},r=!0;for(let e=0;e<c.length;e++){if(void 0===o[c[e]]||null==o[c[e]]){delete t[s][n],r=!1;break}o=o[c[e]]}r&&o!==t[s][n].value&&(t[s][n].value=o)}}};