"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const metrics_observer_base_1=require("./metrics-observer-base"),log_1=require("../libs/log"),encrypt=require("./cocos-encrypt"),uuid=require("node-uuid");function createParam(e,t){return{appVersion:Editor.App.version,versionCode:"v1",uniqueID:t.uid,appID:"681395864",channelID:"100000",platform:"darwin"===process.platform?"Mac":"Windows",engine:"electron",userID:t.uid,resolution:t.resolution||"unknown",scaleFactor:t.scaleFactor||"1",osVersion:require("os").version(),manufacturer:"",store:"unknown",age:0,sex:0,callNumber:t.useTestServer?"demo.cocos.com":"creator.cocos.com",model:null,msgID:uuid.v4(),chargeTime:String(Date.now()/1e3|0),language:Editor.I18n.getLanguage()||"unknown"}}async function sendData(e,t,o=!1){var n=Date.now();o&&log_1.logMgr.collectToFile("send cocos analytics: "+n,t);try{await Editor.Network.post(e,t),o&&log_1.logMgr.collectToFile("send cocos analytics done: "+n,t)}catch(e){o&&log_1.logMgr.collectToFile("send cocos analytics fail: "+n,e)}}class CocosMetricsObserver extends metrics_observer_base_1.MetricsObserverBase{constructor(){super(),this._caURL="https://logstorage.cocos.com/log/v2?"}trackEvent(e,t){t.cid?e.sendToCocosAnalyticsOnly||e.sendToNewCocosAnalyticsOnly?this.trackCocosEvent(e,t):this.trackNormalEvent(e,t):console.debug("Metrics: no valid client ID")}trackNormalEvent(e,t){var o=Object.assign({},e.opts||e.value||{});o.action=e.action,e.label&&(o.label=e.label);let n="succeed";e.opts&&e.opts.eventTag&&(n=e.opts.eventTag,delete o.eventTag);var a=createParam(e,t);a.eventID=e.category,a.eventValue=o,a.eventTag=n,e.exitTag&&(a.exitTag=e.exitTag,a.eventTag=e.exitTag),e.onlineDuration&&(a.onlineDuration=e.onlineDuration),delete e.onlineDuration,t.debug&&console.debug("send cocos analytics ---\x3e",JSON.stringify(a)),sendData(this._caURL,encodeURIComponent(encrypt.encryptPostData(JSON.stringify(a))),t.debug)}trackCocosEvent(e,t){var o,n;e.sendToNewCocosAnalyticsOnly?(delete e.sendToCocosAnalyticsOnly,this.trackNewCocosEvent(e,t)):e.eventId?(delete e.sendToCocosAnalyticsOnly,o=createParam(e,t),e.store&&(o.store=e.store,delete e.store),e.packageName&&(o.packageName=e.packageName,delete e.packageName),n=e.eventId,delete e.eventId,o.eventID=n,o.eventValue=e,o.eventTag="succeed",e.onlineDuration&&(o.onlineDuration=e.onlineDuration),delete e.onlineDuration,t.debug&&console.debug("send cocos analytics ---\x3e",JSON.stringify(o)),sendData(this._caURL,encodeURIComponent(encrypt.encryptPostData(JSON.stringify(o))),t.debug)):console.debug("Metrics: no valid eventId")}trackNewCocosEvent(e,t){delete e.sendToNewCocosAnalyticsOnly;var o=createParam(e,t);o.eventID=e.category,o.eventValue=e.value,o.eventValue&&e.projectID&&(o.eventValue.projectID=e.projectID),t.debug&&console.debug("send cocos analytics ---\x3e",JSON.stringify(o)),o.eventTag="successed",sendData(this._caURL,encodeURIComponent(encrypt.encryptPostData(JSON.stringify(o))),t.debug)}trackException(e,t){var o;t.cid?((o=createParam({},t)).eventID="exception",o.eventValue={code:e.code,desc:e.message},o.eventTag="succeed",sendData(this._caURL,encodeURIComponent(JSON.stringify(o)),t.debug)):console.debug("Metrics: no valid client ID")}sendAppInfo(e){}close(e){}async _trackCrashEvent(e,t){try{var o=createParam(e,t),n=(o.eventID=e.category,o.eventValue=e.value,o.eventValue&&e.projectID&&(o.eventValue.projectID=e.projectID),t.debug&&console.debug("send cocos analytics ---\x3e",JSON.stringify(o)),o.eventTag="successed",encodeURIComponent(encrypt.encryptPostData(JSON.stringify(o))));return t.debug&&console.debug("receive cocos analytics data --\x3e",n),await Editor.Network.post(this._caURL,n),o}catch(e){throw t.debug&&console.debug("send cocos analytics data fail",e),e}}}module.exports=new CocosMetricsObserver;