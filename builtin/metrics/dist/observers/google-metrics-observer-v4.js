"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const metrics_observer_base_1=require("./metrics-observer-base"),MeasurementId="G-JXC4Z86YBG",ApiSecret="OtGhpiWGSCmHl0xjL1P5TQ",QueryParams=`?&measurement_id=${MeasurementId}&api_secret=`+ApiSecret,HOST="www.google-analytics.com",PATH="/mp/collect"+QueryParams,Debug_PATH="/debug/mp/collect"+QueryParams,request_1=require("./request"),log_1=require("../libs/log"),headers={"Content-Type":"application/json","User-Agent":""};class GoogleMetricsObserver extends metrics_observer_base_1.MetricsObserverBase{constructor(){super(...arguments),this.DEBUG=!1,this.session_id="",this.time=Date.now()}trackEvent(e,t){var s,r;e.sendToCocosAnalyticsOnly||e.sendToNewCocosAnalyticsOnly||(t.cid?e.category?(s=e.category,delete(r=Object.assign({},e)).category,this.sendToGA4(this.createNewData(t,[this.createNewEvent(s+"_"+e.action,r)]))):console.debug("Metrics: no valid info. trackEventInfo: ",e):console.debug("Metrics: no valid client ID, trackEventInfo: ",e))}trackException(e,t){t.cid?this.sendToGA4(this.createNewData(t,[this.createNewEvent("exception",{description:e.code+"-"+e.message,fatal:!0})])):console.debug("Metrics: no valid client ID, trackEventInfo: ",t)}sendAppInfo(e){this.DEBUG=e.debug||!1;var{App:t,I18n:s}=this.getEditor(),e=(headers["User-Agent"]=t.userAgent,this.time=Date.now(),this.session_id=e.uid+"_"+this.time,this.createNewData(e,[this.createNewEvent("app_info",{engagement_time_msec:0,tid:MeasurementId,app_name:"CocosCreator",app_id:"com.cocos.creator",app_version:t.version,screen_resolution:e.resolution||"unknown",scale_factor:e.scaleFactor||"1",language:s.getLanguage()||"unknown",user_agent:t.userAgent,arch:process.arch,operating_system:{darwin:"Macintosh",win32:"Windows",linux:"Linux"}[process.platform]||process.platform})]));this.sendToGA4(e)}close(e){e=this.createNewData(e,[this.createNewEvent("close",{})]);this.sendToGA4(e)}getEditor(){return Editor}createNewData(e,t){return{client_id:e.cid+"",user_id:e.uid+"",timestamp_micros:1e3*Date.now()+"",events:t||[]}}createNewEvent(e,t){return{name:(e=e.replace(/ +/g,"")).replace(/[^A-Za-z0-9_]/g,"_"),params:Object.assign({session_id:this.session_id,engagement_time_msec:Date.now()-this.time},t)}}sendToGA4(e){this.DEBUG&&console.debug("start analytics... ",JSON.stringify(e)),this.DEBUG?this.sendToDebugGA4(e):this.sendToNormalGA4(e)}sendToNormalGA4(s){var e={method:"POST",protocol:"https",host:HOST,path:PATH,headers:headers,data:JSON.stringify(s),useStringifyData:!1};const r=Date.now();this.DEBUG&&log_1.logMgr.collectToFile("[send analytics ga4]: "+r,s),(0,request_1.sendHttpRequest)(e,(e,t)=>{e?this.DEBUG&&log_1.logMgr.collectToFile("[send analytics ga4 fail]: "+r,e):this.DEBUG&&log_1.logMgr.collectToFile("[send analytics ga4 done]: "+r,s)})}sendToDebugGA4(r){var e={method:"POST",protocol:"https",host:HOST,path:Debug_PATH,headers:headers,data:JSON.stringify(r),useStringifyData:!1};(0,request_1.sendHttpRequest)(e,(e,t)=>{try{var s;e?console.debug(e):!(s=JSON.parse(t).validationMessages)||0<s.length?console.debug(`sending failure.
`,s,JSON.stringify(r)):this.sendToNormalGA4(r)}catch(e){console.debug("sending failure. \n",`error: 
`,e,`content: 
`,t)}})}}module.exports=new GoogleMetricsObserver;