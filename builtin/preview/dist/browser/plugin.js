"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.pluginManager=void 0;const path_1=require("path"),lodash=require("lodash");class PluginManager{constructor(){this.configs={},this.supportPreviewTypes=["browser","game-view","simulator"],this.supportDataType=["settings","renderData"],this.hasRegisterPackages=new Set}async init(){var e=Editor.Package.getPackages({enable:!0});await Promise.all(e.map(e=>this.register(e))),Editor.Package.__protected__.on("enable",e=>this.register(e)),Editor.Package.__protected__.on("disable",e=>this.unregister(e))}async register(t){if(!t||!t.info||this.hasRegisterPackages.has(t.name)||!t.enable||!t.info.contributions||"object"!=typeof t.info.contributions.preview)return!1;this.hasRegisterPackages.add(t.name);const o=t.info.contributions.preview;if(o["*"])for(const e of this.supportPreviewTypes)await this.internalRegister(e,t.name,t.path,o["*"]);Object.keys(o).forEach(e=>{"*"!==e&&this.internalRegister(e,t.name,t.path,o[e])})}async internalRegister(t,o,e,s){try{var r;s&&s.methods&&((0,path_1.isAbsolute)(s.methods)||(s.methods=(0,path_1.join)(e,s.methods)),(r=Editor.Module.__protected__.requireFile(s.methods)).load&&await r.load(),"object"==typeof s.hooks)&&Object.keys(s.hooks).forEach(e=>{lodash.set(this.configs,t+`.${e}.`+o,{methods:s.methods,hook:s.hooks[e]})})}catch(e){console.error(`Register preview plugin ${o} failed!`),console.error(e)}}async runHooks(t,o,...e){var s=lodash.get(this.configs,t+"."+o);if(s&&Object.keys(s).length)for(const i of Object.keys(s)){var r=s[i];try{await(0,Editor.Module.__protected__.requireFile(r.methods)[r.hook])(...e),console.debug(`[preview] runHooks (${t}-${o}) from plugin ${i} success!`)}catch(e){console.error(`[preview] runHooks (${t}-${o}) from plugin ${i} failed!`),console.error(e)}}}async unregister(s){var e;if(this.hasRegisterPackages.has(s.name)){const r=null==(e=s.info.contributions)?void 0:e.preview;this.supportPreviewTypes.forEach(async t=>{var e,o=r[t];o&&o.methods&&((e=Editor.Module.__protected__.requireFile(o.methods))&&e.unload&&await e.unload(),Editor.Module.__protected__.removeCache(o.methods),o.hooks)&&this.supportDataType.forEach(e=>{this.configs[t][e]&&delete this.configs[t][e][s.name]})}),this.hasRegisterPackages.delete(s.name)}}}exports.pluginManager=new PluginManager;