{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQA,SAAe,SAAS,CAAC,OAA0B;;;;;;;wBAE3C,qBAAM,cAAc,CAAC,OAAO,CAAC,EAAA;;wBAA7B,SAA6B,CAAC;;;;wBAE9B,OAAO,CAAC,KAAK,CAAC,OAAK,CAAC,CAAC;;;;;;KAE5B;;IA0BD,SAAe,cAAc,CAAC,OAA0B;;YAUpD,SAAe,YAAY;;;;;;gCACjB,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCAE7C,sCAAa,yBAAyB,GAAC;;gCAAlD,QAAQ,GAAG,SAAuC;gCAClD,MAAM,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;gCAClC,IAAI,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE;oCAC9C,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE;wCACxB,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;oCAC7B,CAAC,CAAC,CAAC;oCACH,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE;wCACvB,MAAM,CAAC,KAAK,EAAE,CAAC;oCACnB,CAAC,CAAC,CAAC;oCACH,MAAM,CAAC,EAAE,CAAC,oBAAoB,EAAE;wCAC5B,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;oCAC7B,CAAC,CAAC,CAAC;iCACN;gCACD,sBAAO,MAAM,EAAC;;;;aACjB;;;;4BA1Bc,qBAAM,YAAY,EAAE,EAAA;;wBAA7B,MAAM,GAAG,SAAoB;wBAE7B,EAAE,GAAG,IAAI,UAAE,CAAC;4BACd,OAAO,EAAE,OAAO,CAAC,OAAO;4BACxB,IAAI,EAAE,UAAC,KAAK;gCAAE,cAAO;qCAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;oCAAP,6BAAO;;gCACjB,MAAM,CAAC,IAAI,OAAX,MAAM,iBAAM,KAAK,GAAK,IAAI,UAAE;4BAChC,CAAC;yBACJ,CAAC,CAAC;;;;wBAsBY,qBAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAA;;wBAA9B,EAAE,GAAG,SAAyB;wBACpC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;wBAClB,qBAAM,cAAI,CAAC,EAAE,EAAE,OAAO,CAAC,EAAA;;wBAAvB,SAAuB,CAAC;;;;wBAExB,OAAO,CAAC,KAAK,CAAC,OAAK,CAAC,CAAC;;;;;;KAE5B","sourcesContent":["import { Ui } from './ui.js';\nimport { main } from './main.js';\n\nimport { ISettings } from '../../../builder/@types/public/build-result';\ndeclare global {\n    const System: any;\n}\n\nasync function bootstrap(options: bootstrap.Options) {\n    try {\n        await bootstrapAsync(options);\n    } catch (error) {\n        console.error(error);\n    }\n}\n\ndeclare namespace bootstrap {\n    export interface Options {\n        /**\n         * 引擎模块 URL。\n         */\n        engineBaseUrl: string;\n\n        devices: Record<\n            string,\n            {\n                name: string;\n                width: number;\n                height: number;\n                ratio?: number;\n            }\n        >;\n\n        /**\n         * Settings。\n         */\n        settings: ISettings;\n    }\n}\n\nasync function bootstrapAsync(options: bootstrap.Options) {\n    const socket = await createSocket();\n\n    const ui = new Ui({\n        devices: options.devices,\n        emit: (event, ...args) => {\n            socket.emit(event, ...args);\n        },\n    });\n\n    async function createSocket() {\n        const searchArr = window.location.search.substr(1).split('&');\n        // @ts-ignore\n        const socketIo = await import('/socket.io/socket.io.js');\n        const socket = socketIo.default();\n        if (searchArr.indexOf('autoReload=false') === -1) {\n            socket.on('browser:reload', function() {\n                window.location.reload();\n            });\n            socket.on('browser:close', function() {\n                window.close();\n            });\n            socket.on('browser:disconnect', function() {\n                window.location.reload();\n            });\n        }\n        return socket;\n    }\n\n    try {\n        const cc = await System.import('cc');\n        ui.bindEngine(cc);\n        await main(ui, options);\n    } catch (error: any) {\n        console.error(error);\n    }\n}\n\nexport { bootstrap };\n"]}