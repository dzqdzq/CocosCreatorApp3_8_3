"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,r,a,t){void 0===t&&(t=a);var i=Object.getOwnPropertyDescriptor(r,a);i&&("get"in i?r.__esModule:!i.writable&&!i.configurable)||(i={enumerable:!0,get:function(){return r[a]}}),Object.defineProperty(e,t,i)}:function(e,r,a,t){e[t=void 0===t?a:t]=r[a]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&__createBinding(r,e,a);return __setModuleDefault(r,e),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.messages=void 0;const intelligence_1=require("../intelligence"),packer_driver_1=require("../packer-driver/packer-driver"),awaiter_1=require("../utils/awaiter"),globalPackerDriverAwaiter=new awaiter_1.Awaiter;let globalPackerDriverAwaiterResolved=!1,allDatabasesAreReady=!1,hasInitDbListener=!1;async function onAssetDBFullReady(){(await globalPackerDriverAwaiter.wait()).pullAssetDb(),allDatabasesAreReady=!0}async function onAssetDBFullClose(){var e=await globalPackerDriverAwaiter.wait();allDatabasesAreReady=!1,await e.shutDown()}async function onSomeAssetDBReady(e){console.debug(e+" opened.");var r=await globalPackerDriverAwaiter.wait();allDatabasesAreReady&&(await r.mountDatabase(e),await r.resetDatabases(!0))}async function onSomeAssetDBClose(e){console.debug(e+" closed.");var r=await globalPackerDriverAwaiter.wait();allDatabasesAreReady&&(await r.unmountDatabase(e),await r.resetDatabases(!0))}const initializeAndBuild=(()=>{let r=!1;return async function(){Editor.Metrics.trackTimeStart("programming:worker-init"),r||(r=!0,(async()=>{var e=(await Promise.resolve().then(()=>__importStar(require("../packer-driver/packer-driver"))))["PackerDriver"],e=await e.create();globalPackerDriverAwaiter.resolve(e),globalPackerDriverAwaiterResolved=!0})());var e=await globalPackerDriverAwaiter.wait();await e.init(),Editor.Metrics.trackTimeEnd("programming:worker-init",{output:!0}),hasInitDbListener||(Editor.Message.__protected__.addBroadcastListener("asset-db:ready",onAssetDBFullReady),Editor.Message.__protected__.addBroadcastListener("asset-db:close",onAssetDBFullClose),Editor.Message.__protected__.addBroadcastListener("asset-db:db-ready",onSomeAssetDBReady),Editor.Message.__protected__.addBroadcastListener("asset-db:db-close",onSomeAssetDBClose),hasInitDbListener=!0),Editor.Metrics.trackTimeStart("programming:database-startup"),await e.resetDatabases(!1),packer_driver_1.PackerDriver.updateImportRestrictions(),await e.pullAssetDb(),Editor.Metrics.trackTimeEnd("programming:database-startup",{output:!0})}})();function sleep(r){return new Promise(e=>{setTimeout(e,r)})}exports.messages={async"packer-driver/start"(){allDatabasesAreReady=!0,Editor.Task.__protected__.addSyncTask("build-script",Editor.I18n.t("programming.startCompile"));try{console.debug("Starting packer driver..."),Editor.Metrics.trackTimeStart("programming:worker-start"),await initializeAndBuild(),Editor.Metrics.trackTimeEnd("programming:worker-start",{output:!0}),console.debug("Packer driver started."),Editor.Task.__protected__.updateSyncTask("build-script","Packer driver started.")}catch(e){console.error("Init packer-driver failed!"),Editor.Task.__protected__.updateSyncTask("build-script","Init packer-driver failed! \n"+e.stack),console.error(e),0===(await Editor.Dialog.error(e&&e.stack,{title:Editor.I18n.t("programming.initError"),buttons:[Editor.I18n.t("programming.openDevtools"),Editor.I18n.t("programming.confirm")],default:1})).response&&Editor.Message.send("programming","open-dev-tools")}Editor.Task.__protected__.removeSyncTask("build-script")},async"packer-driver/get-loader-context"(e){return null==(e=(await globalPackerDriverAwaiter.wait()).getQuickPackLoaderContext(e))?void 0:e.serialize()},async"packer-driver/ready"(e){return!!globalPackerDriverAwaiterResolved&&(await globalPackerDriverAwaiter.wait()).isReady(e)},async"packer-driver/query-script-deps"(e){if(globalPackerDriverAwaiterResolved)return(await globalPackerDriverAwaiter.wait()).queryScriptDeps(e)},async"packer-driver/query-cc-editor-module-map"(){return packer_driver_1.PackerDriver.queryCCEModuleMap()},async"clear-code-cache"(){console.debug("Clearing code cache"),await(await globalPackerDriverAwaiter.wait()).clearCache()},async"custom-macro-changed"(){await(0,intelligence_1.updateCustomMacro)()},async"packer-driver/update-auto-update-import-config"(e,r){"updateAutoUpdateImportConfig"===e&&((await globalPackerDriverAwaiter.wait()).languageService.autoUpdateFileImport=!!r)}};