"use strict";var __importDefault=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.methods=exports.unload=exports.load=void 0;const asserts_1=require("../utils/asserts"),path_1=__importDefault(require("path")),worker_message_define_1=require("../worker-message-define"),electron_worker_1=__importDefault(require("@base/electron-worker"));class ProgrammingWorker{static async create(){var r=new ProgrammingWorker;return await r._initialize(),r}shutdown(){}async request(r,...e){return await this._worker.send(r,...e)}openDevTools(){this._worker.debug(!0)}constructor(){this._worker=electron_worker_1.default.create("Programming"),this._worker.on("render-process-gone",(r,e)=>{Editor.Message.broadcast("crash-reporter:report",{process:"Programming",value:{A100000_Programming:1},details:e,time:new Date})})}async _initialize(){var r=require("@editor/creator").getPreloadFilePath();await this._worker.init({preload:r}),this._worker.require(ProgrammingWorker._WORKER_INDEX_MODULE_PATH),this._worker.debug(process.argv.includes("--open-programming-dev-tools"));let e=!0;this._worker.win.webContents.on("did-finish-load",()=>{e?e=!1:(this._worker.require(ProgrammingWorker._WORKER_INDEX_MODULE_PATH),this._worker.send("packer-driver/start"))})}}ProgrammingWorker._WORKER_INDEX_MODULE_PATH=path_1.default.join(__dirname,"./worker-index");let programmingWorker=null;function assertsLoaded(r){(0,asserts_1.assertsNonNullable)(r,"Programming worker has not been created.")}async function load(){(0,asserts_1.asserts)(!programmingWorker,"Programming worker has already been created."),programmingWorker=await ProgrammingWorker.create(),Editor.App.args.debugScript&&programmingWorker.openDevTools()}async function unload(){assertsLoaded(programmingWorker),programmingWorker.shutdown()}exports.load=load,exports.unload=unload,exports.methods=worker_message_define_1.workerMessageNames.reduce((r,e)=>(r[e]=async(...r)=>((0,asserts_1.assertsNonNullable)(programmingWorker),programmingWorker.request(e,...r)),r),{}),exports.methods["open-dev-tools"]=()=>{programmingWorker?programmingWorker.openDevTools():console.error("Programming worker has not been ready.")};