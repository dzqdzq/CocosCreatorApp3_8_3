"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,r,t,a){void 0===a&&(a=t);var i=Object.getOwnPropertyDescriptor(r,t);i&&("get"in i?r.__esModule:!i.writable&&!i.configurable)||(i={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,a,i)}:function(e,r,t,a){e[a=void 0===a?t:a]=r[t]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding(r,e,t);return __setModuleDefault(r,e),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.afterPreStart=exports.methods=void 0;const loader_1=require("@cocos/creator-programming-quick-pack/lib/loader"),executor_1=require("@editor/lib-programming/dist/executor"),asset_db_1=require("@editor/asset-db"),url_1=require("url");function beforePreStart(e){Object.values(e).forEach(e=>{e.preImportExtList=e.preImportExtList||[],e.preImportExtList.push(".ts")})}async function afterPreStart(e){console.debug("starting packer-driver..."),await Editor.Message.request("programming","packer-driver/start"),await initializeAssetDBScriptingEnvironment()}async function initializeAssetDBScriptingEnvironment(){console.debug("initialize scripting environment...");var e=await Editor.Message.request("programming","packer-driver/get-loader-context","editor"),e=loader_1.QuickPackLoaderContext.deserialize(e);const r=(await Promise.resolve().then(()=>__importStar(require("cc/preload"))))["loadDynamic"];var t=await Editor.Message.request("programming","packer-driver/query-cc-editor-module-map");const a=await executor_1.Executor.create({importEngineMod:async e=>r(e),quickPackLoaderContext:e,cceModuleMap:t});await a.prepare(),Editor.Module.__protected__.setImportProjectModuleDelegate(async e=>{var r=(0,asset_db_1.queryPath)(e);if(r)return r=(0,url_1.pathToFileURL)(r),a.import(r.href);throw new Error(e+" is not a valid database URL.")})}exports.methods={afterPreStart:afterPreStart,beforePreStart:beforePreStart},exports.afterPreStart=afterPreStart;