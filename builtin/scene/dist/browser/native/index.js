"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NativeManager=void 0;const native_window_browser_1=require("./window/native-window-browser"),electron_1=require("electron"),ipc_1=require("./ipc"),panel_constant_1=require("../../panel/panel-constant");class NativeManager{constructor(){this._mainWindow={},this._panelToWindow={},this._sceneReady=!1,this._previewReady=!1,this._isPreview=!1,this.initEvent()}onEngineReady(n){n?this._previewReady=!0:this._sceneReady=!0,this.forEachWindow(e=>{e.initWindows(n)})}onEngineClose(n){n?this._previewReady=!1:this._sceneReady=!1,this.forEachWindow(e=>{e.releaseWindows(n)})}onPanelReady(e,n,i){this._mainWindow[e]||(a=electron_1.BrowserWindow.fromId(e))&&(a=new native_window_browser_1.NativeWindowBrowser(a),this._mainWindow[e]=a);var a=this._mainWindow[e];a.onPanelReady(n,i),this._panelToWindow[n]=a,this._sceneReady&&a.initWindows(),this._previewReady&&a.initWindows(!0)}async onPanelResize(e,n,i){e=this._mainWindow[e];e&&await e.onPanelResize(n,i)}onPanelBeforeClose(e,n){e=this._mainWindow[e];e&&e.onPanelClose(n),n===panel_constant_1.PanelName.Scene&&(this._previewReady=!1,this._sceneReady=!1)}onPanelClose(e,n){e=this._mainWindow[e];e&&e.onPanelClose(n),n===panel_constant_1.PanelName.Scene&&(this._previewReady=!1,this._sceneReady=!1)}async onPanelShow(e,n){e=this._mainWindow[e];e&&await e.onPanelShow(n)}async onPanelHide(e,n){e=this._mainWindow[e];e&&await e.onPanelHide(n)}async forEachWindow(n){var i=Object.values(this._mainWindow);for(let e=0;e<i.length;e++)await n(i[e])}initEvent(){ipc_1.b2sIpc.bind(),ipc_1.b2sIpc.on("onEngineReady",this.onEngineReady.bind(this)),ipc_1.b2sIpc.on("onEngineClose",this.onEngineClose.bind(this))}onSceneReady(){var e=this._panelToWindow[panel_constant_1.PanelName.Preview];e&&e.showCameraOnPreviewPanel(),this.forEachWindow(e=>{e.setPanelBackgroundVisible(!1)})}async switchWindows(n){this._isPreview=n;var i=Object.values(this._mainWindow);for(let e=0;e<i.length;e++)await i[e].switchWindows(n)}}const instance=new NativeManager;exports.NativeManager=instance;