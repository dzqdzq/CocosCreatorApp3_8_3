"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TransformToolData=exports.SnapConfigs=void 0;const cc_1=require("cc"),structures_1=require("@itharbors/structures");class SnapConfigs extends structures_1.EventEmitter{constructor(){super(...arguments),this._position=new cc_1.Vec3(1,1,1),this._rotation=1,this._scale=1,this._isPositionSnapEnabled=!1,this._isRotationSnapEnabled=!1,this._isScaleSnapEnabled=!1}get position(){return this._position}set position(t){this._position.x=t.x,this._position.y=t.y,this._position.z=t.z,this.emit("snap-position-changed",this._position)}get rotation(){return this._rotation}set rotation(t){this._rotation=t,this.emit("snap-rotation-changed",this._rotation)}get scale(){return this._scale}set scale(t){this._scale=t,this.emit("snap-scale-changed",this._scale)}get isPositionSnapEnabled(){return this._isPositionSnapEnabled}set isPositionSnapEnabled(t){this._isPositionSnapEnabled=t,this.emit("enable-snap-position-changed",this._isPositionSnapEnabled)}get isRotationSnapEnabled(){return this._isRotationSnapEnabled}set isRotationSnapEnabled(t){this._isRotationSnapEnabled=t,this.emit("enable-snap-rotation-changed",this._isRotationSnapEnabled)}get isScaleSnapEnabled(){return this._isScaleSnapEnabled}set isScaleSnapEnabled(t){this._isScaleSnapEnabled=t,this.emit("enable-snap-scale-changed",this._isScaleSnapEnabled)}getPureDataObject(){return{position:{x:this.position.x,y:this.position.y,z:this.position.z},rotation:this.rotation,scale:this.scale,isPositionSnapEnabled:this.isPositionSnapEnabled,isRotationSnapEnabled:this.isRotationSnapEnabled,isScaleSnapEnabled:this.isScaleSnapEnabled}}initFromData(t){var i;t&&(t.position&&(this._position.x=t.position.x,this._position.y=t.position.y,this._position.z=t.position.z),this._rotation=null!=(i=t.rotation)?i:this._rotation,this._scale=null!=(i=t.scale)?i:this._scale,this._isPositionSnapEnabled=null!=(i=t.isPositionSnapEnabled)?i:this._isPositionSnapEnabled,this._isRotationSnapEnabled=null!=(i=t.isRotationSnapEnabled)?i:this._isRotationSnapEnabled,this._isScaleSnapEnabled=null!=(i=t.isScaleSnapEnabled)?i:this._isScaleSnapEnabled)}}exports.SnapConfigs=SnapConfigs;const transformToolDataToolNameTypeList=["position","rotation","scale","rect"],transformToolDataCoordinateTypeList=["local","global"],transformToolDataPivotTypeList=["pivot","center"];class TransformToolData extends structures_1.EventEmitter{constructor(){super(...arguments),this._toolName="position",this._coordinate="local",this._pivot="pivot",this._isLocked=!1,this._is2D=!1,this._scale2D=1,this.snapConfigs=new SnapConfigs}get toolName(){return this._toolName}set toolName(t){!this.isLocked&&transformToolDataToolNameTypeList.includes(t)&&(this._toolName=t,this.emit("tool-name-changed",this._toolName))}get coordinate(){return this._coordinate}set coordinate(t){!this.isLocked&&transformToolDataCoordinateTypeList.includes(t)&&(this._coordinate=t,this.emit("coordinate-changed",this._coordinate))}get pivot(){return this._pivot}set pivot(t){!this.isLocked&&transformToolDataPivotTypeList.includes(t)&&(this._pivot=t,this.emit("pivot-changed",this._pivot))}get isLocked(){return this._isLocked}set isLocked(t){this._isLocked=t,this.emit("lock-changed",this._isLocked)}get is2D(){return this._is2D}set is2D(t){this._is2D=t,this.emit("dimension-changed",this._is2D)}get scale2D(){return this._scale2D}set scale2D(t){this._scale2D=t,this.emit("scale-2d-changed",this._scale2D)}set cameraOrthoHeight(t){this.emit("camera-ortho-height-changed",t)}}exports.TransformToolData=TransformToolData;