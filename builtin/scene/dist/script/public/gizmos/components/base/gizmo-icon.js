"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),gizmo_select_1=__importDefault(require("./gizmo-select")),external_1=__importDefault(require("../../utils/external")),config_1=__importDefault(require("../../utils/config")),utils_1=__importDefault(require("../../utils")),icon_1=__importDefault(require("../../controller/icon")),NodeUtils=external_1.default.NodeUtils,tempQuat_a=new cc_1.Quat;class IconGizmoBase extends gizmo_select_1.default{constructor(){super(...arguments),this._isIconGizmoVisible=!1,this.disableOnSelected=!1}init(){this.createController()}onShow(){this._controller.show(),this.updateController()}onHide(){this._controller.hide()}setIconGizmoVisible(e){(this._isIconGizmoVisible=e)?this.show():this.hide()}setIconGizmo3D(e){this._controller&&(this._controller.is3DIcon=e)&&this._controller.updateSize(config_1.default.iconGizmoSize)}setIconGizmoSize(e){this._controller.updateSize(e)}createController(){var e=this.getGizmoRoot();this._controller=new icon_1.default(e,{texture:!0}),this._controller.onControllerMouseDown=this.onControllerMouseDown.bind(this),this._controller.onControllerMouseMove=this.onControllerMouseMove.bind(this),this._controller.onControllerMouseUp=this.onControllerMouseUp.bind(this),this._controller.is3DIcon=config_1.default.isIconGizmo3D,this._controller.updateSize(config_1.default.iconGizmoSize),this._isIconGizmoVisible||this._controller.hide()}onControllerMouseDown(){}onControllerMouseMove(){}onControllerMouseUp(){this.target&&utils_1.default.select(this.target.node.uuid)}updateController(){this.updateControllerTransform()}updateControllerTransform(){var e,t,o;this._isInitialized&&null!==this.target&&(e=this.target.node,t=NodeUtils.getWorldPosition3D(e),o=tempQuat_a,NodeUtils.getWorldRotation3D(e,o),this._controller.setPosition(t),this._controller.setRotation(o),this._controller.onEditorCameraMoved())}onTargetUpdate(){this.updateController()}onNodeChanged(e){this.updateController()}onNodeSelectionChanged(e){super.onNodeSelectionChanged(e),e&&this.disableOnSelected?this.hide():e||this.show()}checkVisible(){return!(!this.target||!this._isIconGizmoVisible||this._nodeSelected&&this.disableOnSelected||this.target.node.objFlags&cc.Object.Flags.LockedInEditor)&&super.checkVisible()}}exports.default=IconGizmoBase;