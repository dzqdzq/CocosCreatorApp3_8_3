"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),external_1=__importDefault(require("../../utils/external")),engine_1=__importDefault(require("../../utils/engine")),base_1=require("../base"),sphere_1=__importDefault(require("../../controller/sphere")),NodeUtils=external_1.default.NodeUtils,create3DNode=engine_1.default["create3DNode"],MathUtil=external_1.default.EditorMath;class SphereLightComponentGizmo extends base_1.SelectGizmo{constructor(){super(...arguments),this._lightGizmoColor=new cc_1.Color(255,255,50),this._lightCtrlHoverColor=new cc_1.Color(0,255,0),this._range=0,this._glowSize=.4,this._propPath=null}init(){this.createController(),this._isInitialized=!0}onShow(){this._controller.show(),this._sizeSphereCtrl.show(),this.updateController()}onHide(){this._controller.hide(),this._sizeSphereCtrl.hide()}createController(){var t=this.getGizmoRoot(),e=create3DNode("SphereLightGizmo");e.parent=t,this._controller=new sphere_1.default(e),this._controller.setColor(this._lightGizmoColor),this._controller.onControllerMouseDown=this.onControllerMouseDown.bind(this),this._controller.onControllerMouseMove=this.onControllerMouseMove.bind(this),this._controller.onControllerMouseUp=this.onControllerMouseUp.bind(this),this._controller.editable=!0,this._controller.hoverColor=this._lightCtrlHoverColor,this._sizeSphereCtrl=new sphere_1.default(e),this._sizeSphereCtrl.editable=!1}onControllerMouseDown(){this._isInitialized&&null!==this.target&&(this._range=this.target.range,this._propPath=this.getCompPropPath("range"))}onControllerMouseMove(){this.updateDataFromController()}onControllerMouseUp(){this.onControlEnd(this._propPath)}updateDataFromController(){var t,e;this._controller.updated&&this.target&&(this.onControlUpdate(this._propPath),t=this.target.node,e=this._controller.getDeltaRadius(),e=this._range+e,e=MathUtil.toPrecision(e,3),e=Math.abs(e),this.target.range=e,this.onComponentChanged(t))}updateControllerTransform(){var t;this._isInitialized&&null!==this.target&&(t=this.target.node,t=NodeUtils.getWorldPosition3D(t),this._controller.setPosition(t),this._sizeSphereCtrl.setPosition(t))}updateControllerData(){var t,e,o;this._isInitialized&&null!==this.target&&(this._controller.checkEdit(),t=this.target,this._controller.radius=t.range,e=t.color.clone(),t.useColorTemperature&&(o=null==(o=t._light)?void 0:o.colorTemperatureRGB)&&(e.r*=o.x,e.g*=o.y,e.b*=o.z),(o=cc.v4()).x=t.luminance,o.y=this._glowSize,this._sizeSphereCtrl.setColor(e),this._sizeSphereCtrl.radius=t.size)}updateController(){this.updateControllerTransform(),this.updateControllerData()}onTargetUpdate(){this.updateController()}onNodeChanged(){this.updateController()}}exports.default=SphereLightComponentGizmo;