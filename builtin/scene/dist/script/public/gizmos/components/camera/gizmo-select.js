"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),external_1=__importDefault(require("../../utils/external")),scene_view_data_1=require("../../../../3d/manager/scene-view/scene-view-data"),index_1=__importDefault(require("../../utils/engine/index")),base_1=require("../base"),frustum_1=__importDefault(require("../../controller/frustum")),NodeUtils=external_1.default.NodeUtils,{getCameraData,setCameraData,ProjectionType,FOVAxis}=index_1.default,EditorMath=external_1.default.EditorMath,tempQuat_a=new cc_1.Quat;class CameraComponentGizmo extends base_1.SelectGizmo{constructor(){super(...arguments),this._fov=0,this._near=0,this._far=0,this._aspect=0,this._farHalfWidth=0,this._farHalfHeight=0,this._projection=0,this._fovAxis=FOVAxis.VERTICAL}init(){this.createController(),this._isInitialized=!0,this._onTargetResolutionChanged=this.onTargetResolutionChanged.bind(this)}onShow(){this._controller.show(),this.updateControllerData(),scene_view_data_1.sceneViewData.on("target-resolution-changed",this._onTargetResolutionChanged)}onHide(){this._controller.hide(),scene_view_data_1.sceneViewData.off("target-resolution-changed",this._onTargetResolutionChanged)}createController(){var t=this.getGizmoRoot();this._controller=new frustum_1.default(t),this._controller.editable=!0,this._controller.onControllerMouseDown=this.onControllerMouseDown.bind(this),this._controller.onControllerMouseMove=this.onControllerMouseMove.bind(this),this._controller.onControllerMouseUp=this.onControllerMouseUp.bind(this)}onControllerMouseDown(){var t;this._isInitialized&&null!=this.target&&(t=getCameraData(this.target),this._projection=t.projection,this._fov=t.fov,this._near=t.near,this._far=t.far,this._aspect=scene_view_data_1.sceneViewData.targetAspect,this._fovAxis=t.fovAxis,this._projection===ProjectionType.PERSPECTIVE?this._fovAxis===FOVAxis.VERTICAL?(this._farHalfHeight=Math.tan(EditorMath.deg2rad(this._fov/2))*this._far,this._farHalfWidth=this._farHalfHeight*this._aspect):(this._farHalfWidth=Math.tan(EditorMath.deg2rad(this._fov/2))*this._far,this._farHalfHeight=this._farHalfWidth/this._aspect):(this._farHalfHeight=t.orthoHeight,this._farHalfWidth=this._farHalfHeight*this._aspect),this.onControlBegin(""))}onControllerMouseMove(){this.updateDataFromController()}onControllerMouseUp(){this.onControlEnd("")}updateDataFromController(){if(this._controller.updated){var t=this._controller.getDeltaWidth(),e=this._controller.getDeltaHeight(),r=this._controller.getDeltaDistance();let i=this._farHalfHeight,a=this._farHalfWidth,o=(0!==t&&(a=this._farHalfWidth+t,i=a/this._aspect),0!==e&&(i=this._farHalfHeight+e,a=i*this._aspect),this._far);if(0!==r&&(o=this._far+r,(o=Math.abs(o))<this._near&&(o=this._near+.01),o=EditorMath.toPrecision(o,3)),i=Math.abs(i),this._projection===ProjectionType.PERSPECTIVE){let t=this._fov,e=i;this._fovAxis===FOVAxis.HORIZONTAL&&(e=a),i===this._farHalfHeight&&a===this._farHalfWidth||((t=2*Math.atan2(e,this._far))<EditorMath.D2R&&(t=EditorMath.D2R),t*=EditorMath.R2D,t=EditorMath.toPrecision(t,3)),setCameraData(this.target,{fov:t,far:o})}else i=EditorMath.toPrecision(i,3),setCameraData(this.target,{orthoHeight:i,far:o});this.target&&this.onComponentChanged(this.target.node)}}updateControllerTransform(){var t,e,i;this.target&&(t=this.target.node,e=NodeUtils.getWorldPosition3D(t),i=tempQuat_a,NodeUtils.getWorldRotation3D(t,i),this._controller.setPosition(e),this._controller.setRotation(i))}updateControllerData(){var t,e;!this._isInitialized||null==this.target||this.target.node&&!this.target.node.activeInHierarchy||(t=getCameraData(this.target),e=scene_view_data_1.sceneViewData.targetAspect,t&&(this._controller.checkEdit(),this._controller.updateSize(t.projection,t.orthoHeight,t.fov,e,t.near,t.far,t.fovAxis),this.updateControllerTransform()))}onTargetUpdate(){this.updateControllerData()}onNodeChanged(){this.updateControllerData()}onTargetResolutionChanged(){this.updateControllerData(),cce.Engine.repaintInEditMode()}}exports.default=CameraComponentGizmo;