"use strict";var PolygonHandleType,__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PolygonController=void 0;const cc_1=require("cc"),editable_1=__importDefault(require("../../controller/editable")),controller_utils_1=__importDefault(require("../../utils/controller-utils")),controller_shape_1=__importDefault(require("../../utils/controller-shape")),engine_1=__importDefault(require("../../utils/engine")),_2d_misc_1=require("cc/editor/2d-misc"),{AttributeName,getModel,updatePositions,updateIB,setMeshColor,setNodeOpacity,getNodeOpacity,panPlaneLayer,updateBoundingBox,create3DNode}=engine_1.default,flat=(!function(e){e.None="none",e.Point="point",e.Line="line",e.Area="area"}(PolygonHandleType=PolygonHandleType||{}),(e,t)=>e.map(t).reduce((e,t)=>e.concat(t),[])),tempVec3_a=new cc_1.Vec3,tempVec3_b=new cc_1.Vec3;class PolygonController extends editable_1.default{get points(){return this._points}constructor(e,t){super(e),this.gizmo=t,this._panPlane=null,this._panPlaneMeshRenderer=null,this._points=[],this._mouseDownOnPlanePos=new cc_1.Vec3,this._curHandleData={type:PolygonHandleType.None,deltaPos:new cc_1.Vec3,index:-1},this._lineGroup=null,this._pointsHandleData=[],this._linesHandleData=[],this._hitPoint=null,this._areaNode=null,this._areaMR=null,this._areaOpacity=80,this._panSize=1e5,this._hoverColor=cc_1.Color.YELLOW,this.initShape()}initShape(){this.createShapeNode("PolygonController"),this._lineGroup=create3DNode("LineGroup"),this._lineGroup.parent=this.shape}onInitEditHandles(){var e=controller_utils_1.default.quad(new cc_1.Vec3,this._panSize,this._panSize);e.parent=this._rootNode,e.name="RectPanPlane",e.active=!1,e.layer=panPlaneLayer,setNodeOpacity(e,0),this._panPlane=e,this._panPlaneMeshRenderer=getModel(e),this.createPolygonAreaHandle()}showEditHandles(){super.showEditHandles(),this._areaNode&&(this._areaNode.active=!0)}hideEditHandles(){super.hideEditHandles(),this._areaNode&&(this._areaNode.active=!1)}createPolygonAreaHandle(){var e=controller_shape_1.default.calcPolygonData(this._points),e=controller_utils_1.default.createShapeByData(e,this._color,{unlit:!0});e.name="RectArea",e.parent=this.shape,e.setPosition(new cc_1.Vec3(0,0,-.1)),setNodeOpacity(e,this._areaOpacity),this._areaNode=e,this._areaMR=getModel(e),this.initHandle(e,PolygonHandleType.Area)}setColor(t){this._lineGroup&&(this._color=t,this._lineGroup.children.forEach(e=>{setMeshColor(e,t)}))}updateData(e){this.updatePanRectByPoints(e),this.resetEditHandlesFromPoints(e)}updatePanRectByPoints(e){if(this._panPlane&&this._panPlaneMeshRenderer&&this.gizmo&&this.gizmo.target){let t=0,a=0;e.forEach(e=>{t=Math.max(t,Math.abs(e.x)),a=Math.max(a,Math.abs(e.y))});var e=this.gizmo.target.node.position,n=2*(t>a?t:a)+cce.Camera.camera.orthoHeight;n<this._panSize||(this._panSize=n,e=controller_shape_1.default.calcPositionData(e,n,n,new cc_1.Vec3(0,0,1),!0),updatePositions(this._panPlaneMeshRenderer,e.positions),updateBoundingBox(this._panPlaneMeshRenderer,e.minPos,e.maxPos))}}resetEditHandlesFromPoints(e){if(this._points=e,this._editHandlesShape){if(this._editHandleKeys=[],this._points.forEach((e,t)=>{this._editHandleKeys.push("p"+t)}),this._points.length>this._pointsHandleData.length)for(let e=this._pointsHandleData.length;e<this._points.length;e++){var t=this.createEditHandle(this._editHandleKeys[e],this._editHandleColor);t.customData={},t.customData.index=e,this._pointsHandleData.push(t)}else if(this._points.length<this._pointsHandleData.length){for(let e=this._pointsHandleData.length-1;e>=this._points.length;e--)this._editHandlesShape.removeChild(this._pointsHandleData[e].topNode),this.removeHandle("p"+e);this._pointsHandleData.length=this._points.length}this._editHandleKeys.forEach(e=>{this._updateEditHandle(e)}),this.adjustEditHandlesSize()}if(this._lineGroup){if(this._points.length<2&&(this._lineGroup.removeAllChildren(),this._linesHandleData.forEach(e=>{this.removeHandle(e.name)}),this._linesHandleData=[]),this._points.length>this._linesHandleData.length)for(let e=this._linesHandleData.length;e<this._points.length;e++){var a=e===this._points.length-1?0:e+1,n=this._points[e],a=this._points[a],n=this.createLineHandle(n,a,e);n.customData={},n.customData.index=e,n.customData.lineMR=getModel(n.topNode),this._linesHandleData.push(n)}else if(this._points.length<this._linesHandleData.length){for(let e=this._linesHandleData.length-1;e>=this._points.length;e--)this._lineGroup.removeChild(this._linesHandleData[e].topNode),this.removeHandle("l"+e);this._linesHandleData.length=this._points.length}this._updateLinesHandle()}var i;this._areaNode&&this._areaMR&&(e=controller_shape_1.default.calcPolygonData(this._points),updatePositions(this._areaMR,e.positions),i=flat(e.positions,e=>[e.x,e.y,e.z]),i=(0,_2d_misc_1.earcut)(i,[],3),updateIB(this._areaMR,i),updateBoundingBox(this._areaMR,e.minPos,e.maxPos))}createLineHandle(e,t,a){e=controller_utils_1.default.lineTo(e,t,this._color,{unlit:!0});return e.parent=this._lineGroup,this.initHandle(e,"l"+a)}_updateLinesHandle(){this._linesHandleData.forEach((e,t)=>{var a=t===this._points.length-1?0:t+1,t=this._points[t],a=this._points[a],t=controller_shape_1.default.calcLineData(t,a);updatePositions(e.customData.lineMR,t.positions),updateBoundingBox(e.customData.lineMR,t.minPos,t.maxPos)})}_updateEditHandle(e){var t,a;e&&(t=(a=this._handleDataMap[e]).topNode,a=a.customData.index,a=this._points[a],tempVec3_a.set(a),a=this.getScale(),e=this._editHandleScales[e],t.setScale(e/a.x,e/a.y,e/a.z),cc_1.Vec3.multiply(tempVec3_a,tempVec3_a,a),t.setPosition(tempVec3_a))}onMouseDown(e){var t;this.edit&&this._panPlane&&("l"===e.handleName.charAt(0)?(this._curHandleData.type=PolygonHandleType.Line,this._curHandleData.hitPos=e.hitPoint,t=this._handleDataMap[e.handleName],this._curHandleData.index=t.customData.index):"p"===e.handleName.charAt(0)?(this._curHandleData.type=PolygonHandleType.Point,this._curHandleData.hitPos=e.hitPoint,t=this._handleDataMap[e.handleName],this._curHandleData.index=t.customData.index):e.handleName===PolygonHandleType.Area&&(this._curHandleData.type=PolygonHandleType.Area,this._curHandleData.deltaPos=new cc_1.Vec3),this._panPlane.active=!0,this._mouseDownOnPlanePos=new cc_1.Vec3,this.getPositionOnPanPlane(this._mouseDownOnPlanePos,e.x,e.y,this._panPlane),this.onControllerMouseDown)&&this.onControllerMouseDown(e)}onMouseMove(e){var t,a;this.edit&&this._panPlane&&(this._isMouseDown&&"l"!==e.handleName.charAt(0)&&(t=new cc_1.Vec3,this.getPositionOnPanPlane(t,e.x,e.y,this._panPlane))&&("p"===e.handleName.charAt(0)?((a=new cc_1.Vec3(t)).subtract(this._mouseDownOnPlanePos),this._curHandleData.type=PolygonHandleType.Point,this._curHandleData.deltaPos=a,this._curHandleData.index=this._handleDataMap[e.handleName].customData.index):e.handleName===PolygonHandleType.Area&&((a=new cc_1.Vec3(t)).subtract(this._mouseDownOnPlanePos),this._curHandleData.type=PolygonHandleType.Area,this._curHandleData.deltaPos=a)),this.onControllerMouseMove)&&this.onControllerMouseMove(e)}onMouseUp(e){this.edit&&this._panPlane&&(this._hitPoint=null,this._panPlane.active=!1,this._curHandleData.type=PolygonHandleType.None,this._curHandleData.deltaPos=new cc_1.Vec3,this.onControllerMouseUp)&&this.onControllerMouseUp(e)}onHoverIn(e){var t;this.edit&&("p"===e.handleName.charAt(0)||"l"===e.handleName.charAt(0)?(t=this._handleDataMap[e.handleName],e.customData={index:t.customData.index},this.setHandleColor(e.handleName,this._hoverColor)):e.handleName===PolygonHandleType.Area&&this._areaNode&&0<(t=getNodeOpacity(this._areaNode))&&this.setHandleColor(e.handleName,this._hoverColor,t),this.onControllerHoverIn)&&this.onControllerHoverIn(e)}onHoverOut(e){super.onHoverOut(e),this.onControllerHoverOut&&this.onControllerHoverOut(e)}getHitPoint(){return this._hitPoint}getHandleData(){return this._curHandleData}}(exports.PolygonController=PolygonController).PolygonHandleType=PolygonHandleType;