"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),external_1=__importDefault(require("../../utils/external")),base_1=require("../base"),cone_1=__importDefault(require("../../controller/cone")),NodeUtils=external_1.default.NodeUtils,EditorMath=external_1.default.EditorMath,tempQuat_a=new cc_1.Quat;class ConeColliderComponentGizmo extends base_1.SelectGizmo{constructor(){super(...arguments),this._maxScale=1,this._radius=0,this._height=0,this._propPath=null}init(){this.createController(),this._isInitialized=!0}onShow(){this._controller.show(),this.updateControllerData()}onHide(){this._controller.hide()}createController(){var t=this.getGizmoRoot();this._controller=new cone_1.default(t),this._controller.setColor(cc.Color.GREEN),this._controller.editable=!0,this._controller.hoverColor=cc.Color.YELLOW,this._controller.onControllerMouseDown=this.onControllerMouseDown.bind(this),this._controller.onControllerMouseMove=this.onControllerMouseMove.bind(this),this._controller.onControllerMouseUp=this.onControllerMouseUp.bind(this)}onControllerMouseDown(){var t;this._isInitialized&&null!==this.target&&(this._radius=this.target.radius,this._height=this.target.height,t=NodeUtils.getWorldScale3D(this.target.node),this._maxScale=this.getMaxScale(t),this._propPath=this.getCompPropPath("size"))}onControllerMouseMove(){this.updateDataFromController()}onControllerMouseUp(){this.onControlEnd(this._propPath)}updateDataFromController(){var t;this._controller.updated&&this.target&&(this.onControlUpdate(this._propPath),t=this._controller.getDeltaRadius(),t=EditorMath.toPrecision(this._radius+t/this._maxScale,3),this.target.radius=t,t=this._controller.getDeltaHeight(),t=EditorMath.toPrecision(this._height+t/this._maxScale,3),this.target.height=t,t=this.target.node,this.onComponentChanged(t))}updateControllerTransform(){this.updateControllerData()}updateControllerData(){var t,e,o,r;this._isInitialized&&null!==this.target&&(this.target instanceof cc_1.ConeCollider?(r=this.target.node,this._controller.show(),this._controller.checkEdit(),t=NodeUtils.getWorldScale3D(r),e=NodeUtils.getWorldPosition3D(r),o=tempQuat_a,NodeUtils.getWorldRotation3D(r,o),r=Math.max(Math.abs(t.x),Math.abs(t.z)),this._controller.setScale(new cc_1.Vec3(r,t.y,r)),this._controller.setPosition(e),this._controller.setRotation(o),this._controller.direction=this.target.direction,this._controller.updateSize(this.target.center,this.target.radius,this.target.height)):(this._controller.hide(),console.error("target is not a cc.ConeCollider")))}onTargetUpdate(){this.updateControllerData()}onNodeChanged(){this.updateControllerData()}getMaxScale(t){return Math.max(t.x,t.y,t.z)}}exports.default=ConeColliderComponentGizmo;