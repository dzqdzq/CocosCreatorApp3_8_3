"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),external_1=__importDefault(require("../../utils/external")),base_1=require("../base"),controller_joint_2d_1=require("./controller-joint-2d"),NodeUtils=external_1.default.NodeUtils,tempVec2_a=new cc_1.Vec2,tempVec3_a=new cc_1.Vec3,tempVec3_b=new cc_1.Vec3,tempQuat_a=new cc_1.Quat,tempMat4=new cc_1.Mat4;class Joint2DGizmo extends base_1.SelectGizmo{constructor(){super(...arguments),this._anchor=new cc_1.Vec2,this._connectedAnchor=new cc_1.Vec2,this._propPath=null,this._anchorColor=new cc_1.Color(16,180,245),this._connectedAnchorColor=new cc_1.Color(207,105,40)}init(){this.createController()}createController(){var t=this.getGizmoRoot();this._anchorController=new controller_joint_2d_1.Joint2DController(t),this._anchorController.editable=!0,this._anchorController.edit=!0,this._anchorController.setColor(this._anchorColor),this._anchorController.onControllerMouseDown=this.onAnchorControllerMouseDown.bind(this),this._anchorController.onControllerMouseMove=this.onAnchorControllerMouseMove.bind(this),this._anchorController.onControllerMouseUp=this.onAnchorControllerMouseUp.bind(this),this._connectedAnchorController=new controller_joint_2d_1.Joint2DController(t),this._connectedAnchorController.editable=!0,this._connectedAnchorController.edit=!0,this._connectedAnchorController.setColor(this._connectedAnchorColor),this._connectedAnchorController.onControllerMouseDown=this.onConnectedAnchorControllerMouseDown.bind(this),this._connectedAnchorController.onControllerMouseMove=this.onConnectedAnchorControllerMouseMove.bind(this),this._connectedAnchorController.onControllerMouseUp=this.onAnchorControllerMouseUp.bind(this)}onShow(){this._anchorController.show(),this.updateControllerData()}onHide(){this._anchorController.hide(),this._connectedAnchorController.hide()}onAnchorControllerMouseDown(){this.target&&(this._anchor.set(this.target.anchor),this._propPath=this.getCompPropPath("anchor"))}onAnchorControllerMouseMove(){var t,e;this._anchorController.updated&&this.target&&(this.onControlUpdate(this._propPath),t=this.target.node,e=this._anchorController.getDeltaPos(),tempVec3_a.set(e),t&&(t.getWorldMatrix(tempMat4),cc_1.Mat4.invert(tempMat4,tempMat4),cc_1.Vec3.transformMat4(tempVec3_a,tempVec3_a,tempMat4)),NodeUtils.makeVec3InPrecision(tempVec3_a,1),this.target.anchor.set(tempVec3_a.x,tempVec3_a.y),this.onComponentChanged(t))}onAnchorControllerMouseUp(){this.onControlEnd(this._propPath)}onConnectedAnchorControllerMouseDown(){this._isInitialized&&null!==this.target&&(this._connectedAnchor.set(this.target.connectedAnchor),this._propPath=this.getCompPropPath("connectedAnchor"))}onConnectedAnchorControllerMouseMove(){var t,e,o;this._connectedAnchorController.updated&&this.target&&(this.onControlUpdate(this._propPath),e=this.target.node,o=this._connectedAnchorController.getDeltaPos(),tempVec3_a.set(o),null!=(t=(o=this.target).connectedBody)&&t.node&&(null!=(t=o.connectedBody)&&t.node.getWorldMatrix(tempMat4),cc_1.Mat4.invert(tempMat4,tempMat4),cc_1.Vec3.transformMat4(tempVec3_a,tempVec3_a,tempMat4)),NodeUtils.makeVec3InPrecision(tempVec3_a,1),this.target.connectedAnchor.set(tempVec3_a.x,tempVec3_a.y),this.onComponentChanged(e))}updateControllerData(){this._isInitialized&&null!==this.target&&this.updateAnchorControllerData()}updateAnchorControllerData(){if(this.target){var e=this.target,o=e.anchor,o=(tempVec3_a.set(o.x,o.y,0),this.target.node);o.getWorldMatrix(tempMat4);let t=o.getWorldPosition();cc_1.Vec3.transformMat4(tempVec3_a,tempVec3_a,tempMat4),this._anchorController.updatePosition(t,tempVec3_a),this._connectedAnchorController.show();o=e.connectedAnchor;tempVec3_a.set(o.x,o.y,0),t=e.connectedBody?(e.connectedBody.node.getWorldMatrix(tempMat4),cc_1.Vec3.transformMat4(tempVec3_a,tempVec3_a,tempMat4),e.connectedBody.node.getWorldPosition()):new cc_1.Vec3(0,0,0),this._connectedAnchorController.updatePosition(t,tempVec3_a)}}onTargetUpdate(){this.updateControllerData()}onNodeChanged(){this.updateControllerData()}}exports.default=Joint2DGizmo;