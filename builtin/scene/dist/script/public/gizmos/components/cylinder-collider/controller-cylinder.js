"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const controller_shape_1=__importDefault(require("../../utils/controller-shape")),controller_utils_1=__importDefault(require("../../utils/controller-utils")),editable_1=__importDefault(require("../../controller/editable")),engine_1=__importDefault(require("../../utils/engine")),cc_1=require("cc"),{AttributeName,setMeshColor,getModel,updatePositions}=engine_1.default,axisDirMap=controller_utils_1.default.axisDirectionMap,AxisName=controller_utils_1.default.AxisName,tempVec3_a=new cc_1.Vec3,tempVec3_b=new cc_1.Vec3,tempVec3_c=new cc_1.Vec3,tempVec3_d=new cc_1.Vec3,tempVec3_e=new cc_1.Vec3,tempQuat_a=new cc_1.Quat;class CylinderController extends editable_1.default{get radius(){return this._radius}set radius(e){this.updateSize(this._center,e,this._height)}get height(){return this._height}set height(e){this.updateSize(this._center,this._radius,e)}get direction(){return this._direction}set direction(e){this._direction=e}constructor(e){super(e),this._oriDir=cc.v3(0,1,0),this._direction=cc_1.EAxisDirection.Y_AXIS,this._center=cc.v3(),this._radius=100,this._height=100,this._halfHeight=this._height/2,this._deltaRadius=0,this._deltaHeight=0,this._mouseDeltaPos=new cc_1.Vec2,this._curDistScalar=0,this._upperCapMC=[],this._lowerCapMC=[],this._sideLineMC=null,this._upperCapNode=[],this._lowerCapNode=[],this._sideLineNode=null,this._up=new cc_1.Vec3(0,1,0),this._right=new cc_1.Vec3(1,0,0),this._forward=new cc_1.Vec3(0,0,1),this._directionAxis=[new cc_1.Vec3(1,0,0),new cc_1.Vec3(0,1,0),new cc_1.Vec3(0,0,1)],this._editHandleKeys=Object.keys(axisDirMap),this.initShape()}setColor(t){this._upperCapNode.forEach(e=>{setMeshColor(e,t)}),this._lowerCapNode.forEach(e=>{setMeshColor(e,t)}),setMeshColor(this._sideLineNode,t),this.setEditHandlesColor(t),this._color=t}_updateEditHandle(e){var t=this._handleDataMap[e].topNode,i=axisDirMap[e],s=tempVec3_a.set(this._directionAxis[this._direction]),c=tempVec3_b;c.set(0,0,0),"y"===e?cc_1.Vec3.multiplyScalar(c,s,this._halfHeight):"neg_y"===e?cc_1.Vec3.multiplyScalar(c,s,-this._halfHeight):(cc_1.Vec3.multiplyScalar(c,i,this._radius),this._direction!==cc_1.EAxisDirection.Y_AXIS&&(e=tempQuat_a,cc_1.Quat.rotationTo(e,this._up,s),cc_1.Vec3.transformQuat(c,c,e))),c.add(this._center),cc_1.Vec3.multiply(c,c,this.getScale()),t.setPosition(c)}initShape(){this.createShapeNode("CylinderController"),this.getUpperCapData(this._center,this._radius,this._height).forEach((e,t)=>{this._upperCapNode[t]=controller_utils_1.default.createShapeByData(e,this._color),this._upperCapNode[t].parent=this.shape,this._upperCapMC[t]=getModel(this._upperCapNode[t])});this.getLowerCapData(this._center,this._radius,this._height).forEach((e,t)=>{this._lowerCapNode[t]=controller_utils_1.default.createShapeByData(e,this._color),this._lowerCapNode[t].parent=this.shape,this._lowerCapMC[t]=getModel(this._lowerCapNode[t])});var e=this.getSideLinesData(this._center,this._radius,this._height);this._sideLineNode=controller_utils_1.default.createShapeByData(e,this._color),this._sideLineNode.parent=this.shape,this._sideLineMC=getModel(this._sideLineNode),this.hide()}updateSize(e,t,i){this._center=e,this._radius=t,this._height=i,this._halfHeight=i/2,this.getUpperCapData(this._center,this._radius,this._height).forEach((e,t)=>{updatePositions(this._upperCapMC[t],e.positions)});this.getLowerCapData(this._center,this._radius,this._height).forEach((e,t)=>{updatePositions(this._lowerCapMC[t],e.positions)});e=this.getSideLinesData(this._center,this._radius,this._height);updatePositions(this._sideLineMC,e.positions),this._edit&&this.updateEditHandles(),this.adjustEditHandlesSize()}onMouseDown(e){this._mouseDeltaPos=cc.v2(0,0),this._curDistScalar=super.getDistScalar(),this._deltaRadius=0,this._deltaHeight=0,this.onControllerMouseDown&&this.onControllerMouseDown(e)}onMouseMove(e){var t,i,s;this._isMouseDown&&(this._mouseDeltaPos.x+=e.moveDeltaX,this._mouseDeltaPos.y+=e.moveDeltaY,s=axisDirMap[e.handleName],t=tempVec3_a.set(this._directionAxis[this._direction]),i=tempQuat_a,cc_1.Quat.rotationTo(i,this._up,t),cc_1.Vec3.transformQuat(t,s,i),s=this.getAlignAxisMoveDistance(this.localToWorldDir(t),this._mouseDeltaPos)*this._curDistScalar,"y"===e.handleName||"neg_y"===e.handleName?this._deltaHeight=s:this._deltaRadius=s,this.onControllerMouseMove)&&this.onControllerMouseMove(e)}onMouseUp(e){this.onControllerMouseUp&&this.onControllerMouseUp(e)}onMouseLeave(e){this.onMouseUp(e)}getDeltaRadius(){return this._deltaRadius}getDeltaHeight(){return this._deltaHeight}getUpperCapData(e,t,i){var s,c,a=[],i=i/2,r=cc_1.Vec3.copy(tempVec3_a,this._up),_=cc_1.Vec3.copy(tempVec3_b,this._right),o=cc_1.Vec3.copy(tempVec3_c,this._forward),h=tempVec3_d,i=tempVec3_e.set(0,i,0);return this._direction!==cc_1.EAxisDirection.Y_AXIS&&(s=this._directionAxis[this._direction],c=tempQuat_a,cc_1.Quat.rotationTo(c,this._up,s),cc_1.Vec3.transformQuat(i,i,c),cc_1.Vec3.transformQuat(r,r,c),cc_1.Vec3.transformQuat(_,_,c),cc_1.Vec3.transformQuat(o,o,c)),cc_1.Vec3.add(h,e,i),a[0]=controller_shape_1.default.calcArcData(h,r,_,this._twoPI,t),a}getLowerCapData(e,t,i){var s,c,a=[],i=i/2,r=cc_1.Vec3.copy(tempVec3_a,this._up),_=cc_1.Vec3.copy(tempVec3_b,this._right),o=cc_1.Vec3.copy(tempVec3_c,this._forward),h=tempVec3_d,i=tempVec3_e.set(0,-i,0);return this._direction!==cc_1.EAxisDirection.Y_AXIS&&(s=this._directionAxis[this._direction],c=tempQuat_a,cc_1.Quat.rotationTo(c,this._up,s),cc_1.Vec3.transformQuat(i,i,c),cc_1.Vec3.transformQuat(r,r,c),cc_1.Vec3.transformQuat(_,_,c),cc_1.Vec3.transformQuat(o,o,c)),cc_1.Vec3.add(h,e,i),a[0]=controller_shape_1.default.calcArcData(h,r,_,this._twoPI,t),a}getSideLinesData(c,e,t){var i=[];const a=[];t/=2;return i.push(new cc_1.Vec3(e,t,0)),i.push(new cc_1.Vec3(e,-t,0)),i.push(new cc_1.Vec3(-e,t,0)),i.push(new cc_1.Vec3(-e,-t,0)),i.push(new cc_1.Vec3(0,t,e)),i.push(new cc_1.Vec3(0,-t,e)),i.push(new cc_1.Vec3(0,t,-e)),i.push(new cc_1.Vec3(0,-t,-e)),i.forEach((e,t)=>{var i,s;this._direction!==cc_1.EAxisDirection.Y_AXIS&&(i=this._directionAxis[this._direction],s=tempQuat_a,cc_1.Quat.rotationTo(s,this._up,i),cc_1.Vec3.transformQuat(e,e,s)),cc_1.Vec3.add(e,e,c),a.push(t)}),controller_shape_1.default.calcLinesData(i,a,!1)}}exports.default=CylinderController;