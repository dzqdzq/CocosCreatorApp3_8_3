"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o);var i=Object.getOwnPropertyDescriptor(t,o);i&&("get"in i?t.__esModule:!i.writable&&!i.configurable)||(i={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,r,i)}:function(e,t,o,r){e[r=void 0===r?o:r]=t[o]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&__createBinding(t,e,o);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.lightProbeInfo=void 0;const base_1=__importDefault(require("../../controller/base")),controller_utils_1=__importDefault(require("../../utils/controller-utils")),cc_1=require("cc"),index_1=__importDefault(require("../../utils/engine/index")),set_util_1=__importStar(require("../../utils/set-util")),addMeshToNode=index_1.default["addMeshToNode"],sceneGlobals=()=>{var e;return null==(e=cc_1.director.getScene())?void 0:e.globals};class LightProbeController extends base_1.default{static get Name(){return"LightProbeGroupController_"+LightProbeController.Count++}set positionGizmo(e){e&&!e.controller&&e.init(),this._gizmoEventListener||(this._gizmoEventListener=new LightProbeGizmoMouseEventListener(this)),this.positionGizmo&&this.positionGizmo.removeMouseEventListener(this._gizmoEventListenerIndex),e&&(e.nodes=[],this._gizmoEventListenerIndex=e.addMouseEventListener(this._gizmoEventListener)),this._positionGizmo=e}get positionGizmo(){return this._positionGizmo}get currentProbesArray(){return Array.from(this._currentProbes.entries()).map(e=>({key:e[0],nodeProbe:e[1]}))}get probeSphere(){return this._probeSphere}constructor(e,t){super(e),this.gizmo=t,this._lockSize=!0,this.debounceUpdate=null,this._isInitialized=!1,this._probePool=[],this._currentProbes=new Map,this._currentSelectedProbeNames=new set_util_1.default,this._probeSphere=controller_utils_1.default.create3DNode("ProbeSphere"),this._shouldDiffOnNextUpdate=!1,this._editMode=!1,this._lightProbeInfo=lightProbeInfo,this._gizmoEventListenerIndex="",this.TetrahedronNode=controller_utils_1.default.create3DNode("InnerTetrahedron"),this._positionGizmo=null,this.tempAdjustSizeV3=new cc_1.Vec3,this.initShape(),this.registerCameraMovedEvent()}initShape(){this.createShapeNode(LightProbeController.Name),this._probeSphere.parent=this.shape,this.TetrahedronNode.parent&&LightProbeController.OuterCell.parent||(this.TetrahedronNode.parent=this.shape,LightProbeController.OuterCell.parent=this.shape),this.clearLayer(this.TetrahedronNode),this.clearLayer(LightProbeController.OuterCell)}adjustControllerSize(){this.updateLightProbeInfo();for(var[e,t]of this._currentProbes)this.tempAdjustSizeV3.set(this._lightProbeInfo.lightProbeSphereVolume,this._lightProbeInfo.lightProbeSphereVolume,this._lightProbeInfo.lightProbeSphereVolume),this.tempAdjustSizeV3.multiplyScalar(.06),t.node.setScale(this.tempAdjustSizeV3)}show(){this.gizmo.target&&(super.show(),!this._probeSphere.worldPosition.equals(this.gizmo.target.node.worldPosition))&&this.gizmo.target&&this.gizmo.target.onProbeChanged(!0,!0)}updateController(){this.updateNodeTransformInfo(this._probeSphere),this.updateLightProbeInfo(),this._probeSphere.active=this._lightProbeInfo.showProbe,this._probeSphere.active&&this.updateProbes(),this.updateLines(),cce.Engine.repaintInEditMode(),this.debounceUpdate&&clearTimeout(this.debounceUpdate),this.debounceUpdate=setTimeout(()=>{this.updateLines(),this.updateProbesColor(),cce.Engine.repaintInEditMode(),this.debounceUpdate=null},250),this._isInitialized=!0,super.updateController(),this.adjustControllerSize(),cce.Engine.repaintInEditMode()}updateProbes(){if(this.gizmo.target){var e=this.gizmo.target,t=this.gizmo.target.node.worldPosition,o=(0,cc_1.v3)();if(e.probes.length!==this._currentProbes.size||this._shouldDiffOnNextUpdate){this._shouldDiffOnNextUpdate=!1;var r=this.diff();this.releaseProbeNodes(r),cce.Engine.repaintInEditMode()}else for(var[i,s]of this.currentProbesArray.entries())s.nodeProbe.probe=e.probes[i],o.set(t),s.nodeProbe.node.setWorldPosition(o.add(s.nodeProbe.probe));this.updateProbesColor(),this.updatePositionGizmo()}}updateLines(){var e;this.gizmo.target&&(e=this._lightProbeInfo.showWireframe,e=(this.TetrahedronNode.active=e)?this.updateWireframe():new Set,LightProbeController.OuterCell.active=this._lightProbeInfo.showConvex,LightProbeController.OuterCell.active)&&this.updateConvex(e)}updateWireframe(){var e=null==(e=null==(e=sceneGlobals())?void 0:e.lightProbeInfo)?void 0:e.data,t=null!=(t=null==e?void 0:e.probes)?t:[];if(0===t.length)return this.TetrahedronNode.active=!1,new Set;this.TetrahedronNode.active=!0;var t=t.map(e=>e.position),e=null!=(e=null==e?void 0:e.tetrahedrons)?e:[],o=[],r=new Set;for(const h of e)if(h.isInnerTetrahedron()&&0<=h.vertex3){const a=[h.vertex0,h.vertex1,h.vertex2,h.vertex3];var i=LightProbeController.TetrahedronLines.map(e=>a[e]);for(let e=0;e<i.length;e+=2){var s=i[e],n=i[e+1],l=s+"-"+n;r.has(l)||r.has(n+"-"+s)||(o.push(i[e],i[e+1]),r.add(l))}}return 0<t.length&&0<o.length&&this.updateLinesNode(this.TetrahedronNode,(0,cc_1.v3)(0,0,0),t,o),r}updateConvex(t=new Set){LightProbeController.OuterCell.active=this._lightProbeInfo.showConvex;var e,o=null==(o=null==(o=sceneGlobals())?void 0:o.lightProbeInfo)?void 0:o.data,r=null!=(e=null==o?void 0:o.probes)?e:[];if(0===r.length)LightProbeController.OuterCell.active=!1;else{LightProbeController.OuterCell.active=!0;o=null!=(e=null==o?void 0:o.tetrahedrons)?e:[];const b=r.map(e=>e.position);var i=new Vec3Set,s=[];for(const g of o)if(g.isOuterCell()&&g.vertex3<0){var n=(0,cc_1.v3)(b[g.vertex0]).add(r[g.vertex0].normal),l=(0,cc_1.v3)(b[g.vertex1]).add(r[g.vertex1].normal),h=(0,cc_1.v3)(b[g.vertex2]).add(r[g.vertex2].normal),n=i.add(n)+b.length,l=i.add(l)+b.length,h=i.add(h)+b.length;const p=[g.vertex0,g.vertex1,g.vertex2,n,l,h];var a=LightProbeController.OuterCellLines.map(e=>p[e]);for(let e=0;e<a.length;e+=2){var d=a[e],u=a[e+1],c=""+d+u;t.has(c)||t.has(""+u+d)||(s.push(a[e],a[e+1]),t.add(c))}}i.forEach(e=>{b.push(e)}),0<b.length&&0<s.length&&this.updateLinesNode(LightProbeController.OuterCell,(0,cc_1.v3)(0,0,0),b,s,LightProbeController.ConvexColor)}return[]}updateLightProbeInfo(){var e;this._lightProbeInfo.update(null==(e=sceneGlobals())?void 0:e.lightProbeInfo)}createProbeNode(e){let t=this._probePool.shift();if(!t){var o={instancing:!0,depthTestForTriangles:!0};this._reuseAbleMesh?(t=controller_utils_1.default.create3DNode(),addMeshToNode(t,this._reuseAbleMesh,o)):t=controller_utils_1.default.sphere((0,cc_1.v3)(0,0,0),5,LightProbeController.ProbeColor,o);const r=t.getComponent(cc_1.MeshRenderer);null!==r&&void 0!==r&&r.mesh&&!this._reuseAbleMesh&&(this._reuseAbleMesh=r.mesh)}t.name=LightProbeController.LightProbeSphereName+"_"+t.uuid.replace(/\//g,"_"),t.parent=this._probeSphere,t.setPosition((0,cc_1.v3)(e));const r=t.getComponent(cc_1.MeshRenderer);return r&&r.model&&r.model.updateWorldBound(),t.active=!0,this._editMode&&this.initHandle(t,t.name),this._currentProbes.set(t.name,{node:t,probe:e,meshRenderer:r}),t}updateProbesColor(){for(var[e,t]of this._currentProbes)this.fastSetMeshColor(t.node,LightProbeController.ProbeColor,t);this.currentSelectedProbes.forEach(e=>{this.fastSetMeshColor(e.node,LightProbeController.SelectedProbeColor,e)})}fastSetMeshColor(o,e,t){let r=e.a;o.active=!0,o.modelColor&&(r=o.modelColor.a),o.modelColor=e.clone(),o.modelColor.a=r;var i=null==(e=o.modelComp)?void 0:e.material;if(i&&i.passes[0])for(let e=0,t=i.passes.length;e<t;e++){var s=i.passes[e].getHandle(LightProbeController.meshColorUniformName);i.passes[e].setUniform(s,o.modelColor)}}updateLinesNode(e,t,o,r,i=LightProbeController.WireFrameColor){controller_utils_1.default.drawLines(e,o,r,i),e.setPosition(t)}releaseProbeNodes(e){for(const t of e)this._probePool.push(t.node),t.node.active=!1,this.removeHandle(t.node.name),this._currentProbes.delete(t.node.name);this.clearCurrentSelectedProbe(e.map(e=>e.node.name)),this._editMode&&this.positionGizmo&&(this.positionGizmo.nodes=cce.Gizmo.globalSelectProbes.map(e=>e.node))}updateNodeTransformInfo(e){this.gizmo.target&&(e.setScale(this.gizmo.target.node.scale),e.setRotation(this.gizmo.target.node.rotation),e.setWorldPosition(this.gizmo.target.node.worldPosition))}onShow(){var e;this._editMode||this.clearCurrentSelectedProbe(),this._isInitialized&&this.updateController(),null!=(e=this._positionGizmo)&&e.show()}onHide(){}onMouseDown(e){var t;this._editMode&&null!=(t=super.onMouseDown)&&t.call(this,e)}onMouseMove(e){var t;this._editMode&&null!=(t=super.onMouseMove)&&t.call(this,e)}onMouseUp(e){var t;this._editMode&&null!=(t=super.onMouseUp)&&t.call(this,e)}get currentSelectedProbes(){return Array.from(this._currentSelectedProbeNames).filter(e=>this._currentProbes.has(e)).map(e=>this._currentProbes.get(e))}selectProbe(e){this._currentSelectedProbeNames.addAll(e),this.updateProbesColor(),this.updatePositionGizmo(),cce.Engine.repaintInEditMode()}unselectProbe(e){this._currentSelectedProbeNames.deleteAll(e),this.updateProbesColor(),this.updatePositionGizmo(),cce.Engine.repaintInEditMode()}clearCurrentSelectedProbe(e){for(const t of e=null!=e?e:Array.from(this._currentSelectedProbeNames))this._currentSelectedProbeNames.has(t)&&this._currentSelectedProbeNames.delete(t);this.updateProbesColor()}updatePositionGizmo(){var e;this.positionGizmo&&this._editMode&&(0<(e=0===cce.Gizmo.globalSelectProbes.length?this.currentSelectedProbes:cce.Gizmo.globalSelectProbes).length?(this.positionGizmo.nodes=e.map(e=>{var t;return null!=(t=null==(t=e.meshRenderer)?void 0:t.model)&&t.updateWorldBound(),e.node}),this.positionGizmo.show(),this.positionGizmo.updateControllerTransform()):this.positionGizmo.hide())}lightProbeEditModeChanged(e){if(this._editMode=e)for(var[t,o]of this._currentProbes)this.initHandle(o.node,t);else{for(var[r,i]of this._currentProbes)this.removeHandle(r);this.clearCurrentSelectedProbe()}cce.Engine.repaintInEditMode()}boundingBoxEditModeChanged(e){e?this.clearProbeNodesLayer():this.restoreProbeNodesLayer()}duplicateCurrentSelectedProbes(){var e=this.currentSelectedProbes;if(0===e.length)return new set_util_1.default;this.gizmo.onControlBegin(null);var t=new set_util_1.default;for(const i of e){var o=(0,cc_1.v3)(i.probe),r=this.createProbeNode(o);t.add(r),this.gizmo.target&&this.gizmo.target.probes.push(o)}return this._shouldDiffOnNextUpdate=!0,this.gizmo.target&&this.gizmo.target.onProbeChanged(!1,!0),this.gizmo.onControlEnd(null),this.adjustControllerSize(),t}deleteCurrentSelectedProbes(){var e=this.currentSelectedProbes;if(0===e.length)return new set_util_1.default;this.gizmo.onControlBegin(null);var t=new set_util_1.default;this.releaseProbeNodes(this.currentSelectedProbes),this.clearCurrentSelectedProbe();for(const o of e)this._currentProbes.delete(o.node.name),t.add(o.node);return this.gizmo.target&&(this.gizmo.target.probes=Array.from(this._currentProbes.values()).map(e=>e.probe),this._shouldDiffOnNextUpdate=!0,this.gizmo.target.onProbeChanged()),this.gizmo.onControlEnd(null),t}clearLayer(e){e.layer=cc_1.Layers.makeMaskInclude([cc_1.Layers.Enum.IGNORE_RAYCAST,cc_1.Layers.Enum.GIZMOS]),e.children.forEach(e=>this.clearLayer(e))}restoreLayer(e){e.layer=cc_1.Layers.Enum.GIZMOS,e.children.forEach(e=>this.restoreLayer(e))}clearProbeNodesLayer(){this.clearLayer(this._probeSphere)}restoreProbeNodesLayer(){this.restoreLayer(this._probeSphere)}diff(){var e=this.gizmo.target;const o=e?e.probes:[];var r=Array.from(this._currentProbes.values());this._currentProbes.clear();for(let t=0;t<o.length;t++){var i,s=r.findIndex(e=>{return null!=(e=null==e?void 0:e.probe.equals(o[t]))&&e});-1===s?this.createProbeNode(o[t]):r[s]&&(i=r[s],this._currentProbes.set(i.node.name,i),r[s]=null)}return r.filter(e=>!!e)}onNotGizmoMouseDown(e){}onNotGizmoMouseMove(e){}onNotGizmoMouseUp(e){}shouldEmitNodes(){return(0,set_util_1.toSet)(Array.from(this._currentProbes.values()).map(e=>e.node.uuid))}select(e){this.gizmo.visible()&&(e=e.mapSet(e=>e.name),this.selectProbe(e))}selectAll(){var e;this.gizmo.visible()&&(e=this._currentProbes.keys(),this.selectProbe(e))}unselect(e){this.gizmo.visible()&&(e=e.mapSet(e=>e.name),this.unselectProbe(e))}unselectAll(){var e;this.gizmo.visible()&&(e=this._currentProbes.keys(),this.unselectProbe(e))}currentSelectedNodes(){return(0,set_util_1.toSet)(this.currentSelectedProbes.map(e=>e.node))}lightProbeInfoChanged(){this.updateController(),cce.Engine.repaintInEditMode()}hideAllChildren(){var e;for(const t of null!=(e=null==(e=this.shape)?void 0:e.children)?e:[])t.active=!1}}(exports.default=LightProbeController).ProbeColor=new cc_1.Color("F1A348"),LightProbeController.SelectedProbeColor=new cc_1.Color("40AACA"),LightProbeController.WireFrameColor=new cc_1.Color("FCE7C4"),LightProbeController.ConvexColor=cc_1.Color.WHITE,LightProbeController.Count=0,LightProbeController.globalNodeCurrentProbes=new Map,LightProbeController.LightProbeSphereName="LightProbeSphere",LightProbeController.OuterCell=controller_utils_1.default.create3DNode("OuterCell"),LightProbeController.tempColor=new cc_1.Color,LightProbeController.meshColorUniformName="mainColor",LightProbeController.TetrahedronLines=[0,1,0,2,0,3,1,2,1,3,2,3],LightProbeController.OuterCellLines=[0,1,0,2,1,2,0,3,1,4,2,5];class LightProbeGizmoMouseEventListener{constructor(e){this.controller=e,this.undoID="",this.recording=!1}onControlBegin(){if(!this.recording){const t=[];cce.Gizmo.walkAllLightProbeGizmoListener(e=>e.target&&t.push(e.target.uuid)),this.undoID=cce.SceneFacadeManager.beginRecording(t),this.recording=!0}}onControlEnd(){this.recording&&this.undoID&&(cce.SceneFacadeManager.endRecording(this.undoID),this.recording=!1)}onControllerMouseMove(e){this.onControlBegin(),cce.Gizmo.walkAllLightProbeGizmoListener(e=>{for(const t of e._controller.currentSelectedProbes)t.probe.set(t.node.position);e._controller.adjustControllerSize(),e._controller.gizmo.target&&e._controller.gizmo.target.onProbeChanged(!1,!1),e._controller.updateLines()}),cce.Engine.repaintInEditMode()}onControllerMouseUp(e){cce.Gizmo.walkAllLightProbeGizmoListener(e=>{for(const t of e._controller.currentSelectedProbes)t.probe.set(t.node.position);e._controller.adjustControllerSize(),e._controller.gizmo.target&&e._controller.gizmo.target.onProbeChanged(!0,!0)}),this.onControlEnd()}}class LightProbeInfo{constructor(e=!0,t=!0,o=!1,r=1){this.showProbe=e,this.showWireframe=t,this.showConvex=o,this.lightProbeSphereVolume=r}update(e){var t;this.showProbe=null!=(t=null==e?void 0:e.showProbe)?t:this.showProbe,this.showWireframe=null!=(t=null==e?void 0:e.showWireframe)?t:this.showWireframe,this.showConvex=null!=(t=null==e?void 0:e.showConvex)?t:this.showConvex,this.lightProbeSphereVolume=null!=(t=null==e?void 0:e.lightProbeSphereVolume)?t:this.lightProbeSphereVolume}}const lightProbeInfo=new LightProbeInfo;exports.lightProbeInfo=lightProbeInfo;class Vec3Set{constructor(e=[]){this._v3s=e,this._map=new Map;for(var[t,o]of e.entries())this._map.set(o.toString(),t)}get v3s(){return this._v3s}add(e){var t=e.toString();return this._map.has(t)?this._map.get(t):(this._map.set(t,this._v3s.length),this._v3s.push(e),this._v3s.length-1)}clear(){this._map.clear(),this._v3s.length=0}has(e){return this._map.has(e.toString())}get size(){return this._v3s.length}indexOf(e){return null!=(e=this._map.get(e.toString()))?e:-1}forEach(e){this._v3s.forEach(e)}}