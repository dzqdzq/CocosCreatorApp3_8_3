"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),base_1=__importDefault(require("./base")),controller_utils_1=__importDefault(require("../utils/controller-utils")),external_1=__importDefault(require("../utils/external")),misc_1=__importDefault(require("../utils/misc")),engine_1=__importDefault(require("../utils/engine")),selection_1=__importDefault(require("../../../3d/manager/selection")),{setNodeOpacity,setMaterialProperty}=engine_1.default,NodeUtils=external_1.default.NodeUtils,EditorCamera=external_1.default.EditorCamera,axisDirMap=controller_utils_1.default.axisDirectionMap,AxisName=controller_utils_1.default.AxisName,SceneGizmoLayer=cc_1.Layers.Enum.SCENE_GIZMO,ORTHO=cc_1.Camera.ProjectionType.ORTHO,PERSPECTIVE=cc_1.Camera.ProjectionType.PERSPECTIVE,camera_forward=new cc_1.Vec3(0,0,-1),tempVec3_a=new cc_1.Vec3,tempVec3_b=new cc_1.Vec3,tempQuat_a=new cc_1.Quat;class WorldAxisController extends base_1.default{constructor(e,t){super(e),this._defaultSize=2,this._cameraOffset=new cc_1.Vec3(0,0,40),this._viewDist=40,this._textNodeMap=new Map,this._sceneGizmoCamera=t,this.initShape()}createAxis(e,t,a){t=controller_utils_1.default.arrow(5,2,6,t,{forwardPipeline:!0,bodyBBSize:0});t.name=e+"Axis",t.children.forEach(e=>{e.layer=SceneGizmoLayer}),t.name=e+"Axis",t.parent=this.shape,NodeUtils.setEulerAngles(t,a),this.initHandle(t,e)}initShape(){this.createShapeNode("WorldAxisController"),this.createAxis("x",cc_1.Color.RED,(0,cc_1.v3)(0,0,-90)),this.createAxis("y",cc_1.Color.GREEN,(0,cc_1.v3)()),this.createAxis("z",cc_1.Color.BLUE,(0,cc_1.v3)(90,0,0));var e=new cc_1.Color(230,230,230),e=(this.createAxis("neg_x",e,(0,cc_1.v3)(0,0,90)),this.createAxis("neg_y",e,(0,cc_1.v3)(0,0,180)),this.createAxis("neg_z",e,(0,cc_1.v3)(-90,0,0)),controller_utils_1.default.cube(5,5,5,e,void 0,{forwardPipeline:!0}));e.name="Center",e.parent=this.shape,e.layer=SceneGizmoLayer,this.initHandle(e,"center"),this.createAxisText(AxisName.x,"ac74fa2b-1f5b-4ff5-a3f0-f127f4483e91@6c48a",cc_1.Color.RED),this.createAxisText(AxisName.y,"7b5313d0-f1aa-4b1b-a3c8-59d523c35301@6c48a",cc_1.Color.GREEN),this.createAxisText(AxisName.z,"389d5fee-e29c-4221-b397-a4934a0a5694@6c48a",cc_1.Color.BLUE),this.registerCameraMovedEvent(),this.hide()}setTexture(e,t){setMaterialProperty(e,"mainTexture",t)}setTextureByUUID(a,e){cc_1.assetManager.loadAny(e,(e,t)=>{t&&(this.setTexture(a,t),cce.Engine.repaintInEditMode())})}createAxisText(e,t,a){var r=this._handleDataMap[e],a=controller_utils_1.default.quad(cc_1.Vec3.ZERO,3,3,cc_1.Vec3.UNIT_Z,a,{texture:!0,needBoundingBox:!1});this.setTextureByUUID(a,t),a.setPosition(0,12,0),a.parent=r.topNode,a.layer=SceneGizmoLayer,this._textNodeMap.set(e,a)}onMouseUp(e){if("center"===e.handleName)EditorCamera.changeProjection();else{e=axisDirMap[e.handleName];const t=selection_1.default.query();t.length||(EditorCamera.controller3D.lastFocusNodeUUID=[]),EditorCamera.rotateCameraToDir(e,Boolean(EditorCamera.controller3D.lastFocusNodeUUID.length&&EditorCamera.controller3D.lastFocusNodeUUID.every(e=>t.includes(e))))}}onHoverIn(e){this.setHandleColor(e.handleName,cc_1.Color.YELLOW)}onHoverOut(){this.resetHandleColor()}onEditorCameraMoved(){const t=tempQuat_a;EditorCamera.camera.node.getWorldRotation(t),this._textNodeMap.forEach(e=>{null!=e&&e.setWorldRotation(t)}),cc_1.Vec3.transformQuat(tempVec3_a,camera_forward,t),Object.keys(this._handleDataMap).forEach(e=>{const a=this._handleDataMap[e];e=axisDirMap[e];if(e){const r=255*misc_1.default.LimitLerp(1,0,Math.abs(cc_1.Vec3.dot(tempVec3_a,e)),.9,1);e=a.rendererNodes;e&&e.forEach((e,t)=>{r<10?e.active=!1:(e.active=!0,setNodeOpacity(e,r),a.oriOpacities[t]=r)})}});var e=this._sceneGizmoCamera.node;cc_1.Vec3.transformQuat(tempVec3_b,this._cameraOffset,t),cc_1.Vec3.add(tempVec3_b,this.getPosition(),tempVec3_b),e.setWorldPosition(tempVec3_b),cc_1.Vec3.transformQuat(tempVec3_b,cc_1.Vec3.UNIT_Y,t),cc_1.Vec3.normalize(tempVec3_b,tempVec3_b),e.lookAt(this.getPosition(),tempVec3_b)}onCameraProjectionChanged(e){(this._sceneGizmoCamera.projection=e)===PERSPECTIVE?(this._sceneGizmoCamera.node.getWorldRotation(tempQuat_a),cc_1.Vec3.transformQuat(tempVec3_a,cc_1.Vec3.UNIT_Z,tempQuat_a),cc_1.Vec3.normalize(tempVec3_a,tempVec3_a),cc_1.Vec3.multiplyScalar(tempVec3_a,tempVec3_a,this._viewDist),cc_1.Vec3.add(tempVec3_a,this.getPosition(),tempVec3_a),this._sceneGizmoCamera.node.setWorldPosition(tempVec3_a)):(e=this._sceneGizmoCamera.fov,e=Math.tan(e/2*Math.PI/180)*this._viewDist,this._sceneGizmoCamera.orthoHeight=e)}}exports.default=WorldAxisController;