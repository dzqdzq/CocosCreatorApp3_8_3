"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),editable_1=__importDefault(require("./editable")),controller_shape_1=__importDefault(require("../utils/controller-shape")),controller_utils_1=__importDefault(require("../utils/controller-utils")),engine_1=__importDefault(require("../utils/engine")),{setMeshColor,getModel,updatePositions}=engine_1.default,axisDirMap=controller_utils_1.default.axisDirectionMap,AxisName=controller_utils_1.default.AxisName,tempVec3=new cc_1.Vec3;class CircleController extends editable_1.default{constructor(e){super(e),this._oriDir=new cc_1.Vec3(0,0,-1),this._center=new cc_1.Vec3,this._radius=100,this._arc=360,this._deltaRadius=0,this._circleNode=null,this._circleFromDir=new cc_1.Vec3(1,0,0),this._circleMR=null,this._mouseDeltaPos=new cc_1.Vec2,this._curDistScalar=0,this._controlDir=new cc_1.Vec3,this._editHandleKeys=[AxisName.x,AxisName.y,AxisName.neg_x,AxisName.neg_y],this.initShape()}get radius(){return this._radius}set radius(e){this.updateSize(this._center,e,this._arc)}setColor(e){this._circleNode&&setMeshColor(this._circleNode,e),this.setEditHandlesColor(e),this._color=e}_updateEditHandle(e){var t=this._handleDataMap[e].topNode,e=axisDirMap[e],i=new cc_1.Vec3,e=(cc_1.Vec3.multiplyScalar(tempVec3,e,this._radius),i.add(tempVec3),cc_1.Vec3.multiply(i,i,this.getScale()),new cc_1.Vec3(i));e.add(this._center),t.setPosition(e)}initShape(){this.createShapeNode("CircleController");var e=controller_utils_1.default.arc(this._center,this._oriDir,this._circleFromDir,this._twoPI,this._radius,this._color);e.parent=this.shape,this._circleNode=e,this._circleMR=getModel(e),this.hide()}updateSize(e,t,i){this._center=e,this._radius=t,this._arc=i;e=controller_shape_1.default.calcArcPoints(this._center,this._oriDir,this._circleFromDir,-this._arc*this._degreeToRadianFactor,this._radius);this._circleMR&&updatePositions(this._circleMR,e),this._edit&&this.updateEditHandles(),this.adjustEditHandlesSize()}onMouseDown(e){this._mouseDeltaPos=new cc_1.Vec2(0,0),this._curDistScalar=super.getDistScalar(),this._deltaRadius=0,this._controlDir=cc.v3(),this.onControllerMouseDown&&this.onControllerMouseDown(e)}onMouseMove(e){var t;this._isMouseDown&&(this._mouseDeltaPos.x+=e.moveDeltaX,this._mouseDeltaPos.y+=e.moveDeltaY,t=axisDirMap[e.handleName],this._controlDir=t,t=this.getAlignAxisMoveDistance(this.localToWorldDir(t),this._mouseDeltaPos)*this._curDistScalar,this._deltaRadius=t,this.onControllerMouseMove)&&this.onControllerMouseMove(e)}onMouseUp(e){this.onControllerMouseUp&&this.onControllerMouseUp(e)}onMouseLeave(e){this.onMouseUp(e)}getDeltaRadius(){return this._deltaRadius}getControlDir(){return this._controlDir}}exports.default=CircleController;