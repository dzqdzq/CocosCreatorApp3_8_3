"use strict";var DiscHandleType,__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),editable_1=__importDefault(require("./editable")),controller_shape_1=__importDefault(require("../utils/controller-shape")),controller_utils_1=__importDefault(require("../utils/controller-utils")),engine_1=__importDefault(require("../utils/engine")),external_1=__importDefault(require("../utils/external")),{AttributeName,setMeshColor,setNodeOpacity,getNodeOpacity,getModel,updatePositions,panPlaneLayer,updateBoundingBox}=engine_1.default,EditorMath=external_1.default.EditorMath,axisDirMap=controller_utils_1.default.axisDirectionMap,AxisName=controller_utils_1.default.AxisName,tempVec3=new cc_1.Vec3,tempVec3_a=new cc_1.Vec3,tempVec3_b=new cc_1.Vec3;!function(e){e.None="none",e.Left="neg_x",e.Right="x",e.Top="y",e.Bottom="neg_y",e.Area="area"}(DiscHandleType=DiscHandleType||{});class DiscController extends editable_1.default{constructor(e){super(e),this._oriDir=new cc_1.Vec3(0,0,-1),this._center=new cc_1.Vec3,this._radius=100,this._arc=360,this._deltaRadius=0,this._deltaPos=new cc_1.Vec3,this._circleNode=null,this._circleFromDir=new cc_1.Vec3(1,0,0),this._circleMR=null,this._panPlane=null,this._areaMR=null,this._areaColor=cc_1.Color.GREEN,this._areaOpacity=0,this._mouseDeltaPos=new cc_1.Vec2,this._mouseDownOnPlanePos=new cc_1.Vec3,this._curDistScalar=0,this._controlDir=new cc_1.Vec3,this._curHandleType=DiscHandleType.None,this._editHandleKeys=[AxisName.x,AxisName.y,AxisName.neg_x,AxisName.neg_y],this.initShape()}get radius(){return this._radius}set radius(e){this.updateSize(this._center,e,this._arc)}setColor(e){setMeshColor(this._circleNode,e),this.setEditHandlesColor(e),this._color=e}setAreaColor(e){this._areaColor=e,this._areaNode&&setMeshColor(this._areaNode,e)}setAreaOpacity(e){this._areaOpacity=e,this._areaNode&&setNodeOpacity(this._areaNode,e)}showEditHandles(){super.showEditHandles(),this._areaNode&&(this._areaNode.active=!0)}hideEditHandles(){super.hideEditHandles(),this._areaNode&&(this._areaNode.active=!1)}isBorder(e){return e===DiscHandleType.Left||e===DiscHandleType.Right||e===DiscHandleType.Top||e===DiscHandleType.Bottom}initShape(){this.createShapeNode("CircleController");var e=controller_utils_1.default.arc(this._center,this._oriDir,this._circleFromDir,this._twoPI,this._radius,this._color);e.parent=this.shape,this._circleNode=e,this._circleMR=getModel(e),this.hide()}onInitEditHandles(){var e=controller_utils_1.default.quad(new cc_1.Vec3,1e5,1e5),e=(e.parent=this._rootNode,e.name="DiscPanPlane",e.active=!1,e.layer=panPlaneLayer,setNodeOpacity(e,0),this._panPlane=e,controller_utils_1.default.disc(new cc_1.Vec3,new cc_1.Vec3(0,0,1),this._radius,this._areaColor,{unlit:!0}));e.name="DiscArea",e.parent=this.shape,e.setPosition(new cc_1.Vec3(0,0,-.1)),setNodeOpacity(e,this._areaOpacity),this._areaNode=e,this._areaMR=getModel(e),this.initHandle(e,DiscHandleType.Area)}_updateEditHandle(e){var t=this._handleDataMap[e].topNode,i=axisDirMap[e],e=this._editHandleScales[e],s=tempVec3_a,i=(s.x=i.x*this._radius,s.y=i.y*this._radius,s),s=(i.add(this._center),this.getScale());t.setScale(e/s.x,e/s.y,e/s.z),cc_1.Vec3.multiply(i,i,s),t.setPosition(i)}updateSize(e,t,i=360){this._center.set(e),this._radius=t,this._arc=i;e=controller_shape_1.default.calcArcPoints(this._center,this._oriDir,this._circleFromDir,-this._arc*this._degreeToRadianFactor,this._radius);updatePositions(this._circleMR,e),this._edit&&(this.updateEditHandles(),t=controller_shape_1.default.calcDiscData(this._center,cc_1.Vec3.UNIT_Z,this._radius),updatePositions(this._areaMR,t.positions),updateBoundingBox(this._areaMR,t.minPos,t.maxPos)),this.adjustEditHandlesSize()}onMouseDown(e){this.edit&&(this._mouseDeltaPos=new cc_1.Vec2(0,0),cc_1.Vec3.set(this._deltaPos,0,0,0),this._curDistScalar=super.getDistScalar(),this._deltaRadius=0,this._controlDir=cc.v3(),this._panPlane.active=!0,this._mouseDownOnPlanePos=new cc_1.Vec3,this.getPositionOnPanPlane(this._mouseDownOnPlanePos,e.x,e.y,this._panPlane),this.onControllerMouseDown)&&this.onControllerMouseDown(e)}onMouseMove(t){if(this.edit&&this._isMouseDown){this._mouseDeltaPos.x+=t.moveDeltaX,this._mouseDeltaPos.y+=t.moveDeltaY;var i=new cc_1.Vec3;if(this.getPositionOnPanPlane(i,t.x,t.y,this._panPlane)){var i=new cc_1.Vec3(i),s=(i.subtract(this._mouseDownOnPlanePos),this._curHandleType=t.handleName,axisDirMap[t.handleName]);this._controlDir=s;let e=0;this.isBorder(t.handleName)?(cc_1.Vec3.transformQuat(tempVec3,s,this.getRotation()),e=i.dot(tempVec3)):this._deltaPos=i,this._deltaRadius=e}this.onControllerMouseMove&&this.onControllerMouseMove(t)}}onMouseUp(e){this._curHandleType=DiscHandleType.None,this._panPlane.active=!1,this.onControllerMouseUp&&this.onControllerMouseUp(e)}onHoverIn(e){var t;this.edit&&(e.handleName!==DiscHandleType.Area?this.setHandleColor(e.handleName,cc_1.Color.YELLOW):0<(t=getNodeOpacity(this._areaNode))&&this.setHandleColor(e.handleName,cc_1.Color.YELLOW,t))}onMouseLeave(e){this.onMouseUp(e)}getDeltaRadius(){return this._deltaRadius}getControlDir(){return this._controlDir}getDeltaPos(){return this._deltaPos}getCurHandleType(){return this._curHandleType}}DiscController.DiscHandleType=DiscHandleType,exports.default=DiscController;