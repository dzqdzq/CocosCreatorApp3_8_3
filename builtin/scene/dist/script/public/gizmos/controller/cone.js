"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),editable_1=__importDefault(require("./editable")),controller_shape_1=__importDefault(require("../utils/controller-shape")),controller_utils_1=__importDefault(require("../utils/controller-utils")),controller_utils_2=__importDefault(require("../utils/controller-utils")),engine_1=__importDefault(require("../utils/engine")),{AttributeName,setMeshColor,getModel,updatePositions}=engine_1.default,axisDirMap=controller_utils_1.default.axisDirectionMap,AxisName=controller_utils_1.default.AxisName,tempVec3A=new cc_1.Vec3,tempVec3B=new cc_1.Vec3,tempVec3C=new cc_1.Vec3,tempVec3D=new cc_1.Vec3,tempVec3E=new cc_1.Vec3,tempQuatA=new cc_1.Quat;class ConeController extends editable_1.default{get radius(){return this._radius}set radius(e){this.updateSize(this._center,e,this._height)}get height(){return this._height}set height(e){this.updateSize(this._center,this._radius,e)}get direction(){return this._direction}set direction(e){this._direction=e}constructor(e){super(e),this._oriDir=cc.v3(0,0,-1),this._center=cc.v3(),this._radius=100,this._height=100,this._halfHeight=this._height/2,this._deltaRadius=0,this._deltaHeight=0,this._circleFromDir=new cc_1.Vec3(1,0,0),this._sideLineMR=null,this._lowerCapMR=null,this._sideLineNode=null,this._lowerCapNode=null,this._mouseDeltaPos=new cc_1.Vec2,this._curDistScalar=0,this._directionAxis=[new cc_1.Vec3(1,0,0),new cc_1.Vec3(0,1,0),new cc_1.Vec3(0,0,1)],this._direction=cc_1.EAxisDirection.Y_AXIS,this._editHandleKeys=[AxisName.x,AxisName.z,AxisName.neg_x,AxisName.neg_y,AxisName.neg_z],this.initShape()}setColor(e){setMeshColor(this._sideLineNode,e),setMeshColor(this._lowerCapNode,e),this.setEditHandlesColor(e),this._color=e}_updateEditHandle(e){var t=this._handleDataMap[e].topNode,i=axisDirMap[e],s=tempVec3A.set(this._directionAxis[this._direction]),c=tempVec3B;c.set(0,0,0),"neg_y"===e?cc_1.Vec3.multiplyScalar(c,s,-this._halfHeight):(cc_1.Vec3.multiplyScalar(c,i,this._radius),cc_1.Vec3.multiplyScalar(tempVec3C,cc_1.Vec3.UNIT_Y,-this._halfHeight),c.add(tempVec3C),this._direction!==cc_1.EAxisDirection.Y_AXIS&&(e=tempQuatA,cc_1.Quat.rotationTo(e,cc_1.Vec3.UNIT_Y,s),cc_1.Vec3.transformQuat(c,c,e))),c.add(this._center),cc_1.Vec3.multiply(c,c,this.getScale()),t.setPosition(c)}initShape(){this.createShapeNode("ConeController"),this._circleFromDir=cc.v3(1,0,0);var e=this.getSideLinesData(this._center,this._radius,this._height),e=(this._sideLineNode=controller_utils_1.default.createShapeByData(e,this._color,{name:"sideLines",forwardPipeline:!0}),this._sideLineNode.parent=this.shape,this._sideLineMR=getModel(this._sideLineNode),this.getLowerCapData(this._center,this._radius,this._height));this._lowerCapNode=controller_utils_2.default.createShapeByData(e,this._color,{name:"lowerCap"}),this._lowerCapNode.parent=this.shape,this._lowerCapMR=getModel(this._lowerCapNode),this.hide()}getSideLinesData(c,e,t){var i=[];const o=[];t/=2;return i.push(new cc_1.Vec3(0,t,0)),i.push(new cc_1.Vec3(e,-t,0)),i.push(new cc_1.Vec3(0,t,0)),i.push(new cc_1.Vec3(-e,-t,0)),i.push(new cc_1.Vec3(0,t,0)),i.push(new cc_1.Vec3(0,-t,e)),i.push(new cc_1.Vec3(0,t,-0)),i.push(new cc_1.Vec3(0,-t,-e)),i.forEach((e,t)=>{var i,s;this._direction!==cc_1.EAxisDirection.Y_AXIS&&(i=this._directionAxis[this._direction],s=tempQuatA,cc_1.Quat.rotationTo(s,cc_1.Vec3.UNIT_Y,i),cc_1.Vec3.transformQuat(e,e,s)),cc_1.Vec3.add(e,e,c),o.push(t)}),controller_shape_1.default.calcLinesData(i,o,!1)}getLowerCapData(e,t,i){var s,c,i=i/2,o=cc_1.Vec3.copy(tempVec3A,cc_1.Vec3.UNIT_Y),a=cc_1.Vec3.copy(tempVec3B,cc_1.Vec3.UNIT_X),r=cc_1.Vec3.copy(tempVec3C,cc_1.Vec3.UNIT_Z),_=tempVec3D,i=tempVec3E.set(0,-i,0);return this._direction!==cc_1.EAxisDirection.Y_AXIS&&(s=this._directionAxis[this._direction],c=tempQuatA,cc_1.Quat.rotationTo(c,cc_1.Vec3.UNIT_Y,s),cc_1.Vec3.transformQuat(i,i,c),cc_1.Vec3.transformQuat(o,o,c),cc_1.Vec3.transformQuat(a,a,c),cc_1.Vec3.transformQuat(r,r,c)),cc_1.Vec3.add(_,e,i),controller_shape_1.default.calcArcData(_,o,a,this._twoPI,t)}updateSize(e,t,i){this._center=e,this._radius=t,this._height=i,this._halfHeight=this._height/2;e=this.getSideLinesData(this._center,this._radius,this._height),updatePositions(this._sideLineMR,e.positions),t=this.getLowerCapData(this._center,this._radius,this._height);updatePositions(this._lowerCapMR,t.positions),this._edit&&this.updateEditHandles(),this.adjustEditHandlesSize()}onMouseDown(e){this._mouseDeltaPos=cc.v2(0,0),this._curDistScalar=super.getDistScalar(),this._deltaRadius=0,this._deltaHeight=0,this.onControllerMouseDown&&this.onControllerMouseDown(e)}onMouseMove(e){var t,i,s;this._isMouseDown&&(this._mouseDeltaPos.x+=e.moveDeltaX,this._mouseDeltaPos.y+=e.moveDeltaY,s=axisDirMap[e.handleName],t=tempVec3A.set(this._directionAxis[this._direction]),i=tempQuatA,cc_1.Quat.rotationTo(i,cc_1.Vec3.UNIT_Y,t),cc_1.Vec3.transformQuat(t,s,i),s=this.getAlignAxisMoveDistance(this.localToWorldDir(t),this._mouseDeltaPos)*this._curDistScalar,"neg_y"===e.handleName?this._deltaHeight=s:this._deltaRadius=s,this.onControllerMouseMove)&&this.onControllerMouseMove(e)}onMouseUp(e){this.onControllerMouseUp&&this.onControllerMouseUp(e)}onMouseLeave(e){this.onMouseUp(e)}getDeltaRadius(){return this._deltaRadius}getDeltaHeight(){return this._deltaHeight}}exports.default=ConeController;