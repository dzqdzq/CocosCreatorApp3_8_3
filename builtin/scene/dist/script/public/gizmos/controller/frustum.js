"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),editable_1=__importDefault(require("./editable")),controller_shape_1=__importDefault(require("../utils/controller-shape")),controller_utils_1=__importDefault(require("../utils/controller-utils")),engine_1=__importDefault(require("../utils/engine")),external_1=__importDefault(require("../utils/external")),{setNodeOpacity,getModel,updatePositions,ProjectionType,FOVAxis}=engine_1.default,EditorMath=external_1.default.EditorMath,axisDirMap=controller_utils_1.default.axisDirectionMap,AxisName=controller_utils_1.default.AxisName,tempVec3=new cc_1.Vec3;class FrustumController extends editable_1.default{constructor(t){super(t),this._aspect=1,this._near=1,this._far=10,this._cameraProjection=1,this._fov=30,this._fovAxis=FOVAxis.VERTICAL,this._orthoHeight=0,this._oriDir=new cc_1.Vec3(0,0,-1),this._deltaWidth=0,this._deltaHeight=0,this._deltaDistance=0,this._mouseDeltaPos=new cc_1.Vec2,this._curDistScalar=0,this._frustumNode=null,this._frustumMeshRenderer=null,this._editHandleKeys=[AxisName.x,AxisName.y,AxisName.neg_x,AxisName.neg_y,AxisName.neg_z],this.initShape()}getFarClipSize(t,e,i,s,a,o){let r,l;return t?(r=e,l=r*s):o===FOVAxis.VERTICAL?(r=Math.tan(EditorMath.deg2rad(i/2))*a,l=r*s):(l=Math.tan(EditorMath.deg2rad(i/2))*a,r=l/s),{farHalfHeight:r,farHalfWidth:l}}_updateEditHandle(t){var e,i=this._handleDataMap[t].topNode,s=axisDirMap[t],a=new cc_1.Vec3;cc_1.Vec3.multiplyScalar(a,this._oriDir,this._far),"neg_z"!==t&&(e=this.getFarClipSize(this._cameraProjection===ProjectionType.ORTHO,this._orthoHeight,this._fov,this._aspect,this._far,this._fovAxis),"x"===t||"neg_x"===t?cc_1.Vec3.multiplyScalar(tempVec3,s,e.farHalfWidth):"y"!==t&&"neg_y"!==t||cc_1.Vec3.multiplyScalar(tempVec3,s,e.farHalfHeight),a.add(tempVec3)),cc_1.Vec3.multiply(a,a,this.getScale()),i.setPosition(a)}initShape(){this.createShapeNode("FrustumController"),this._frustumNode=controller_utils_1.default.frustum(this._cameraProjection===ProjectionType.ORTHO,this._orthoHeight,this._fov,this._aspect,this._near,this._far,this._color,{forwardPipeline:!0}),setNodeOpacity(this._frustumNode,150),this._frustumNode.parent=this.shape,this._frustumMeshRenderer=getModel(this._frustumNode),this.hide()}updateSize(t,e,i,s,a,o,r){this._cameraProjection=t,this._orthoHeight=e,this._fov=i,this._aspect=s,this._near=a,this._far=o,this._fovAxis=r;t=controller_shape_1.default.calcFrustum(this._cameraProjection===ProjectionType.ORTHO,this._orthoHeight,this._fov,this._aspect,this._near,this._far,this._fovAxis===FOVAxis.VERTICAL).positions;updatePositions(this._frustumMeshRenderer,t),this._edit&&this.updateEditHandles(),this.adjustEditHandlesSize()}onMouseDown(t){this._mouseDeltaPos=cc.v2(0,0);var e=new cc_1.Vec3;t.node.getWorldPosition(e),this._curDistScalar=this.getCameraDistScalar(e),this._deltaWidth=0,this._deltaHeight=0,this._deltaDistance=0,this.onControllerMouseDown&&this.onControllerMouseDown(t)}onMouseMove(t){var e;this._isMouseDown&&(this._mouseDeltaPos.x+=t.moveDeltaX,this._mouseDeltaPos.y+=t.moveDeltaY,e=axisDirMap[t.handleName],e=this.getAlignAxisMoveDistance(this.localToWorldDir(e),this._mouseDeltaPos)*this._curDistScalar,"neg_z"===t.handleName?this._deltaDistance=e:"x"===t.handleName||"neg_x"===t.handleName?this._deltaWidth=e:"y"!==t.handleName&&"neg_y"!==t.handleName||(this._deltaHeight=e),this.onControllerMouseMove)&&this.onControllerMouseMove(t)}onMouseUp(t){this.onControllerMouseUp&&this.onControllerMouseUp(t)}onMouseLeave(t){this.onMouseUp(t)}getDeltaWidth(){return this._deltaWidth}getDeltaHeight(){return this._deltaHeight}getDeltaDistance(){return this._deltaDistance}}exports.default=FrustumController;