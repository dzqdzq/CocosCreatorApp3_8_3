"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),base_1=__importDefault(require("./base")),controller_utils_1=__importDefault(require("../utils/controller-utils")),controller_shape_1=__importDefault(require("../utils/controller-shape")),engine_1=__importDefault(require("../utils/engine")),{AttributeName,getModel,updatePositions,setMeshColor,setNodeOpacity,getNodeOpacity,panPlaneLayer,updateBoundingBox}=engine_1.default;class LineController extends base_1.default{constructor(e){super(e),this._lineNode=null,this._lineMR=null,this.initShape()}initShape(){this.createShapeNode("LineController"),this._lineNode=this.createLineNode(new cc_1.Vec3,new cc_1.Vec3,"LineNode",this._color),this._lineMR=getModel(this._lineNode)}setColor(e){this._color=e,setMeshColor(this._lineNode,e)}setOpacity(e){setNodeOpacity(this._lineNode,e)}createLineNode(e,t,i,o){e=controller_shape_1.default.calcLineData(e,t),t=controller_utils_1.default.createShapeByData(e,o,{unlit:!0});return t.name=i,t.parent=this.shape,t}updateData(e,t){e=controller_shape_1.default.calcLineData(e,t);updatePositions(this._lineMR,e.positions),updateBoundingBox(this._lineMR,e.minPos,e.maxPos)}}exports.default=LineController;