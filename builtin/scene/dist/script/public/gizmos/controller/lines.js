"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),base_1=__importDefault(require("./base")),controller_utils_1=__importDefault(require("../utils/controller-utils")),controller_shape_1=__importDefault(require("../utils/controller-shape")),engine_1=__importDefault(require("../utils/engine")),{AttributeName,getModel,updatePositions,updateIB,updateVBAttr,setMeshColor,setNodeOpacity}=engine_1.default;class LinesController extends base_1.default{constructor(e,t={}){super(e),this._linesNode=null,this._linesMR=null,this._dashed=!1,this.initShape(t)}initShape(e={}){this.createShapeNode("LinesController"),this._dashed=null!=(e=e.dashed)&&e;e=[new cc_1.Vec3,new cc_1.Vec3],e=controller_shape_1.default.calcLinesData(e,[0,1],!1);this._linesNode=controller_utils_1.default.createShapeByData(e,this._color,{unlit:!0,dashed:this._dashed}),this._linesNode.name="LinesNode",this._linesNode.parent=this.shape,this._linesMR=getModel(this._linesNode)}setColor(e){this._color=e,setMeshColor(this._linesNode,e)}setOpacity(e){setNodeOpacity(this._linesNode,e)}updateData(t,s){var e=controller_shape_1.default.calcLinesData(t,s,!1);if(this._dashed){var i=[];if(0<t.length&&0<s.length){var l=t[s[i[0]=0]];for(let e=1;e<s.length;e++){var a=t[s[e]];i[e]=cc_1.Vec3.distance(a,l)}}updateVBAttr(this._linesMR,"a_lineDistance",i)}updatePositions(this._linesMR,e.positions),updateIB(this._linesMR,e.indices)}clearData(){updatePositions(this._linesMR,[]),updateIB(this._linesMR,[])}}exports.default=LinesController;