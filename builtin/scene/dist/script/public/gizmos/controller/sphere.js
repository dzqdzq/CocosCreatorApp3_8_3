"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),editable_1=__importDefault(require("./editable")),controller_shape_1=__importDefault(require("../utils/controller-shape")),controller_utils_1=__importDefault(require("../utils/controller-utils")),engine_1=__importDefault(require("../utils/engine")),external_1=__importDefault(require("../utils/external")),{setNodeOpacity,getModel,updatePositions,setMeshColor,getNodeOpacity}=engine_1.default,NodeUtils=external_1.default.NodeUtils,EditorCamera=external_1.default.EditorCamera,EditorMath=external_1.default.EditorMath,axisDirMap=controller_utils_1.default.axisDirectionMap,AxisName=controller_utils_1.default.AxisName,tempVec3_a=new cc_1.Vec3,tempVec3_b=new cc_1.Vec3,tempQuat_a=new cc_1.Quat;class SphereController extends editable_1.default{constructor(e){super(e),this._center=new cc_1.Vec3,this._radius=100,this._deltaRadius=0,this._circleDataMap={},this._borderCircle=null,this._borderCircelMR=null,this._mouseDeltaPos=new cc_1.Vec2,this._curDistScalar=0,this._controlDir=new cc_1.Vec3,this._color=cc.Color.WHITE,this._editHandleKeys=Object.keys(axisDirMap),this.initShape()}get radius(){return this._radius}set radius(e){this.updateSize(this._center,e)}setColor(i){Object.keys(this._circleDataMap).forEach(e=>{var e=this._circleDataMap[e],t=(setMeshColor(e.frontArcMR.node,i),getNodeOpacity(e.backArcMR.node)),r=i.clone();r.a=t,setMeshColor(e.backArcMR.node,r)}),setMeshColor(this._borderCircle,i),this.setEditHandlesColor(i),this._color=i}createCircleByAxis(e,t,r){var i=axisDirMap[e],t=axisDirMap[t],a=controller_utils_1.default.arc(this._center,i,t,2*Math.PI,this._radius,r),r=(a.name="arc_"+e+"_front",a.parent=this.shape,controller_utils_1.default.arc(this._center,i,t,2*Math.PI,this._radius,r)),s=(r.name="arc_"+e+"_back",r.parent=this.shape,setNodeOpacity(r,30),{});s.frontArcMR=getModel(a),s.backArcMR=getModel(r),s.normalDir=i,s.fromDir=t,this._circleDataMap[e]=s}createBorderCircle(){this._borderCircle=controller_utils_1.default.circle(this._center,new cc_1.Vec3(0,0,1),this._radius,this._color),this._borderCircle.name="borderCircle",this._borderCircle.parent=this.shape,this._borderCircelMR=getModel(this._borderCircle)}_updateEditHandle(e){var t=this._handleDataMap[e].topNode,e=axisDirMap[e],r=new cc_1.Vec3,e=(cc_1.Vec3.multiplyScalar(r,e,this._radius),new cc_1.Vec3(r));e.add(this._center),cc_1.Vec3.multiply(e,e,this.getScale()),t.setPosition(e.x,e.y,e.z)}initShape(){this.createShapeNode("SphereController"),this._circleDataMap={},this.createCircleByAxis("x","z",this._color),this.createCircleByAxis("y","x",this._color),this.createCircleByAxis("z","x",this._color),this.createBorderCircle(),this.hide(),EditorCamera.camera.node.on("transform-changed",this.onEditorCameraMoved,this)}updateSize(e,t){this._center=e,this._radius=t,this._edit&&this.updateEditHandles(),this.updateShape()}updateShape(){var e=EditorCamera.camera.node,e=NodeUtils.getWorldPosition3D(e),t=new cc_1.Mat4;this.shape.getWorldMatrix(t),cc.Mat4.invert(t,t),cc_1.Vec3.transformMat4(e,e,t);const c=tempVec3_b;cc_1.Vec3.subtract(c,this._center,e);var r,t=cc_1.Vec3.lengthSqr(c),e=this._radius*this._radius;const l=e*e/t,_=l/e;_<1?(this._borderCircle.active=!0,r=Math.sqrt(e-l),e=cc_1.Vec3.multiplyScalar(tempVec3_a,c,e/t),t=cc_1.Vec3.subtract(tempVec3_a,this._center,e),e=controller_shape_1.default.calcCirclePoints(t,c,r),updatePositions(this._borderCircelMR,e)):this._borderCircle.active=!1,Object.keys(this._circleDataMap).forEach(e=>{var t,r,i,a=this._circleDataMap[e].normalDir,s=this._circleDataMap[e].frontArcMR,o=this._circleDataMap[e].backArcMR;_<1&&(t=controller_utils_1.default.angle(c,a),t=90-Math.min(t,180-t),t=Math.tan(t*EditorMath.D2R),(t=Math.sqrt(l+t*t*l)/this._radius)<1)?(t=Math.asin(t),cc_1.Vec3.cross(tempVec3_a,a,c),(r=tempVec3_a).normalize(),i=tempQuat_a,cc_1.Quat.fromAxisAngle(i,a,t),cc_1.Vec3.transformQuat(r,r,i),this.updateArcMesh(s,this._center,a,r,2*(EditorMath.HALF_PI-t),this._radius),s.node.active=!0,this.updateArcMesh(o,this._center,a,r,2*(EditorMath.HALF_PI-t)-EditorMath.TWO_PI,this._radius)):(this.updateArcMesh(o,this._center,a,this._circleDataMap[e].fromDir,EditorMath.TWO_PI,this._radius),s.node.active=!1)}),this.adjustEditHandlesSize()}updateArcMesh(e,t,r,i,a,s){t=controller_shape_1.default.calcArcPoints(t,r,i,a,s);updatePositions(e,t)}onEditorCameraMoved(){this.updateShape()}onMouseDown(e){this._mouseDeltaPos=cc.v2(0,0),this._curDistScalar=super.getDistScalar(),this._controlDir=new cc_1.Vec3(0,0,0),this.onControllerMouseDown&&this.onControllerMouseDown(e)}onMouseMove(e){var t;this._isMouseDown&&(this._mouseDeltaPos.x+=e.moveDeltaX,this._mouseDeltaPos.y+=e.moveDeltaY,t=axisDirMap[e.handleName],this._controlDir=t,this._deltaRadius=this.getAlignAxisMoveDistance(this.localToWorldDir(t),this._mouseDeltaPos)*this._curDistScalar,this.onControllerMouseMove)&&this.onControllerMouseMove(e)}onMouseUp(e){this.onControllerMouseUp&&this.onControllerMouseUp(e)}onMouseLeave(e){this.onMouseUp(e)}getDeltaRadius(){return this._deltaRadius}getControlDir(){return this._controlDir}}exports.default=SphereController;