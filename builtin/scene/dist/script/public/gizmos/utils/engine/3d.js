"use strict";var HighlightFace,__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Engine3D=exports.HighlightFace=void 0;const cc_1=require("cc"),raycast_1=__importDefault(require("../../../../utils/raycast")),external_1=__importDefault(require("../external")),aabb=external_1.default.GeometryUtils.aabb,CameraTool=external_1.default.EditorCamera,flat=(e,t)=>e.map(t).reduce((e,t)=>e.concat(t),[]),cmp=(e,t)=>e.distance-t.distance,ray=cc_1.geometry.Ray.create(),triangles=cc_1.gfx.PrimitiveMode.TRIANGLE_LIST;function setNodeMaterialProperty(e,t,r){e&&e.modelComp&&e.modelComp.material&&e.modelComp.material.setProperty(t,r)}const vbMap=new Map,ibMap=new Map;!function(e){e[e.NONE=0]="NONE",e[e.UP=1]="UP",e[e.DOWN=2]="DOWN",e[e.LEFT=3]="LEFT",e[e.RIGHT=4]="RIGHT",e[e.FRONT=5]="FRONT",e[e.BACK=6]="BACK"}(HighlightFace=exports.HighlightFace||(exports.HighlightFace={}));class Engine3D{static createInstance(){var e;return null!=(e=this.instance)?e:new Engine3D}constructor(){(Engine3D.instance=this).panPlaneLayer=cc_1.Layers.Enum.EDITOR,this.CullMode=cc_1.gfx.CullMode,this.AttributeName=cc_1.gfx.AttributeName,this.PrimitiveMode=cc_1.gfx.PrimitiveMode,this.LightType=cc_1.Light.Type,this.ProjectionType=cc_1.Camera.ProjectionType,this.FOVAxis=cc_1.Camera.FOVAxis}create3DNode(e){e=new cc.Node(e);return e._layer=cc.Layers.Enum.GIZMOS,e.modelColor=cc.color(),e}createMesh(t,e={}){var r={primitiveMode:t.primitiveType,positions:flat(t.positions,e=>[e.x,e.y,e.z]),indices:t.indices,minPos:t.minPos,maxPos:t.maxPos};t.normals&&(r.normals=flat(t.normals,e=>[e.x,e.y,e.z])),t.uvs&&(r.uvs=flat(t.uvs,e=>[e.x,e.y]));let o=r.customAttributes;if(e.dashed){o=o||[];var a=[];for(let e=0;e<t.positions.length;e+=2){var i=t.positions[e],n=t.positions[e+1];a[e]=0===e?0:a[e-1],a[e+1]=a[e]+cc_1.Vec3.distance(i,n)}o.push({attr:new cc_1.gfx.Attribute("a_lineDistance",cc_1.gfx.Format.R32F),values:a})}r.customAttributes=o;var e=cc_1.utils.createMesh(r),r=e.renderingSubMeshes[0],s=r.geometricInfo,s=(s&&(s.doubleSided=t.doubleSided),e.struct.vertexBundles[0].view),s=(s&&(r.vBuffer=e.data.buffer.slice(s.offset,s.offset+s.length),vbMap.set(r,r.vBuffer)),e.struct.primitives[0].indexView);return s&&(r.iBuffer=e.data.buffer.slice(s.offset,s.offset+s.length),ibMap.set(r,r.iBuffer)),e}transformToDynamicGeometry(e){var t;return{primitiveMode:e.primitiveType,positions:Float32Array.from(flat(e.positions,e=>[e.x,e.y,e.z])),indices32:Uint32Array.from(null!=(t=e.indices)?t:[]),minPos:e.minPos,maxPos:e.maxPos}}createDynamicMesh(t,e){var r=t.transformToDynamicGeometry();t.normals&&(r.normals=Float32Array.from(flat(t.normals,e=>[e.x,e.y,e.z]))),t.uvs&&(r.uvs=Float32Array.from(flat(t.uvs,e=>[e.x,e.y])));let o=r.customAttributes;if(null!=e&&e.dashed){o=o||[];var a=[];for(let e=0;e<t.positions.length;e+=2){var i=t.positions[e],n=t.positions[e+1];a[e]=0===e?0:a[e-1],a[e+1]=a[e]+cc_1.Vec3.distance(i,n)}o.push({attr:new cc_1.gfx.Attribute("a_lineDistance",cc_1.gfx.Format.R32F),values:Float32Array.from(a)})}r.customAttributes=o;var r=cc_1.utils.MeshUtils.createDynamicMesh(0,r,void 0,e),e=r.renderingSubMeshes[0],s=e.geometricInfo,s=(s&&(s.doubleSided=t.doubleSided),r.struct.vertexBundles[0].view),s=(s&&(e.vBuffer=r.data.buffer.slice(s.offset,s.offset+s.length),vbMap.set(e,e.vBuffer)),r.struct.primitives[0].indexView);return s&&(e.iBuffer=r.data.buffer.slice(s.offset,s.offset+s.length),ibMap.set(e,e.iBuffer)),r}updateDynamicMesh(e,t,r){r=r.transformToDynamicGeometry();null!=(e=e.mesh)&&e.updateSubMesh(t,r)}addMeshToNode(e,t,r={},o){var a=e.addComponent(cc_1.MeshRenderer),i={};r.forwardPipeline&&(i.USE_FORWARD_PIPELINE=!0),r.dashed&&(i.USE_DASHED_LINE=!0),r.instancing&&(i.USE_INSTANCING=!0),r.useLightProbe&&(i.CC_USE_LIGHT_PROBE=!0),a.mesh=t;const n=a.onEnable.bind(a);a.onEnable=()=>{n()};t=t.renderingSubMeshes[0].primitiveMode;let s=0,c="internal/editor/gizmo";r.effectName?c=r.effectName:s=r.technique||(r.unlit?1:r.texture?3:t<triangles?r.noDepthTestForLines?1:2:r.depthTestForTriangles?4:0);var o=null!=o?o:new cc_1.Material,l={};r.cullMode&&(l.rasterizerState={cullMode:r.cullMode}),t!==triangles&&(l.primitive=t),r.priority&&(l.priority=r.priority),0===o.hash&&o.initialize({effectName:c,technique:s,states:l,defines:i}),void 0!==r.alpha&&e.modelColor&&(e.modelColor.a=r.alpha),o.setProperty("mainColor",e.modelColor),a.material=o,e.modelComp=a}setMeshSHCoefficients(t,r){var o=new cc_1.Vec4,a=["cc_sh_linear_const_r","cc_sh_linear_const_g","cc_sh_linear_const_b","cc_sh_quadratic_r","cc_sh_quadratic_g","cc_sh_quadratic_b","cc_sh_quadratic_a"];for(let e=0;e<a.length;e++){var i=4*e;o.set(r[i],r[1+i],r[2+i],r[3+i]),setNodeMaterialProperty(t,a[e],o)}}setMeshColor(e,t){let r=t.a;e.modelColor&&(r=e.modelColor.a),e.modelColor=t.clone(),e.modelColor.a=r,setNodeMaterialProperty(e,"mainColor",e.modelColor)}getMeshColor(e){return e.modelColor}setNodeOpacity(e,t){e.modelColor&&(e.modelColor.a=t),setNodeMaterialProperty(e,"mainColor",e.modelColor)}getNodeOpacity(e){return null!=(e=null==(e=e.modelColor)?void 0:e.a)?e:0}setMaterialProperty(e,t,r){setNodeMaterialProperty(e,t,r)}getRaycastResults(e,t,r,o=1/0,a){var i=e.scene.renderScene,n=CameraTool.camera.camera;null!=n&&n.screenPointToRay(ray,t,r);let s=[];return raycast_1.default.raycastAllModels(i,ray,e._layer,o,!1,a)&&(s=raycast_1.default.rayResultModels).sort(cmp),s.ray=ray,s}getRaycastResultsByNodes(e,t,r,o=1/0,a,i){let n=[];var s=CameraTool.camera.camera;null!=s&&s.screenPointToRay(ray,t,r);const c=(e,t)=>{e.getComponents(cc_1.MeshRenderer).forEach(e=>t(e)),0<e.children.length&&e.children.forEach(e=>{c(e,t)})};return e.forEach(t=>{c(t,e=>{e.model&&raycast_1.default.raycastSingleModel(ray,e.model,t._layer,o,a,i)&&((n=n.concat(raycast_1.default.rayResultSingleModel)).sort(cmp),n.ray=ray)})}),n}raycast(e,t,r,o,a,i=1/0,n){if(!t.enabled)return null;t.screenPointToRay(ray,o,a);let s=[];return raycast_1.default.raycastAllModels(e,ray,r,i,!1,n)&&(s=raycast_1.default.rayResultModels).sort(cmp),s.ray=ray,s}raycastAllColliders(e,t,r){let o=[];return e.enabled&&(e.screenPointToRay(ray,t,r),raycast_1.default.raycastAllColliders(ray)&&(o=raycast_1.default.raycastColliderResults).sort(cmp),o.ray=ray),o}getModel(e){return e.getComponent(cc_1.MeshRenderer)}updatePositions(e,t){var r=e.model&&e.model.subModels[0];r&&r.inputAssembler&&r.subMesh&&(r=r["subMesh"],t=flat(t,e=>[e.x,e.y,e.z]),Engine3D.instance.updateVBAttr(e,cc_1.gfx.AttributeName.ATTR_POSITION,t),r.geometricInfo)&&(r.geometricInfo.positions.length>=t.length?r.geometricInfo.positions.set(t):r.geometricInfo.positions=new Float32Array(t))}updateVBAttr(o,a,i){o=o.model&&o.model.subModels[0];if(o&&o.inputAssembler&&o.subMesh){var{inputAssembler:o,subMesh:n}=o;let e=n.vBuffer,t=0,r=cc_1.gfx.Format.UNKNOWN;for(const c of o.attributes){if(c.name===a){r=c.format;break}t+=cc_1.gfx.FormatInfos[c.format].size}var s,o=o.vertexBuffers[0];r&&o&&(s=o.stride*i.length/cc_1.gfx.FormatInfos[r].count,e.byteLength<s&&(e=new ArrayBuffer(s),vbMap.set(n,e),o.resize(s)),cc_1.utils.writeBuffer(new DataView(e),i,r,t,o.stride),o.update(e))}}updateIB(t,r){t=t.model&&t.model.subModels[0];if(t&&t.inputAssembler&&t.subMesh){var{inputAssembler:t,subMesh:o}=t;let e=ibMap.get(o);var a,i=t.indexBuffer;i&&(t.indexCount===r.length?(new Uint16Array(e).set(r),i.update(e),o.geometricInfo&&o.geometricInfo.indices&&o.geometricInfo.indices.set(r)):((a=r.length*i.stride)>e.byteLength&&(e=new ArrayBuffer(a),ibMap.set(o,e),i.resize(a)),new Uint16Array(e).set(r),i.update(e),t.indexCount=r.length,o.geometricInfo&&o.geometricInfo.indices&&(a=new Uint16Array(r),o.geometricInfo.indices=a)))}}updateBoundingBox(e,t,r){e=e.model;e&&e.createBoundingShape(t,r)}getBoundingBox(e){var t;let r=null;return e instanceof cc_1.MeshRenderer?e instanceof cc_1.SkinnedMeshRenderer?r=e.model&&e.model.worldBounds:(r=e.model&&e.model.modelBounds)||(t=e.mesh)&&t.minPosition&&t.maxPosition&&(r=aabb.fromPoints(aabb.create(),t.minPosition,t.maxPosition)):e instanceof cc_1.SpriteRenderer?(r=e.model&&e.model.modelBounds)||(e=null==(t=e.spriteFrame)?void 0:t.mesh)&&e.struct.minPosition&&e.struct.maxPosition&&(r=aabb.fromPoints(aabb.create(),e.struct.minPosition,e.struct.maxPosition)):console.error("target is not a cc.MeshRenderer"),r}getRootBoneNode(e){let t=null;return e instanceof cc_1.SkinnedMeshRenderer?t=e.skinningRoot:console.error("target is not a cc.SkinnedMeshRenderer"),t}getRootBindPose(e){let t=null;var r;return e instanceof cc_1.SkinnedMeshRenderer?(r=e.skinningRoot,e=e.skeleton,r&&e&&void 0!==(r=e.joints.findIndex(e=>""===e))&&(t=e.bindposes[r])):console.error("target is not a cc.SkinnedMeshRenderer"),t}getCameraData(e){let t=null;var r,o;return e instanceof cc_1.Camera?((t={}).projection=e.projection,t.orthoHeight=e.orthoHeight,t.fov=e.fov,r=e.camera?e.camera.width:800,o=e.camera?e.camera.height:600,t.aspect=r/o,t.near=e.near,t.far=e.far,t.fovAxis=e.fovAxis):console.error("target is not a cc.Camera"),t}setCameraData(e,t){e instanceof cc_1.Camera?(t.fov&&(e.fov=t.fov),t.far&&(e.far=t.far),t.orthoHeight&&(e.orthoHeight=t.orthoHeight)):console.error("target is not a cc.Camera")}getLightData(e){let t=null;return e instanceof cc_1.Light?((t={}).type=e.type,t.range=e.range,t.spotAngle=e.spotAngle):console.error("target is not a cc.Light"),t}setLightData(e,t){e instanceof cc_1.Light?(t.range&&(e.range=t.range),t.spotAngle&&(e.spotAngle=t.spotAngle)):console.error("target is not a cc.Light")}}exports.Engine3D=Engine3D,exports.default=Engine3D.createInstance();