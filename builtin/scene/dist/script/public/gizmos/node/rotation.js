"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});const utils_1=__importDefault(require("../utils")),external_1=__importDefault(require("../utils/external")),cc_1=require("cc"),transform_base_1=__importDefault(require("./transform-base")),rotation_controller_1=__importDefault(require("./rotation-controller")),NodeUtils=external_1.default.NodeUtils,GizmoUtils=utils_1.default.GizmoUtils,EditorMath=external_1.default.EditorMath,q_a=new cc_1.Quat,q_b=new cc_1.Quat,q_c=new cc_1.Quat,v3_a=new cc_1.Vec3,v3_b=new cc_1.Vec3,q_d=new cc_1.Quat;let _controller;function minAngularDistance(t,o){return Math.min(Math.abs(t.x-o.x),Math.abs((t.x<0?360+t.x:t.x)-(o.x<0?360+o.x:o.x)))+Math.min(Math.abs(t.y-o.y),Math.abs((t.y<0?360+t.y:t.y)-(o.y<0?360+o.y:o.y)))+Math.min(Math.abs(t.z-o.z),Math.abs((t.z<0?360+t.z:t.z)-(o.z<0?360+o.z:o.z)))}class RotationGizmo extends transform_base_1.default{constructor(){super(...arguments),this._rotList=[],this._offsetList=[],this._center=new cc_1.Vec3(0,0),this._rotating=!1,this._keydownDelta=null,this._curDeltaAngle=0,this._curDeltaRotation=new cc_1.Quat}isNodeLocked(t){return!!t&&t.components.some(t=>t._objFlags&cc_1.CCObject.Flags.IsRotationLocked)}init(){this.createController()}layer(){return"foreground"}onTargetUpdate(){_controller&&((this._controller=_controller).onControllerMouseDown=this.onControllerMouseDown.bind(this),_controller.onControllerMouseMove=this.onControllerMouseMove.bind(this),_controller.onControllerMouseUp=this.onControllerMouseUp.bind(this)),super.onTargetUpdate()}createController(){var t;_controller?this._controller=_controller:(t=new rotation_controller_1.default(this.getGizmoRoot()),this._controller=_controller=t),this._controller.onControllerMouseDown=this.onControllerMouseDown.bind(this),this._controller.onControllerMouseMove=this.onControllerMouseMove.bind(this),this._controller.onControllerMouseUp=this.onControllerMouseUp.bind(this)}onControllerMouseDown(){this._controller&&(this._controller.isLock=this.nodes.some(t=>this.isNodeLocked(t))),this._rotating=!0,this._rotList=[],this._curDeltaAngle=0,this._curDeltaRotation.set(0,0,0,1);var o=this.nodes;for(let t=0;t<o.length;++t){var e=NodeUtils.getWorldRotation3D(o[t]);this._rotList.push(e)}if("center"===this._controller.transformToolData.pivot){this._center=GizmoUtils.getCenterWorldPos3D(this.nodes);for(let t=this._offsetList.length=0;t<o.length;++t){var r=NodeUtils.getWorldPosition3D(o[t]),r=new cc_1.Vec3(r);r.subtract(this._center),this._offsetList.push(r)}}var t=this._controller.transformToolData.snapConfigs,t=Math.max(t.rotation,5);this._controller.setGraduation(t),utils_1.default.requestPointerLock()}onControllerMouseMove(t){this.updateDataFromController(t)}onControllerMouseUp(){var t;"center"===this._controller.transformToolData.pivot&&(t=GizmoUtils.getCenterWorldPos3D(this.nodes),this._controller.setPosition(t),this._controller.setRotation(cc_1.Quat.IDENTITY)),this._rotating=!1,this._controller.updated&&this.onControlEnd("rotation"),this.updateControllerTransform(),utils_1.default.exitPointerLock(),this._controller.hideGraduation(),this._curDeltaRotation.set(0,0,0,1)}onKeyDown(o){if(this.nodes&&0!==this.nodes.length){var e=o.key.toLowerCase();if("arrowleft"!==e&&"arrowright"!==e&&"arrowup"!==e&&"arrowdown"!==e)return super.onKeyDown(o);this._rotating=!0;let t=o.shiftKey?10:1;if("arrowright"!==e&&"arrowdown"!==e||(t*=-1),!this._keydownDelta){this._keydownDelta=0;var r=this.nodes;this._rotList=[];for(let t=0;t<r.length;++t)this._rotList.push(r[t].angle)}this._keydownDelta+=t,this._curDeltaAngle=this._keydownDelta;o=EditorMath.deg2rad(this._curDeltaAngle);return cc_1.Quat.fromAxisAngle(this._curDeltaRotation,cc_1.Vec3.UNIT_Z,o),this.onControlUpdate("rotation"),this.updateRotationByZDeltaAngle(this._keydownDelta),utils_1.default.repaintEngine(),!1}}onKeyUp(t){var o;return!this.nodes||0===this.nodes.length||("arrowleft"!==(o=t.key.toLowerCase())&&"arrowright"!==o&&"arrowup"!==o&&"arrowdown"!==o?super.onKeyUp(t):("center"===this._controller.transformToolData.pivot&&(o=GizmoUtils.getCenterWorldPos3D(this.nodes),this._controller.setPosition(o),this._controller.setRotation(cc_1.Quat.IDENTITY)),this._keydownDelta=null,this._rotating=!1,this.onControlEnd("rotation"),this.updateControllerTransform(),utils_1.default.repaintEngine(),!1))}updateDataFromController(t){this.updateDataFromController3D(t)}getLocalRotFromWorldRot(t,o,e){return t.parent?(t.parent.getWorldRotation(q_c),cc_1.Quat.multiply(e,cc_1.Quat.conjugate(q_c,q_c),o)):e=o,e}repeat(t,o){return t-Math.floor(t/o)*o}setNodeWorldRotation3D(t,o){var e=q_b,o=(this.getLocalRotFromWorldRot(t,o,e),t.eulerAngles),e=(cc_1.Quat.toEuler(v3_a,e,!1),cc_1.Quat.toEuler(v3_b,e,!0),minAngularDistance(v3_a,o)<minAngularDistance(v3_b,o)?v3_a:v3_b);e.x=this.repeat(e.x-o.x+180,360)+o.x-180,e.y=this.repeat(e.y-o.y+180,360)+o.y-180,e.z=this.repeat(e.z-o.z+180,360)+o.z-180,NodeUtils.makeVec3InPrecision(e,3),t.eulerAngles=e}checkSnap(t,o,e,r){this._curDeltaAngle=this.getSnappedValue(o,r);o=EditorMath.deg2rad(this._curDeltaAngle);return cc_1.Quat.fromAxisAngle(t,e,o),t}updateDataFromController3D(o){if(this._controller.updated){this.onControlUpdate("rotation");let t;var e=q_b,r=this._controller,n=(this._curDeltaAngle=r.getDeltaAngle(),r.getDeltaRotation()),i=this.nodes,l=this._controller.transformToolData.snapConfigs;if((this.isControlKeyPressed(o)||l.isRotationSnapEnabled)&&(this.checkSnap(n,r.getDeltaAngle(),r.getHandleAxisDir(),l.rotation),r.showGraduation()),cc_1.Quat.copy(this._curDeltaRotation,n),"center"===this._controller.transformToolData.pivot)for(t=0;t<i.length;++t){var a=this._rotList[t];if(null===a)return;"global"===this._controller.transformToolData.coordinate?cc_1.Quat.multiply(e,n,a):cc_1.Quat.multiply(e,a,n);a=v3_b;cc_1.Vec3.transformQuat(a,this._offsetList[t],n),v3_a.set(this._center),v3_a.add(a),NodeUtils.setWorldPosition3D(i[t],v3_a),this.setNodeWorldRotation3D(i[t],e)}else for(t=0;t<i.length;++t)"global"===this._controller.transformToolData.coordinate?cc_1.Quat.multiply(e,n,this._rotList[t]):cc_1.Quat.multiply(e,this._rotList[t],n),this.setNodeWorldRotation3D(i[t],e)}}updateDataFromController2D(o){if(this._controller.updated){this.onControlUpdate("rotation");let t=this._controller.getDeltaAngle();var e=this._controller.transformToolData.snapConfigs;(o.ctrlKey||e.isRotationSnapEnabled)&&(t=this.getSnappedValue(t,e.rotation)),this.updateRotationByZDeltaAngle(t)}}updateRotationByZDeltaAngle(t){let o;t=EditorMath.toPrecision(t,3);var e=q_a,r=this.nodes;if("center"===this._controller.transformToolData.pivot)for(o=0;o<r.length;++o){var n=this._rotList[o];if(null===n)return;r[o].angle=n+t,cc_1.Quat.fromEuler(e,0,0,t);n=new cc_1.Vec3;cc_1.Vec3.transformQuat(n,this._offsetList[o],e),v3_a.set(this._center),v3_a.add(n),NodeUtils.setWorldPosition3D(r[o],v3_a)}else for(o=0;o<r.length;++o){var i=this._rotList[o]+t;r[o].angle=i}}updateControllerTransform(){var o=this.nodes[0];if(o){let t;var e=q_a;if(cc_1.Quat.identity(e),"center"===this._controller.transformToolData.pivot){if(this._rotating)return;t=GizmoUtils.getCenterWorldPos3D(this.nodes)}else t=NodeUtils.getWorldPosition3D(o);var r=this._controller;"global"===this._controller.transformToolData.coordinate?this._rotating&&cc_1.Quat.copy(e,this._curDeltaRotation):(NodeUtils.getWorldRotation3D(o,e),this._controller.setRotation(e)),this._rotating&&r.updateRotationIndicator(r.transformAxisDir,r.indicatorStartDir,EditorMath.deg2rad(this._curDeltaAngle)),this._controller.setPosition(t),this._controller.setRotation(e)}}}exports.default=RotationGizmo;