"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),gizmo_select_1=__importDefault(require("../components/base/gizmo-select")),box_1=__importDefault(require("../controller/box"));class SceneGizmo extends gizmo_select_1.default{constructor(){super(...arguments),this._octreeBoundingBox=new cc_1.geometry.AABB,this._octreeBBSize=new cc_1.Vec3}init(){this.createController(),this._isInitialized=!0}onShow(){this._controller.show(),this.updateControllerTransform()}onHide(){this._controller.hide()}createController(){var e=this.getGizmoRoot();this._controller=new box_1.default(e),this._controller.setOpacity(150)}updateControllerTransform(){this.updateControllerData()}updateControllerData(){var e;this._isInitialized&&this.target?(e=this.target.node.globals.octree)&&e.enabled?(cc_1.geometry.AABB.fromPoints(this._octreeBoundingBox,e.minPos,e.maxPos),cc_1.Vec3.multiplyScalar(this._octreeBBSize,this._octreeBoundingBox.halfExtents,2),this._controller.updateSize(this._octreeBoundingBox.center,this._octreeBBSize),cce.Engine.repaintInEditMode()):this._controller.hide():this._controller&&this._controller.hide()}onTargetUpdate(){this.updateControllerData()}onNodeChanged(){this.updateControllerData()}}exports.default=SceneGizmo;