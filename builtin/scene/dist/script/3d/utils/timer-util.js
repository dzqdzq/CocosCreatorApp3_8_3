"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TimerUtil=void 0;let mainProcessIntervalIds=[];const remoteSetTimeout=require("@electron/remote").getGlobal("setTimeout"),remoteClearTimeout=require("@electron/remote").getGlobal("clearTimeout"),remoteSetInterval=require("@electron/remote").getGlobal("setInterval"),remoteClearInterval=require("@electron/remote").getGlobal("clearInterval");class TimerUtil{constructor(e){this._timeInterval=200,this._callWaitingMap=new Map,this._timeInterval=null!=e?e:200}callFunctionLimit(t,e,...r){let i=this._callWaitingMap.get(t),a=!1;i?i.waitingTimer?(i.callFunc=e,i.args=r,i.needCallAfterWaiting=!0):a=!0:(i={needCallAfterWaiting:!1},this._callWaitingMap.set(t,i),a=!0),a&&(e(...r),i.waitingTimer=setTimeout(()=>{var e;i&&(i.waitingTimer=void 0),i&&i.needCallAfterWaiting&&(i.needCallAfterWaiting=!1,i.callFunc)&&(e=null!=(e=i.args)?e:[],this.callFunctionLimit(t,i.callFunc,...e))},this._timeInterval))}clear(){this._callWaitingMap.forEach(e=>{e.waitingTimer&&clearTimeout(e.waitingTimer)}),this._callWaitingMap.clear()}static setMainProcessTimeout(e,t){return remoteSetTimeout(e,t)}static clearMainProcessTimeout(e){remoteClearTimeout(e)}static setMainProcessInterval(e,t){e=remoteSetInterval(e,t);return mainProcessIntervalIds.push(e),e}static clearMainProcessInterval(e){var t=mainProcessIntervalIds.indexOf(e);0<=t&&(remoteClearInterval(e),mainProcessIntervalIds.splice(t,1))}static clearTimerAndInterval(){mainProcessIntervalIds.forEach(e=>{this.clearMainProcessInterval(e)}),mainProcessIntervalIds=[]}}exports.TimerUtil=TimerUtil;