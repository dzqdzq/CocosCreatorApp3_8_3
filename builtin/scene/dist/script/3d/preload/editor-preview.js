"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const layerMask=[];for(let e=0;e<=19;e++)layerMask[e]=1<<e;class EditorPreview{async start(){var e=await Editor.Message.request("engine","query-engine-info");this.engineInfo={typescript:e.typescript,native:e.native,project:Editor.Project.path},await this._startEngine(),await this._startEditor()}async _startEngine(){var e=await Editor.Profile.getProject("project","layer"),t=await Editor.Profile.getProject("project","sorting-layer")||{},r=await Editor.Profile.getProject("project","general.renderPipeline"),a=await Editor.Profile.getProject("project","general.designResolution"),t=t.layers||[];this.engineInfo.overrideSettings={engine:{customLayers:e.map(t=>{var e=layerMask.findIndex(e=>t.value===e);return{name:t.name,bit:e}}),sortingLayers:t}},await cce.Startup.configEngine(this.engineInfo,r,e,t),await cce.Startup.initDesignResolution(a.width,a.height),cc.game.restart=()=>{cce.Ipc.clearQueue(),cce.Ipc.send("preview-restart")}}async _startEditor(){await cce.Startup.initManager(Object.assign(this.engineInfo,{project:Editor.Project.path}));var e=await Editor.Profile.getProject("engine","modules.includeModules");e&&!e.includes("3d")&&cce.SceneFacadeManager.changeProjectMode("2d"),await cce.SceneFacadeManager.openScene("")}async _startPreview(){}}exports.default=new EditorPreview;