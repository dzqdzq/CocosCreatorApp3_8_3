"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,r,t,a){void 0===a&&(a=t);var n=Object.getOwnPropertyDescriptor(r,t);n&&("get"in n?r.__esModule:!n.writable&&!n.configurable)||(n={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,a,n)}:function(e,r,t,a){e[a=void 0===a?t:a]=r[t]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding(r,e,t);return __setModuleDefault(r,e),r},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.uniformHandler=void 0;const cc_1=require("cc"),dumpUtil=__importStar(require("../../../export/dump/utils")),math_1=__importDefault(require("../../../utils/math")),utils_1=__importDefault(require("../asset/utils")),util_1=require("util"),ValuePartToArrayIndexMap={"cc.Vec2":{x:0,y:1},"cc.Vec3":{x:0,y:1,z:2},"cc.Vec4":{x:0,y:1,z:2,w:3},"cc.Color":{r:0,g:1,b:2,a:3}},ArrayIndexToValuePartMap={"cc.Vec2":{0:"x",1:"y"},"cc.Vec3":{0:"x",1:"y",2:"z"},"cc.Vec4":{0:"x",1:"y",2:"z",3:"w"},"cc.Color":{0:"r",1:"g",2:"b",3:"a"}};class UniformHandler{isUniformCurve(e){return e instanceof cc_1.animation.UniformProxyFactory}getValueToArrayIndexMapByType(e){return e?ValuePartToArrayIndexMap[e]:null}getArrayIndexToValuePartMapByType(e){return e?ArrayIndexToValuePartMap[e]:null}getUniformNameData(e,r){return{key:`pass.${e}.`+r,displayName:`pass[${e}].`+r}}getDumpTypeOfUniform(e,r){var t={value:""},a=e.getHandle(r),a=cc_1.renderer.Pass.getTypeFromHandle(a);let n=utils_1.default.GFXToValueTypeMap[a];a=e.properties[r],a&&a.editor&&"color"===a.editor.type&&(n="cc.Color"),t.value=n,e=cc_1.js.getClassByName(n);return e&&(t.extends=dumpUtil.getTypeInheritanceChain(e)),t}getUniformDumpData(e,r){var{passIndex:r,uniformName:t}=r,a=this.getUniformNameData(r,t);let n;return e&&e.passes&&0<=r&&r<e.passes.length&&(e=e.passes[r],n=uniformHandler.getDumpTypeOfUniform(e,t)),{displayName:a.displayName,key:a.key,type:n}}getAnimablePropsFromMaterial(e){if(!e)return null;const o=[];return e.passes.forEach((a,n)=>{var e=a.properties;Object.keys(e).forEach(e=>{var r=new cc_1.animation.UniformProxyFactory,t=(r.passIndex=n,r.uniformName=e,this.getDumpTypeOfUniform(a,e)),e={name:e,passIndex:n,type:t,uniformAdapter:r};o.push(e)})}),o}getDefaultValue(e){let r=null;var t=cc_1.js.getClassByName(e);if(t)r=new t;else switch(e){case"Boolean":r=!1;break;case"Number":r=0;break;case"String":r=""}return r}async getCurrentValue(e,r,t){var a,n,o;let i;return e&&e.passes&&(a=e.passes[r.passIndex],n=null==(n=t.type)?void 0:n.value,a)&&(void 0!==r.channelIndex?(o=a.getHandle(r.uniformName,r.channelIndex,cc_1.gfx.Type.FLOAT))&&(i=a.getUniform(o,0),"cc.Color"===(null==(o=t.combinedType)?void 0:o.value))&&(i=math_1.default.clamp(Math.round(255*i),0,255)):(t=a.getHandle(r.uniformName))&&n&&(cc_1.renderer.Pass.getTypeFromHandle(t)<cc_1.gfx.Type.SAMPLER1D?(i=this.getDefaultValue(n),a.getUniform(t,i)):(o=e.getProperty(r.uniformName))&&o._uuid&&(i=await(0,util_1.promisify)(cc_1.assetManager.loadAny)(o._uuid)))),i}colorFloatToInt(e){let r=e.concat();return r=r.map(e=>math_1.default.clamp(Math.round(255*e),0,255))}}const uniformHandler=new UniformHandler;exports.uniformHandler=uniformHandler;