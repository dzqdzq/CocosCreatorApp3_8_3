"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,a,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(a,t);i&&("get"in i?a.__esModule:!i.writable&&!i.configurable)||(i={enumerable:!0,get:function(){return a[t]}}),Object.defineProperty(e,r,i)}:function(e,a,t,r){e[r=void 0===r?t:r]=a[t]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding(a,e,t);return __setModuleDefault(a,e),a};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Particle2DManager=void 0;const path_1=require("path"),plist=__importStar(require("plist")),fs_1=require("fs");class Particle2DManager{async exportParticlePlist(e){e=EditorExtends.Component.getComponent(e);if(e){var a=(await Editor.Dialog.save({title:"Save Particle",path:(0,path_1.join)(Editor.Project.path,"assets"),filters:[{name:"Particle",extensions:["plist"]}]})).filePath;if(a){var t=(0,path_1.join)(Editor.Project.path,"assets");if(Editor.Utils.Path.contains(t,a))try{var r=e.file&&e.file._uuid||"db://internal/default_ui/atom.plist",i=await Editor.Message.request("asset-db","query-path",r),o=plist.parse((0,fs_1.readFileSync)(i,"utf8")),n=this._applyPlistData(o,e),s="db://assets/"+(0,path_1.relative)(t,a);return await Editor.Message.request("asset-db","create-asset",s,plist.build(n),{overwrite:!0})}catch(e){console.error(e)}else await Editor.Dialog.warn(Editor.I18n.t("scene.messages.warning"),{detail:Editor.I18n.t("scene.messages.particle_system_2d.export_error"),buttons:[Editor.I18n.t("scene.messages.confirm")]})}}}_applyPlistData(e,a){e.maxParticles=a.totalParticles,e.angle=a.angle,e.angleVariance=a.angleVar,e.duration=a.duration,e.startColorRed=a.startColor.r/255,e.startColorGreen=a.startColor.g/255,e.startColorBlue=a.startColor.b/255,e.startColorAlpha=a.startColor.a/255,e.startColorVarianceRed=a.startColorVar.r/255,e.startColorVarianceGreen=a.startColorVar.g/255,e.startColorVarianceBlue=a.startColorVar.b/255,e.startColorVarianceAlpha=a.startColorVar.a/255,e.finishColorRed=a.endColor.r/255,e.finishColorGreen=a.endColor.g/255,e.finishColorBlue=a.endColor.b/255,e.finishColorAlpha=a.endColor.a/255,e.finishColorVarianceRed=a.endColorVar.r/255,e.finishColorVarianceGreen=a.endColorVar.g/255,e.finishColorVarianceBlue=a.endColorVar.b/255,e.finishColorVarianceAlpha=a.endColorVar.a/255,e.startParticleSize=a.startSize,e.startParticleSizeVariance=a.startSizeVar,e.finishParticleSize=a.endSize,e.finishParticleSizeVariance=a.endSizeVar,e.positionType=a._positionType,e.sourcePositionVariancex=a.posVar.x,e.sourcePositionVariancey=a.posVar.y,e.rotationStart=a.startSpin,e.rotationStartVariance=a.startSpinVar,e.rotationEnd=a.endSpin,e.rotationEndVariance=a.endSpinVar,e.emitterType=a.emitterMode,e.gravityx=a.gravity.x,e.gravityy=a.gravity.y,e.speed=a.speed,e.speedVariance=a.speedVar,e.radialAcceleration=a.radialAccel,e.radialAccelVariance=a.radialAccelVar,e.tangentialAcceleration=a.tangentialAccel,e.tangentialAccelVariance=a.tangentialAccelVar,e.rotationIsDir=a.rotationIsDir,e.maxRadius=a.startRadius,e.maxRadiusVariance=a.startRadiusVar,e.minRadius=a.endRadius,e.minRadiusVariance=a.endRadiusVar,e.rotatePerSecond=a.rotatePerS,e.rotatePerSecondVariance=a.rotatePerSVar,e.particleLifespan=a.life,e.particleLifespanVariance=a.lifeVar,e.emissionRate=a.emissionRate;a=a.spriteFrame;return a&&a._uuid&&(e.spriteFrameUuid=a._uuid,delete e.textureFileName,delete e.textureImageData),e}}exports.Particle2DManager=Particle2DManager,exports.default=new Particle2DManager;