"use strict";var __importDefault=this&&this.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(exports,"__esModule",{value:!0});const linear_ticks_1=__importDefault(require("./linear-ticks")),math_1=__importDefault(require("../../../../utils/math"));function _snapPixel(i){return Math.floor(i)}function _uninterpolate(t,s){return s=(s-=t)||1/s,function(i){return(i-t)/s}}function _interpolate(t,s){return function(i){return t*(1-i)+s*i}}class Grid{constructor(i,t){this._canvasWidth=0,this._canvasHeight=0,this.hTicks=null,this.xAxisScale=1,this.xAxisOffset=1,this.xAnchor=.5,this.vTicks=null,this.yAxisScale=1,this.yAxisOffset=1,this.yAnchor=.5,this._xAnchorOffset=0,this._yAnchorOffset=0,this.pixelToValueH=null,this.valueToPixelH=null,this.pixelToValueV=null,this.valueToPixelV=null,this.xDirection=0,this.yDirection=0,this.xMinRange=null,this.xMaxRange=null,this.yMinRange=null,this.yMaxRange=null,this._canvasWidth=i,this._canvasHeight=t}setAnchor(i,t){this.xAnchor=math_1.default.clamp(i,-1,1),this.yAnchor=math_1.default.clamp(t,-1,1)}setScaleH(i,t,s){this.hTicks=(new linear_ticks_1.default).initTicks(i,t,s).spacing(10,80),this.xAxisScale=math_1.default.clamp(this.xAxisScale,this.hTicks.minValueScale,this.hTicks.maxValueScale),this.pixelToValueH=i=>(i-this.xAxisOffset)/this.xAxisScale,this.valueToPixelH=i=>i*this.xAxisScale+this.xAxisOffset}setMappingH(a,h,l){this._xAnchorOffset=a/(h-a),this.xDirection=0<h-a?1:-1,this.pixelToValueH=i=>{var t=this.xAxisOffset,s=this._canvasWidth/l,e=_uninterpolate(0,this._canvasWidth);return _interpolate(a*s,h*s)(e(i-t))/this.xAxisScale},this.valueToPixelH=i=>{var t=this.xAxisOffset,s=this._canvasWidth/l,s=_uninterpolate(a*s,h*s);return _interpolate(0,this._canvasWidth)(s(i*this.xAxisScale))+t}}setScaleV(i,t,s){this.vTicks=(new linear_ticks_1.default).initTicks(i,t,s).spacing(10,80),this.yAxisScale=math_1.default.clamp(this.yAxisScale,this.vTicks.minValueScale,this.vTicks.maxValueScale),this.pixelToValueV=i=>(this._canvasHeight-i+this.yAxisOffset)/this.yAxisScale,this.valueToPixelV=i=>-i*this.yAxisScale+this._canvasHeight+this.yAxisOffset}setMappingV(a,h,l){this._yAnchorOffset=a/(h-a),this.yDirection=0<h-a?1:-1,this.pixelToValueV=i=>{var t=this.yAxisOffset,s=this._canvasHeight/l,e=_uninterpolate(0,this._canvasHeight);return _interpolate(a*s,h*s)(e(i-t))/this.yAxisScale},this.valueToPixelV=i=>{var t=this.yAxisOffset,s=this._canvasHeight/l,s=_uninterpolate(a*s,h*s);return _interpolate(0,this._canvasHeight)(s(i*this.yAxisScale))+t}}pan(i,t){this.panX(i),this.panY(t)}panX(s){if(this.valueToPixelH){s=this.xAxisOffset+s;let i,t;void(this.xAxisOffset=0)!==this.xMinRange&&null!==this.xMinRange&&(i=this.valueToPixelH(this.xMinRange)),void 0!==this.xMaxRange&&null!==this.xMaxRange&&(t=this.valueToPixelH(this.xMaxRange),t=Math.max(0,t-this._canvasWidth)),this.xAxisOffset=s,void 0!==i&&void 0!==t?this.xAxisOffset=math_1.default.clamp(this.xAxisOffset,-t,-i):void 0!==i?this.xAxisOffset=Math.min(this.xAxisOffset,-i):void 0!==t&&(this.xAxisOffset=Math.max(this.xAxisOffset,-t))}}panY(s){if(this.valueToPixelV){s=this.yAxisOffset+s;let i,t;void(this.yAxisOffset=0)!==this.yMinRange&&null!==this.yMinRange&&(i=this.valueToPixelV(this.yMinRange)),void 0!==this.yMaxRange&&null!==this.yMaxRange&&(t=this.valueToPixelV(this.yMaxRange),t=Math.max(0,t-this._canvasHeight)),this.yAxisOffset=s,void 0!==i&&void 0!==t?this.yAxisOffset=math_1.default.clamp(this.yAxisOffset,-t,-i):void 0!==i?this.yAxisOffset=Math.min(this.yAxisOffset,-i):void 0!==t&&(this.yAxisOffset=Math.max(this.yAxisOffset,-t))}}xAxisScaleAt(i,t){var s=this.pixelToValueH(i),t=(this.xAxisScale=math_1.default.clamp(t,this.hTicks.minValueScale,this.hTicks.maxValueScale),this.valueToPixelH(s));this.pan(i-t,0)}yAxisScaleAt(i,t){var s=this.pixelToValueV(i),t=(this.yAxisScale=math_1.default.clamp(t,this.vTicks.minValueScale,this.vTicks.maxValueScale),this.valueToPixelV(s));this.pan(0,i-t)}xAxisSync(i,t){this.xAxisOffset=i,this.xAxisScale=t}yAxisSync(i,t){this.yAxisOffset=i,this.yAxisScale=t}resize(i,t){i&&t&&(0!==this._canvasWidth&&this.panX((i-this._canvasWidth)*(this.xAnchor+this._xAnchorOffset)),0!==this._canvasHeight&&this.panY((t-this._canvasHeight)*(this.yAnchor+this._yAnchorOffset)),this._canvasWidth=i,this._canvasHeight=t)}updateRange(){var i,t;this.hTicks&&(i=this.pixelToValueH(0),t=this.pixelToValueH(this._canvasWidth),this.hTicks.range(i,t,this._canvasWidth)),this.vTicks&&(i=this.pixelToValueV(0),t=this.pixelToValueV(this._canvasHeight),this.vTicks.range(i,t,this._canvasHeight))}}exports.default=Grid;