"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PanMode=void 0;const mode_base_1=require("./mode-base"),vec3_1=require("../../../../../utils/math/vec3"),cc_1=require("cc"),utils_1=require("../../utils"),v3a=new cc_1.Vec3,v3b=new cc_1.Vec3;class PanMode extends mode_base_1.ModeBase{constructor(){super(...arguments),this._right=new cc_1.Vec3,this._up=new cc_1.Vec3,this._panningSpeed=.4}async enter(){this._cameraCtrl.node.getWorldRotation(this._curRot),vec3_1.MVec3.transformQuat(this._right,cc_1.Vec3.UNIT_X,this._curRot),vec3_1.MVec3.normalize(this._right,this._right),vec3_1.MVec3.transformQuat(this._up,cc_1.Vec3.UNIT_Y,this._curRot),vec3_1.MVec3.normalize(this._up,this._up),this._cameraCtrl.emit("camera-move-mode",utils_1.CameraMoveMode.PAN),cce.Engine.enterState(cce.NeedAnimState.CAMERA_PAN)}async exit(){this._cameraCtrl.updateViewCenterByDist(-this._cameraCtrl.viewDist),cce.Engine.exitState(cce.NeedAnimState.CAMERA_PAN)}onMouseMove(e){var t=e.moveDeltaX,e=e.moveDeltaY,c=this._cameraCtrl.viewDist/800;return vec3_1.MVec3.multiplyScalar(v3a,this._right,-t*this._panningSpeed*c),vec3_1.MVec3.multiplyScalar(v3b,this._up,e*this._panningSpeed*c),this._cameraCtrl.node.getWorldPosition(this._curPos),vec3_1.MVec3.add(this._curPos,this._curPos,v3a),vec3_1.MVec3.add(this._curPos,this._curPos,v3b),this._cameraCtrl.node.setWorldPosition(this._curPos),vec3_1.MVec3.add(this._cameraCtrl.sceneViewCenter,this._cameraCtrl.sceneViewCenter,v3a),vec3_1.MVec3.add(this._cameraCtrl.sceneViewCenter,this._cameraCtrl.sceneViewCenter,v3b),this._cameraCtrl.viewDist=vec3_1.MVec3.distance(this._curPos,this._cameraCtrl.sceneViewCenter),this._cameraCtrl.updateGrid(),!1}}exports.PanMode=PanMode;