"use strict";var ModeCommand,__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CameraController2D=void 0;const camera_controller_base_1=__importDefault(require("../camera-controller-base")),utils_1=require("../utils"),grid_1=__importDefault(require("../grid")),math_1=__importDefault(require("../../../../utils/math")),tween_1=require("../tween"),cc_1=require("cc"),finite_state_machine_1=__importDefault(require("../../../utils/state-machine/finite-state-machine")),idle_mode_1=require("./mode/idle-mode"),pan_mode_1=require("./mode/pan-mode"),ruler_1=require("./web/ruler"),ruler_2=require("./native/ruler"),window_1=require("../../../../utils/window"),_defaultMarginPercentage=30,_lineEnd=1e6,_scales=[.25,.33,.5,.67,.75,.8,.9,1,1.1,1.25,1.5,1.75,2,3,4,5];!function(e){e.ToIdle="toIdle",e.ToPan="toPan"}(ModeCommand=ModeCommand||{});class CameraController2D extends camera_controller_base_1.default{constructor(){super(...arguments),this._lineColor=cc.color().fromHEX("#555555"),this._wheelSpeed=6,this._near=1,this._far=1e4}isMoving(){return this._modeFSM.currentState!==this._idleMode}get lineColor(){return this._lineColor}set lineColor(e){this._lineColor=e}get grid(){return this._grid}init(e){super.init(e),this._size=(0,window_1.getMainWindowSize)(),this._contentRect=new cc_1.Rect(0,0,this._size.width,this._size.height),this._gridMeshComp=utils_1.CameraUtils.createGrid("internal/editor/grid-2d"),this._gridNode=this._gridMeshComp.node,this._gridNode.active=!1,this._initGrid(),this._initRuler(),this._initMode()}_initMode(){this._idleMode=new idle_mode_1.IdleMode(this,utils_1.CameraMoveMode.IDLE),this._panMode=new pan_mode_1.PanMode(this,utils_1.CameraMoveMode.PAN),this._modeFSM=new finite_state_machine_1.default([this._idleMode,this._panMode]),this._modeFSM.addTransition(this._idleMode,this._panMode,ModeCommand.ToPan).addTransition(this._panMode,this._idleMode,ModeCommand.ToIdle),this._modeFSM.Begin(this._idleMode)}_initRuler(){isSceneNative?this._ruler=new ruler_2.Ruler:this._ruler=new ruler_1.Ruler,this._ruler.init(),this.updateRuler()}updateRuler(){this._ruler.updateTicks(this._grid)}_initGrid(){var e=new grid_1.default(this._size.width,this._size.height),t=[0,1,1],i=[1,0,1];e.setScaleH([5,2],.01,5e3),e.setMappingH(t[0],t[1],t[2]),e.setScaleV([5,2],.01,5e3),e.setMappingV(i[0],i[1],i[2]),e.setAnchor(.5,.5),this._grid=e}updateGrid(){var t=[],e=[],i=[];this._updateGridData(t,e,this._lineColor,_lineEnd);for(let e=0;e<t.length;e+=2)i.push(e/2);utils_1.CameraUtils.updateVBAttr(this._gridMeshComp,cc_1.gfx.AttributeName.ATTR_POSITION,t),utils_1.CameraUtils.updateVBAttr(this._gridMeshComp,cc_1.gfx.AttributeName.ATTR_COLOR,e),utils_1.CameraUtils.updateIB(this._gridMeshComp,i),this.updateRuler()}set active(e){this._ruler.show(e),this.updateGrid(),this.showGrid(e),e&&(this._camera.projection=0,e=cc.quat(),this.node.setWorldRotation(e),this._camera.far=this.far,this._camera.near=this.near,this.onResize())}_adjustToCenter(e,t=null,i=!1,s){let o=0,r=0,a=0,h=0,n=(h=(t?(o=t.x,r=t.y,a=t.width,t):(a=this._size.width,this._size)).height,null!=s?s:1);var t=this._size,d=e/100*t.width,e=e/100*t.height,d=t.width-d,e=t.height-e,d=(s||(a<=d&&h<=e?0===a||0===a?n=1:(s=a/h,n=d/e<s?d/a:e/h,a*=n,h*=n):(s=this.fitSize(a,h,d,e),n=this.getSizeScale(s[0],s[1],a,h),a=s[0],h=s[1])),cce.Gizmo.transformToolData.scale2D=n,((t.width-a)/2-o*n)*this._grid.xDirection),e=((t.height-h)/2-r*n)*this._grid.yDirection;this._grid.xAxisSync(d,n),this._grid.yAxisSync(e,n),this.updateGrid(),this.adjustCamera(i),this._contentRect.width=a,this._contentRect.height=h}adjustCamera(e=!0){const t=cce.Gizmo.transformToolData.scale2D;var i=this._grid,s=i.xDirection*i.xAxisOffset,o=i.yDirection*i.yAxisOffset,s=cc.v3(this._size.width/2/t-s/t,this._size.height/2/t-o/t,5e3);this._contentRect.x=((this._size.width-this._contentRect.width)/2-i.xAxisOffset/i.xDirection)/t,this._contentRect.y=((this._size.height-this._contentRect.height)/2-i.yAxisOffset/i.yDirection)/t,e?(this.node.setWorldPosition(s),this._updateOrthoHeight(t),cce.Engine.repaintInEditMode()):(o=this.node.getWorldPosition(),(0,tween_1.tweenPosition)(o,s,200).step(e=>{this.node.setWorldPosition(e),this._updateOrthoHeight(t),cce.Engine.repaintInEditMode()}))}_updateGridData(t,i,s,o){var r=this._grid;if(r.updateRange(),r.hTicks)for(let e=r.hTicks.minTickLevel;e<=r.hTicks.maxTickLevel;e++){var a=r.hTicks.tickRatios[e];if(0<a){var h=s.clone(),n=(h.a=255*a,r.hTicks.ticksAtLevel(e,!0));for(let e=0;e<n.length;e++){var d=n[e];t.push(d,-o),t.push(d,o),i.push(h.x,h.y,h.z,h.w),i.push(h.x,h.y,h.z,h.w)}}}if(r.vTicks)for(let e=r.vTicks.minTickLevel;e<=r.vTicks.maxTickLevel;e++){var l=r.vTicks.tickRatios[e];if(0<l){var _=s.clone(),c=(_.a=255*l,r.vTicks.ticksAtLevel(e,!0));for(let e=0;e<c.length;e++){var u=c[e];t.push(-o,u),t.push(o,u),i.push(_.x,_.y,_.z,_.w),i.push(_.x,_.y,_.z,_.w)}}}}_updateOrthoHeight(e){this._camera.orthoHeight=this._size.height/2/e}focus(e,t,i=!1){let s=null,o=-1e10,r=-1e10,a=1e10,h=1e10;var{contentRect:t,scale:n}=t||{};t?s=(0,cc_1.rect)(t.x,t.y,t.width,t.height):e&&(e.forEach(e=>{var t,i=cce.Node.query(e);i?(t=i.getComponent(cc_1.UITransform),h=t?(t=t.getBoundingBoxToWorld(),o=Math.max(t.xMax,o),r=Math.max(t.yMax,r),a=Math.min(t.xMin,a),Math.min(t.yMin,h)):(t=i.getWorldPosition(),o=Math.max(t.x,o),r=Math.max(t.y,r),a=Math.min(t.x,a),Math.min(t.y,h))):console.error(`Node with UUID ${e} is not exist!`)}),s=cc.rect(a,h,o-a,r-h)),this._adjustToCenter(_defaultMarginPercentage,s,i,n)}smoothScale(e,t){return Math.pow(2,.002*t)*e}fitSize(e,t,i,s){let o=0,r=0;return i<e&&s<t?(o=i,(r=t*i/e)>s&&(r=s,o=e*s/t)):r=i<e?t*(o=i)/e:s<t?(o=e*s/t,s):(o=e,t),[o,r]}getSizeScale(e,t,i,s){return Math.max(i<=0?1:e/i,s<=0?1:t/s)}scale(e,t,i){e=this.smoothScale(cce.Gizmo.transformToolData.scale2D,e*this.wheelSpeed),e=math_1.default.clamp(e,this._grid.hTicks.minValueScale,this._grid.hTicks.maxValueScale);this._grid.xAxisScaleAt(t,e),this._grid.yAxisScaleAt(i,e),cce.Gizmo.transformToolData.scale2D=e,this.updateGrid(),this.adjustCamera()}onMouseDown(e){return e.middleButton||e.rightButton?(this._modeFSM.issueCommand(ModeCommand.ToPan),!1):this._modeFSM.currentState.onMouseDown(e)}onMouseMove(e){return this._modeFSM.currentState.onMouseMove(e)}onMouseUp(e){return this._modeFSM.currentState.modeName===utils_1.CameraMoveMode.PAN?(this._modeFSM.issueCommand(ModeCommand.ToIdle),!1):this._modeFSM.currentState.onMouseUp(e)}onMouseWheel(e){this.scale(e.wheelDeltaY*this._wheelBaseScale,e.x,e.y)}onKeyDown(e){" "===e.key.toLowerCase()&&this._modeFSM.issueCommand(ModeCommand.ToPan)}onKeyUp(e){" "===e.key.toLowerCase()&&this._modeFSM.currentState.modeName===utils_1.CameraMoveMode.PAN&&this._modeFSM.issueCommand(ModeCommand.ToIdle)}onUpdate(e){}onDesignResolutionChange(){this._adjustToCenter(_defaultMarginPercentage,null,!0)}onResize(e){null==e&&(e=(0,window_1.getMainWindowSize)()),this._size=e,this._grid.resize(e.width,e.height),this._ruler.resize(e.width,e.height),this.updateGrid(),this.adjustCamera()}refresh(){this.updateGrid(),this.adjustCamera()}zoomTo(e,t,i){t=void 0!==t?t:this._size.width/2,i=void 0!==i?i:this._size.height/2,this._grid.xAxisScaleAt(t,e),this._grid.yAxisScaleAt(i,e),cce.Gizmo.transformToolData.scale2D=e,this.updateGrid(),this.adjustCamera()}zoomUp(){this.zoomTo(1.5*cce.Gizmo.transformToolData.scale2D)}zoomDown(){this.zoomTo(cce.Gizmo.transformToolData.scale2D/1.5)}zoomReset(){this.zoomTo(1)}get contentRect(){return this._contentRect}}exports.CameraController2D=CameraController2D;