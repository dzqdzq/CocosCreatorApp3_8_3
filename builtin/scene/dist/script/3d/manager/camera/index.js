"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Camera=void 0;const events_1=require("events"),listener_1=__importDefault(require("./listener")),utils_1=require("./utils"),cc_1=require("cc"),camera_controller_2d_1=require("./2d/camera-controller-2d"),camera_controller_3d_1=require("./3d/camera-controller-3d"),dump_1=__importDefault(require("../../../export/dump")),scene_view_data_1=require("../scene-view/scene-view-data");class Camera extends events_1.EventEmitter{constructor(){super(...arguments),this._controller2D=new camera_controller_2d_1.CameraController2D,this._controller3D=new camera_controller_3d_1.CameraController3D,this._controller=this._controller3D,this._controllerFirstChange=!1,this._currentUuid="",this._cameraInfos={},this._cameraUuids=[]}get controller2D(){return this._controller2D}get controller3D(){return this._controller3D}get controller(){return this._controller}set is2D(e){this._controller&&(this._controller.active=!1),this._controller=e?this._controller2D:this._controller3D,this._controller.active=!0,!this._controllerFirstChange&&this._currentUuid&&(this.defaultFocus(this._currentUuid),this._controllerFirstChange=!0),cce.Engine.repaintInEditMode()}get is2D(){return this._controller===this._controller2D}get camera(){return this._camera}bindOperation(){(0,listener_1.default)(this)}init(){this._camera=utils_1.CameraUtils.createCamera(cc.color(48,48,48,0)),this._controller2D.init(this._camera),this._controller3D.init(this._camera),this._controller3D.on("mode",e=>{this.onControl3DModeChanged(e)}),this.initFromConfig(),this.bindOperation(),scene_view_data_1.sceneViewData.on("target-resolution-changed",()=>{this.onDesignResolutionChange()})}async initFromConfig(){var e=await Editor.Profile.getConfig("scene","camera"),e=(e&&(void 0!==e.iso&&this.setCameraISO(e.iso),void 0!==e.aperture&&this.setCameraAperture(e.aperture),void 0!==e.shutter&&this.setCameraShutter(e.shutter),void 0!==e.fov&&this.setCameraProperty({fov:e.fov}),void 0!==e.color&&this.setCameraProperty({clearColor:e.color}),void 0!==e.far&&(this.controller3D.far=e.far),void 0!==e.near&&(this.controller3D.near=e.near),void 0!==e.wheelSpeed&&(this.controller3D.wheelSpeed=e.wheelSpeed),void 0!==e.far2D&&(this.controller2D.far=e.far2D),void 0!==e.near2D&&(this.controller2D.near=e.near2D),void 0!==e.wheelSpeed2D&&(this.controller2D.wheelSpeed=e.wheelSpeed2D),void 0!==e.wanderSpeed&&(this.controller3D.wanderSpeed=e.wanderSpeed),void 0!==e.enableAcceleration)&&this.setEnableAcceleration(e.enableAcceleration),await Editor.Profile.getConfig("scene","gizmos-infos"));void 0!==e.gridVisible&&null!==e.gridVisible&&this.setGridVisible(e.gridVisible),e.gridColor&&this.setGridLineColor(e.gridColor),this.is2D=e.is2D,this._cameraInfos=await Editor.Profile.getConfig("scene","camera-infos")||{},this._cameraUuids=await Editor.Profile.getConfig("scene","camera-uuids")||[]}onSceneOpened(e){this.refresh();var r=cce.SceneFacadeManager.queryCurrentSceneUuid();this._currentUuid!==r&&(this._currentUuid=r,this._controllerFirstChange=!1,this.defaultFocus(r))}defaultFocus(r){var r=this._cameraInfos[r];if(this.camera.camera.update(),r)this.focus(null,r);else{let e=null!=(r=cce.Scene.rootNode)&&r.uuid?[cce.Scene.rootNode.uuid]:null;this.is2D&&(r=null==(r=cce.Scene.rootNode)?void 0:r.getComponentInChildren(cc_1.Canvas))&&r.node&&(e=[r.node.uuid]),this.focus(e)}}onSceneClosed(){this.saveCameraInfos(void 0,!1)}async saveConfig(){await this.saveCameraInfos(),cce.Ipc.send("record-gizmos",{gizmosInfos:{gridVisible:this.isGridVisible(),gridColor:this.colorToArray(this.getGridLineColor())}});var e=await Editor.Profile.getConfig("scene","camera"),r={fov:this.getCameraFov(),far:this.controller3D.far,near:this.controller3D.near,color:this.colorToArray(this.getCameraColor()),wheelSpeed:this.controller3D.wheelSpeed,wanderSpeed:this.getWanderSpeed(),enableAcceleration:this.getEnableAcceleration(),far2D:this.controller2D.far,near2D:this.controller2D.near,wheelSpeed2D:this.controller2D.wheelSpeed,iso:this._camera.iso,aperture:this._camera.aperture,shutter:this._camera.shutter};await Editor.Profile.setConfig("scene","camera",Object.assign({},e,r))}async saveCameraInfos(e,r=!0){var t,o;(e=null!=e?e:this._currentUuid)&&(t=this.getCurCameraInfo(),-1!==(o=this._cameraUuids.indexOf(e))?(delete this._cameraInfos[e],this._cameraUuids.splice(o,1),this._cameraUuids.push(e)):(this._cameraUuids.push(e),50<this._cameraUuids.length&&(delete this._cameraInfos[this._cameraUuids[0]],this._cameraUuids.splice(0,1))),this._cameraInfos[e]=t,r)&&(await Editor.Profile.setConfig("scene","camera-infos",this._cameraInfos),await Editor.Profile.setConfig("scene","camera-uuids",this._cameraUuids))}updateForEmptyScene(r){this._currentUuid="",this._controllerFirstChange=!1,delete this._cameraInfos[r],this._cameraUuids=this._cameraUuids.filter(e=>e!==r)}getCurCameraInfo(){var e=this.controller3D.node,r=e.getWorldPosition(cc.v3()),e=e.getWorldRotation(cc.quat()),r={x:r.x,y:r.y,z:r.z},e={x:e.x,y:e.y,z:e.z,w:e.w},t=this.controller3D.sceneViewCenter;return{position:r,rotation:e,viewCenter:{x:t.x,y:t.y,z:t.z},contentRect:new cc_1.Rect(this.controller2D.contentRect),scale:cce.Gizmo.transformToolData.scale2D}}setGridVisible(e){null!=e&&(this._controller2D&&(this._controller2D.isGridVisible=e),this._controller3D&&(this._controller3D.isGridVisible=e),(this._controller===this._controller3D?this._controller2D:this._controller3D).showGrid(!1),cce.Engine.repaintInEditMode())}isGridVisible(){return this._controller.isGridVisible}setGridLineColor(e){!e||e.length<4||(this._controller3D.lineColor=new cc.Color(e[0],e[1],e[2],e[3]),this._controller3D.updateGrid(),this._controller2D.lineColor=new cc.Color(e[0],e[1],e[2],e[3]),this._controller2D.updateGrid(),cce.Engine.repaintInEditMode())}getGridLineColor(){return this._controller3D.lineColor}getCameraFov(){if(this._camera)return this._camera.fov}getCameraFar(){return this.controller.far}getCameraNear(){return this.controller.near}getCameraColor(){if(this._camera)return this._camera.clearColor}getCameraISO(){return this._camera.iso}setCameraISO(e){this._camera.iso=e}setCameraAperture(e){this._camera.aperture=e}getCameraAperture(e){return this._camera.aperture}getCameraShutter(e){return this._camera.shutter}setCameraShutter(e){this._camera.shutter=e}getWheelSpeed(){return this.controller.wheelSpeed}setWheelSpeed(e){this.controller.wheelSpeed=e}getWanderSpeed(){return this.controller3D.wanderSpeed}setWanderSpeed(e){this.controller3D.wanderSpeed=e}getEnableAcceleration(){return this.controller3D.enableAcceleration}setEnableAcceleration(e){this.controller3D.enableAcceleration=e}colorToArray(e){return e?[e.r,e.g,e.b,e.a]:[0,0,0,0]}arrayToColor(e){return new cc.Color(e[0],e[1],e[2],e[3])}getCameraProperty(){if(this._camera)return dump_1.default.dumpComponent(this._camera).value}setCameraProperty(r){"object"==typeof r&&(Object.keys(r).forEach(e=>{void 0!==r[e]&&null!==r[e]&&("clearColor"===e?this._camera[e]=cc.color(r[e][0],r[e][1],r[e][2],r[e][3]):("near"===e||"far"===e?this.controller[e]=r[e]:"fov"===e&&this.emit("fov-changed",r[e]),this._camera[e]=r[e]))}),cce.Engine.repaintInEditMode())}resetCameraProperty(){this.setWanderSpeed(10),this.setEnableAcceleration(!0),this.setCameraAperture(cc_1.renderer.scene.CameraAperture.F16_0),this.setCameraShutter(cc_1.renderer.scene.CameraShutter.D125),this.setCameraISO(cc_1.renderer.scene.CameraISO.ISO100),this.is2D?(this.setWheelSpeed(6),this.setCameraProperty({fov:45,far:1e4,near:6,clearColor:this.colorToArray(new cc_1.Color("#303030"))})):(this.setWheelSpeed(.01),this.setCameraProperty({fov:45,far:1e4,near:.01,clearColor:this.colorToArray(new cc_1.Color("#303030"))})),cce.Engine.repaintInEditMode()}focus(e=null,r,t=!1){this._controller.focus(e,r,t)}rotateCameraToDir(e,r){this._controller.rotateCameraToDir(e,r)}changeProjection(){this._controller.changeProjection()}reset(e,r){this._controller instanceof camera_controller_3d_1.CameraController3D&&this._controller.reset()}alignNodeToSceneView(e){this._controller.alignNodeToSceneView(e)}alignSceneViewToNode(e){this._controller.alignSceneViewToNode(e)}onMouseDown(e){return this._controller.onMouseDown(e)}onMouseMove(e){return this._controller.onMouseMove(e)}onMouseUp(e){return this._controller.onMouseUp(e)}onMouseWheel(e){return this._controller.onMouseWheel(e)}onKeyDown(e){return this._controller.onKeyDown(e)}onKeyUp(e){return this._controller.onKeyUp(e)}onUpdate(e){this._controller.onUpdate(e)}onDesignResolutionChange(){this._controller.onDesignResolutionChange()}async onResize(e){await this._controller.onResize(e)}refresh(){this._controller.refresh()}zoomUp(){this._controller.zoomUp()}zoomDown(){this._controller.zoomDown()}zoomReset(){this._controller.zoomReset()}getCamera(){var e;return null==(e=this._camera)?void 0:e.camera}onControl3DModeChanged(e){this.emit("control-3d-mode",e)}setRulerVisible(e){this._controller===this._controller2D&&(this._controller._ruler.show(e),this._controller.updateRuler())}}exports.Camera=Camera,exports.default=new Camera;