"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&("get"in s?t.__esModule:!s.writable&&!s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,s)}:function(e,t,r,i){e[i=void 0===i?r:i]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ScriptManager=void 0;const executor_1=require("@editor/lib-programming/dist/executor"),cc_1=require("cc"),events_1=require("events"),loader_1=require("@cocos/creator-programming-quick-pack/lib/loader"),url_1=require("url"),remote_1=require("@electron/remote"),remoteEditor=(0,remote_1.getGlobal)("Editor");class AsyncIterationConcurrency1{constructor(e){this._executionPromise=null,this._pendingPromise=null,this._iterate=e}nextIteration(){return this._executionPromise?this._pendingPromise||(this._pendingPromise=this._executionPromise.finally(()=>(this._pendingPromise=null,this.nextIteration()))):this._executionPromise=Promise.resolve(this._iterate()).finally(()=>{this._executionPromise=null})}}const importExceptionLogTag="::SceneExecutorImportExceptionHandler::",importExceptionLogRegex=new RegExp(importExceptionLogTag);class GlobalEnv{constructor(){this._incrementalKeys=new Set}async record(e){var t=Object.keys(globalThis),e=(await e(),Object.keys(globalThis));for(const r of e)t.includes(r)||this._incrementalKeys.add(r);console.debug("Incremental keys: "+Array.from(this._incrementalKeys))}clear(){for(const e of this._incrementalKeys)delete globalThis[e]}}const globalEnv=new GlobalEnv;class ScriptManager extends events_1.EventEmitter{constructor(){super(),this.EXECUTION_FINISHED="execution-finished",this._suspendPromise=null,this._reloadScripts=new AsyncIterationConcurrency1(()=>this._execute()),this._syncPluginScripts=new AsyncIterationConcurrency1(()=>this._syncPluginScriptList())}suspend(e){this._suspendPromise=e}async init(){const i=require("cc");EditorExtends.on("class-registered",(e,t,r)=>{t&&i.js.isChildClassOf(e,cc_1.Component)&&EditorExtends.Component.addMenu(e,"i18n:menu.custom_script/"+r,-1)});var e=await Editor.Message.request("programming","packer-driver/get-loader-context","editor"),e=await loader_1.QuickPackLoaderContext.deserialize(e);const t=(await Promise.resolve().then(()=>__importStar(require("cc/preload"))))["loadDynamic"];var r=await Editor.Message.request("programming","packer-driver/query-cc-editor-module-map");this._executor=await executor_1.Executor.create({importEngineMod:async e=>t(e),quickPackLoaderContext:e,beforeUnregisterClass:e=>{EditorExtends.Component.removeMenu(e)},logger:{loadException:(e,t,r)=>{},possibleCircularReference:(e,t,r,i)=>{console.warn(Editor.I18n.t("scene.scripting.crReport",{source:t,imported:e,importer:(t=r.url,e="project:///",t.startsWith(e)?`{asset(db://${t.substr(e.length).replace(".js",".ts")})}`:t)}),null==(r=null==i?void 0:i.error)?void 0:r.stack)}},importExceptionHandler:(...e)=>this._handleImportException(...e),cceModuleMap:r}),this._executor.addPolyfillFile(require.resolve("@editor/build-polyfills/prebuilt/editor/bundle")),await this._syncPluginScripts.nextIteration(),await this._reloadScripts.nextIteration(),Editor.Module.__protected__.setImportProjectModuleDelegate(async e=>{var t=await Editor.Message.request("asset-db","query-path",e);if(t)return t=(0,url_1.pathToFileURL)(t),this._executor.import(t.href);throw new Error(e+" is not a valid database URL.")})}async investigatePackerDriver(){this._executeAsync()}async queryScriptName(e){var e=Editor.Utils.UUID.compressUUID(e,!1),e=this._executor.queryClassesInModule(e);return(e=e&&e.find(e=>cc_1.js.isChildClassOf(e,cc_1.Component)))?cc_1.js.getClassName(e):null}async queryScriptCid(e){var e=Editor.Utils.UUID.compressUUID(e,!1),e=this._executor.queryClassesInModule(e);return(e=e&&e.find(e=>cc_1.js.isChildClassOf(e,cc_1.Component)))?cc_1.js.getClassId(e):null}async _loadScripts(){}async loadScript(e){this._syncPluginScriptListAsync()}async removeScript(e){this._syncPluginScriptListAsync()}async scriptChange(e){this._syncPluginScriptListAsync()}_executeAsync(){this._reloadScripts.nextIteration()}_execute(){var e;return Promise.resolve(null!=(e=this._suspendPromise)?e:void 0).catch(e=>{console.error(e)}).finally(()=>(this._suspendPromise=null,remoteEditor.Logger.clear(importExceptionLogRegex),globalEnv.clear(),globalEnv.record(()=>this._executor.reload().finally(()=>{this.emit(this.EXECUTION_FINISHED)}))))}_syncPluginScriptListAsync(){this._syncPluginScripts.nextIteration()}async _syncPluginScriptList(){return Promise.resolve(Editor.Message.request("programming","query-sorted-plugins",{loadPluginInEditor:!0})).then(e=>{this._executor.setPluginScripts(e)}).catch(e=>{console.error(e)})}_handleImportException(e){console.error(`{hidden(${importExceptionLogTag})}`,e)}}exports.ScriptManager=ScriptManager,exports.default=new ScriptManager;