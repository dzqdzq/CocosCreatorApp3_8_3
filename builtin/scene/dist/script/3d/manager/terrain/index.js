"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TerrainManager=void 0;const _=require("lodash"),cc_1=require("cc"),path_1=require("path"),EventEmitter_1=__importDefault(require("../../../public/EventEmitter")),node_1=__importDefault(require("../node")),plugin_1=__importDefault(require("../plugin")),selection_1=__importDefault(require("../selection")),asset_1=require("../../../utils/asset");class TerrainManager extends EventEmitter_1.default{constructor(){super(...arguments),this.editedComponents=[],this.selectedComponents=[]}get name(){return"cc.Terrain"}init(){selection_1.default.on("select",e=>{this.select(e)}),selection_1.default.on("unselect",e=>{this.unselect(e)})}select(e){var t=node_1.default.query(e);t?(t=find(t._components,this.name))&&((t.manager=this).selectedComponents.includes(t)||this.selectedComponents.push(t),this.editedComponents.includes(t)||this.editedComponents.push(t)):console.error(`Node with UUID ${e} does not exist!`)}unselect(e){var t,s,a=node_1.default.query(e);a?(t=find(a._components,this.name))&&(t.manager=null,-1!==(s=this.selectedComponents.indexOf(t))&&this.selectedComponents.splice(s,1),a.objFlags&cc.Object.Flags.Destroying||a.objFlags&cc.Object.Flags.Destroyed)&&-1!==(s=this.editedComponents.indexOf(t))&&this.editedComponents.splice(s,1):console.error(`Node with UUID ${e} does not exist!`)}set isTerrainChange(t){this.selectedComponents.forEach(e=>{e.isTerrainChange=t})}get isTerrainChange(){let t=!1;return this.editedComponents.forEach(e=>{e.isTerrainChange&&(t=e.isTerrainChange)}),t}onSculpt(e){this.emit("sculpt",e)}async close(){return this.isTerrainChange?await this.saveAssetDialog("",!0):1}async saveAssetDialog(e,t){let s=1;for(const r of this.editedComponents)if(r.isTerrainChange){var a,i;if(r._asset&&r._asset._uuid)if(await Editor.Message.request("asset-db","query-asset-info",r._asset._uuid)){var n=await this.saveAsset(t,r);2===n&&(s=n);continue}let e=(await Editor.Dialog.save({title:Editor.I18n.t("scene.terrain.is_create_message"),path:(0,path_1.join)(Editor.Project.path,"assets"),filters:[{name:"Terrains",extensions:["terrain"]}]})).filePath||"";Array.isArray(e)?(e=e[0],n=(0,path_1.join)(Editor.Project.path,"assets"),Editor.Utils.Path.contains(n,e)?(a=await Editor.Message.request("asset-db","query-url",e))&&(i=this.serialize(r),await Editor.Message.request("asset-db","create-asset",a,Buffer.from(i))?r.isTerrainChange=!1:s=2):(await Editor.Dialog.warn(Editor.I18n.t("scene.messages.warning"),{detail:Editor.I18n.t("scene.terrain.path_unlegal"),buttons:[Editor.I18n.t("scene.messages.confirm")]}),s=2)):r.isTerrainChange=!1}return s}async saveAsset(t=!1,s){let a=1;if(s.isTerrainChange){if(t){let e="Terrain component";t=await Editor.Message.request("asset-db","query-asset-info",s._asset._uuid);t&&(e=t.url+`.
`+e),a=await cce.Ipc.send("dirty-dialog",e)}else a=0;switch(a){case 0:var e=this.serialize(s);await cce.Ipc.send("save-asset",s._asset._uuid,e)?s.isTerrainChange=!1:a=2;break;case 1:s.isTerrainChange=!1}}return a}serialize(e){return e.exportAsset()._exportNativeData()}onRemoveTerrain(e,t){for(const s of this.editedComponents)s._asset&&s._asset._uuid===e&&(node_1.default.emit("change",s.node),plugin_1.default.forceUpdateToolbar())}async addAssetToComp(e){for(const s of this.selectedComponents){if(e)try{var t=await(0,asset_1.loadAssetUncached)(e);s._asset=t}catch(e){s._asset=null}finally{node_1.default.emit("change",s.node)}else s.gizmo&&s.gizmo.setCurrentEditMode(0),s._asset||(s._asset=new cc_1.TerrainAsset,s.isTerrainChange=!1);cce.Plugin.forceUpdateToolbar()}}}function find(e,t){return e.find(e=>e.__classname__===t)}exports.TerrainManager=TerrainManager,exports.default=new TerrainManager;