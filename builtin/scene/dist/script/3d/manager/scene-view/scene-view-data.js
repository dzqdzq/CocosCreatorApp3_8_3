"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.sceneViewData=exports.SceneViewData=void 0;const EventEmitter=require("events");class SceneViewData extends EventEmitter{constructor(){super(...arguments),this._targetResolution={width:960,height:640},this._targetAspect=1,this.targetDeviceName="",this._isSceneLightOn=!0}get targetResolution(){return this._targetResolution}set targetResolution(e){this._targetResolution=e,this._targetAspect=this._targetResolution.width/this._targetResolution.height,this.emit("target-resolution-changed",this._targetResolution)}isGameViewPlaying(){return Editor&&cc.GAME_VIEW&&!cc.director.isPaused()}async initFromConfig(){var e=await Editor.Profile.getConfig("scene","scene_view");this.isSceneLightOn=e.isSceneLightOn,this.targetDeviceName=e.output_device}async saveConfig(){await cce.Ipc.send("record-scene-view",{isSceneLightOn:this.isSceneLightOn,output_device:this.targetDeviceName})}get targetAspect(){return this._targetAspect}get isSceneLightOn(){return this._isSceneLightOn}set isSceneLightOn(e){this._isSceneLightOn=e,this.emit("is-scene-light-on",!!this.isGameViewPlaying()||this._isSceneLightOn)}}const sceneViewData=new(exports.SceneViewData=SceneViewData);exports.sceneViewData=sceneViewData;