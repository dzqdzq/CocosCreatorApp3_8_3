"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.targetOverrideTest=void 0;const node_1=__importDefault(require("../node")),cc_1=require("cc"),common_1=require("./common"),testPrefabAssetUrl="db://assets/Root.prefab",childPrefabAssetUrl="db://assets/childNode.prefab",testRefClassName="TestPrefabRef",testRefCompUrl="db://assets/__testRef__.ts",testRefCompContent=` 
    import { _decorator, Component, Node } from 'cc';
    const { ccclass, property, type } = _decorator;

    @ccclass('${testRefClassName}')
    export class TestRef extends Component {
        @type(Node)
        public refNode: Node|null = null;
        
        @type(Component)
        public refComp: Component|null = null;

        start () {
        }
    }
`;let testRefScriptURL=null;class TargetOverrideTest{async test(e){console.log("targetOverrideTest-----------"),await e.openScene("");var t=await e.createNode({name:"Root"});if(!t)return(0,common_1.returnFalseWithLog)("tetsNodeUUID is null");var r=await e.createPrefab(t,testPrefabAssetUrl);if(!r)return(0,common_1.returnFalseWithLog)("testPrefabAssetUUID is null");if(await new Promise(e=>{setTimeout(function(){e()},1200)}),!(t=(await e.queryNodesByAssetUuid(r))[0]))return(0,common_1.returnFalseWithLog)("testNodeUUID is null");let o=node_1.default.query(t);if(!o)return(0,common_1.returnFalseWithLog)("can't find rootNode");var n=(0,common_1.getPrefabInfo)(o);if(null==n||!n.fileId)return!1;var a=null==(a=n.instance)?void 0:a.propertyOverrides;if(!a||4!==a.length)return(0,common_1.returnFalseWithLog)("property overrides doesn't match");await e.openScene(r);a=await Editor.Message.request("asset-db","create-asset",testRefCompUrl,testRefCompContent,{overwrite:!0});if(!a)return(0,common_1.returnFalseWithLog)("assetInfo is null");if(testRefScriptURL=a.url,await new Promise(e=>{setTimeout(function(){e()},2e3)}),!cc.js.getClassByName(testRefClassName))return(0,common_1.returnFalseWithLog)(`创建${testRefClassName}失败,请确保脚本创建后有触发编译`);let s=cc_1.director.getScene();if(!s)return(0,common_1.returnFalseWithLog)("scene is null");var a=(o=s.getChildByName("Root")).uuid,i=(await e.createNode({name:"childCylinderNode",assetUuid:"ab3e16f9-671e-48a7-90b7-d0884d9cbb85",parent:a}),await e.createNode({name:"childNode",assetUuid:"30da77a1-f02d-4ede-aa56-403452ee7fde",parent:a})),d=await e.createNode({name:"testOutRef",parent:i}),u=(await e.createComponent({uuid:d,component:testRefClassName}),await e.createNode({name:"testInRef",parent:i})),c=(await e.createComponent({uuid:u,component:testRefClassName}),await e.createPrefab(i,childPrefabAssetUrl));if(await new Promise(e=>{setTimeout(function(){e()},1200)}),await e.saveScene(),await e.openScene(c),await new Promise(e=>{setTimeout(function(){e()},500)}),!(s=cc_1.director.getScene()))return(0,common_1.returnFalseWithLog)("scene is null");var a=(o=s.children[0]).uuid,l=node_1.default.query(a),u=(l.children[0].uuid,l.children[1].uuid);if(await e.setNodeProperty({uuid:u,path:"__comps__.0.refNode",dump:{type:"cc.Node",value:{uuid:a}}}),node_1.default.query(u).getComponent(testRefClassName).refNode=o,await e.saveScene(),await e.openScene(r),await new Promise(e=>{setTimeout(function(){e()},500)}),!(s=cc_1.director.getScene()))return(0,common_1.returnFalseWithLog)("scene is null");a=(o=s.getChildByName("Root")).uuid;l=await e.createNode({name:"childNode2",assetUuid:c,parent:a,type:"cc.Prefab"});let m=node_1.default.query(l);u=m.children[0];e.createComponent({uuid:a,component:testRefClassName}),await e.setNodeProperty({uuid:a,path:"__comps__.0.refNode",dump:{type:"cc.Node",value:{uuid:u.uuid}}});let f=node_1.default.query(a).children[1],p=f.children[0];if(await e.setNodeProperty({uuid:p.uuid,path:"__comps__.0.refNode",dump:{type:"cc.Node",value:{uuid:u.uuid}}}),!(n=(0,common_1.getPrefabInfo)(o))||!n.targetOverrides||2!==n.targetOverrides.length)return(0,common_1.returnFalseWithLog)("wrong targetOverrides in prefabInfo");if(n.targetOverrides[0].target!==m||n.targetOverrides[1].target!==m)return(0,common_1.returnFalseWithLog)("wrong target in targetOverride");if(console.log("override in prefab mode:",n.targetOverrides[0].targetInfo),await e.saveScene(),await e.closeScene(),!(s=cc_1.director.getScene()))return(0,common_1.returnFalseWithLog)("scene is null");a=(o=s.getChildByName("Root")).uuid;r=await e.createNode({name:"mountedNode",parent:a}),e.createComponent({uuid:r,component:testRefClassName}),c=node_1.default.query(r),u=(m=o.getChildByName("childNode2")).getChildByName("testOutRef"),await e.setNodeProperty({uuid:r,path:"__comps__.0.refNode",dump:{type:"cc.Node",value:{uuid:u.uuid}}}),await e.setNodeProperty({uuid:r,path:"__comps__.0.refComp",dump:{type:"cc.Component",value:{uuid:m.components[0].uuid}}}),l=(0,common_1.getPrefabInfo)(s);if(!l||!l.targetOverrides||l.targetOverrides.length<0)return(0,common_1.returnFalseWithLog)("no targetOverrides in scene prefabInfo");if(console.log(l),l.targetOverrides[0].source!==c.getComponent(testRefClassName)||l.targetOverrides[0].target!==o)return(0,common_1.returnFalseWithLog)("wrong targetOverrides in scene prefabInfo");if(await e.softReloadScene(),!(s=cc_1.director.getScene()))return(0,common_1.returnFalseWithLog)("scene is null");(o=s.getChildByName("Root")).uuid,i=(f=o.children[1]).uuid,m=o.children[2];n=o.children[3];if(d=(p=f.children[0]).uuid,u=m.children[0],p.getComponent(testRefClassName).refNode!==u)return(0,common_1.returnFalseWithLog)("wrong testOutRef in prefab");if(n.getComponent(testRefClassName).refNode!==u)return(0,common_1.returnFalseWithLog)("wrong testOutRef in scene");if(n.getComponent(testRefClassName).refComp!==m.components[0])return(0,common_1.returnFalseWithLog)("wrong testOutRef component in scene");if(e.createComponent({uuid:i,component:testRefClassName}),await e.setNodeProperty({uuid:i,path:"__comps__.1.refNode",dump:{type:"cc.Node",value:{uuid:d}}}),await e.softReloadScene(),!(s=cc_1.director.getScene()))return(0,common_1.returnFalseWithLog)("scene is null");if(!(f=(0,cc_1.find)("Root/childNode")))return(0,common_1.returnFalseWithLog)("can't find childNode");if(!(p=(0,cc_1.find)("Root/childNode/testOutRef")))return(0,common_1.returnFalseWithLog)("can't find testOutRefNode");if(f.getComponent(testRefClassName).refNode!==p)return(0,common_1.returnFalseWithLog)("wrong mountedComponent ref to prefab");(o=s.getChildByName("Root")).uuid,cce.Selection.clear();a=await e.createNode({name:"normalNode"});e.createComponent({uuid:a,component:testRefClassName});let g=node_1.default.query(a);return u=(m=o.children[2]).children[0],await e.setNodeProperty({uuid:a,path:"__comps__.0.refNode",dump:{type:"cc.Node",value:{uuid:u.uuid}}}),await e.setNodeProperty({uuid:a,path:"__comps__.0.refComp",dump:{type:"cc.Component",value:{uuid:m.components[0].uuid}}}),!(l=(0,common_1.getPrefabInfo)(s))||!l.targetOverrides||l.targetOverrides.length<0?(0,common_1.returnFalseWithLog)("no targetOverrides in scene prefabInfo"):(console.log(l),l.targetOverrides[4].source!==g.getComponent(testRefClassName)||l.targetOverrides[4].target!==o?(0,common_1.returnFalseWithLog)("wrong targetOverrides in scene prefabInfo"):(await e.softReloadScene(),(s=cc_1.director.getScene())?(o=s.getChildByName("Root"),g=s.getChildByName("normalNode"),o.uuid,(f=o.children[1]).uuid,m=o.children[2],(p=f.children[0]).uuid,u=m.children[0],p.getComponent(testRefClassName).refNode!==u?(0,common_1.returnFalseWithLog)("wrong testOutRef in prefab"):g.getComponent(testRefClassName).refNode!==u?(0,common_1.returnFalseWithLog)("wrong testOutRef in scene"):g.getComponent(testRefClassName).refComp!==m.components[0]?(0,common_1.returnFalseWithLog)("wrong testOutRef component in scene"):(t=o.uuid,a=g.uuid,e.removeNode({uuid:t}),e.removeNode({uuid:a}),!0)):(0,common_1.returnFalseWithLog)("scene is null")))}async clear(){return cce.Selection.clear(),await Editor.Message.request("asset-db","delete-asset",testPrefabAssetUrl),await Editor.Message.request("asset-db","delete-asset",testRefCompUrl),await Editor.Message.request("asset-db","delete-asset",childPrefabAssetUrl),!0}}const targetOverrideTest=new TargetOverrideTest;exports.targetOverrideTest=targetOverrideTest;