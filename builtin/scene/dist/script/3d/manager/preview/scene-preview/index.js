"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.scenePreview=exports.ScenePreview=void 0;const cc_1=require("cc"),buffer_1=__importDefault(require("../buffer")),preview_base_1=require("../preview-base"),editor_mask=cc_1.Layers.makeMaskInclude([cc.Layers.Enum.GIZMOS,cc.Layers.Enum.SCENE_GIZMO,cc.Layers.Enum.EDITOR]);class ScenePreview extends preview_base_1.PreviewBase{constructor(){super(...arguments),this.width=0,this.height=0}init(e,r){this.device=cc.director.root.device,this.width=this.device.width,this.height=this.device.height,this.previewBuffer=new buffer_1.default(e,r),this.previewBuffer.on("loadScene",this.detachSceneCameras.bind(this))}onComponentAdded(e){e&&!window.isPreviewProcess&&e instanceof cc_1.Camera&&Promise.resolve().then(()=>{e.camera&&e.camera.detachCamera(),isSceneNative&&cce.NativeScene.redirectTargetWindow("preview")})}detachSceneCameras(){for(const e of this.previewBuffer.renderScene.cameras)e.node.layer&editor_mask||e.node.getComponent("cc.Camera")&&!e.node.isPrivatePreview&&e.detachCamera();cc.director.root.tempWindow=this.previewBuffer.window}}const scenePreview=new(exports.ScenePreview=ScenePreview);exports.scenePreview=scenePreview;