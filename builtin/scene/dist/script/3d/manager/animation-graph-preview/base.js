"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AnimationGraphPreviewBase=exports.PreviewState=exports.PlayState=void 0;const Interactive_preview_1=require("../preview/Interactive-preview"),cc_1=require("cc"),util_1=require("util");var PlayState,PreviewState;!function(e){e[e.STOP=0]="STOP",e[e.PLAYING=1]="PLAYING",e[e.PAUSE=2]="PAUSE"}(PlayState=exports.PlayState||(exports.PlayState={})),function(e){e[e.NO_ERROR=0]="NO_ERROR",e[e.NO_ANIMATION_GRAPH=1]="NO_ANIMATION_GRAPH",e[e.NO_MODEL=2]="NO_MODEL",e[e.NO_TRANSITION_SOURCE_MOTION=3]="NO_TRANSITION_SOURCE_MOTION",e[e.NO_TRANSITION_DESTINATION_MOTION=4]="NO_TRANSITION_DESTINATION_MOTION",e[e.ILLEGAL_MOTION=5]="ILLEGAL_MOTION",e[e.ILLEGAL_TRANSITION=6]="ILLEGAL_TRANSITION"}(PreviewState=exports.PreviewState||(exports.PreviewState={}));class AnimationGraphPreviewBase extends Interactive_preview_1.InteractivePreview{constructor(){super(...arguments),this.active=!1,this.PreviewState=PreviewState,this.model=null,this.updateIntervalId=null,this.playTime=0,this.playFPS=30,this.playState=PlayState.STOP}init(e,t){super.init(e,t)}reset(){this.model&&(this.scene.removeChild(this.model),this.model.isValid&&this.model.destroy(),this.model=null),this.hide()}hide(){this.active=!1,this.cameraComp.enabled=!1,clearInterval(this.updateIntervalId)}createNodes(e){this.light=new cc.Node(this.getLightName()).addComponent(cc_1.DirectionalLight),this.light.node.parent=e,this.light.node.setRotationFromEuler(-45,-45,0)}hasModel(){return!!this.model}async setModel(e){try{cc_1.assetManager.assets.remove(e);var t=await(0,util_1.promisify)(cc_1.assetManager.loadAny)(e,{reloadAsset:!0}),i=(this.model&&(this.scene.removeChild(this.model),this.model.isValid)&&this.model.destroy(),this.model=(0,cc_1.instantiate)(t),this.model.parent=this.scene,this.autoPerfectCameraViewOnModel(this.model),this.model.getComponent(cc_1.SkeletalAnimation));i&&i.destroy(),this.previewer=this.createPreviewer(this.model)}catch(e){console.error(e)}}play(){clearInterval(this.updateIntervalId),this.playState=PlayState.PLAYING;const e=1/this.playFPS;this.updateIntervalId=setInterval(()=>{this.playTime+=e,this.playTime>this.previewer.timelineStats.timeLineLength&&(this.playTime=0),this.update()},1e3*e)}pause(){clearInterval(this.updateIntervalId),this.playState=PlayState.PAUSE,this.update()}stop(){clearInterval(this.updateIntervalId),this.playTime=0,this.playState=PlayState.STOP,this.update()}setTime(e){this.playTime=e,this.update()}setVariables(e){var t,i;for([t,i]of Array.from(e.variables))this.previewer.addVariable(t,i)}updateVariable(e){for(const a of e){var{name:t,value:i}=a;this.previewer.updateVariable(t,i)}this.update()}removeVariable(e){this.previewer.removeVariable(e)}update(){this.previewer.setTime(this.playTime),this.previewer.evaluate(),Editor.Message.broadcast(this.getUpdateMessageName(),{speed:1/this.playFPS,time:this.playTime,state:this.playState,status:this.previewer.timelineStats})}}exports.AnimationGraphPreviewBase=AnimationGraphPreviewBase;