"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const cc_1=require("cc"),general_scene_facade_1=__importDefault(require("./general-scene-facade")),prefab_scene_proxy_1=__importDefault(require("../manager/scene/proxy/prefab-scene-proxy")),scene_facade_state_interface_1=require("./scene-facade-state-interface"),message_1=require("../manager/message");class PrefabSceneFacade extends general_scene_facade_1.default{init(){this.modeName=scene_facade_state_interface_1.SceneModeType.Prefab,this._sceneProxy=new prefab_scene_proxy_1.default(this._sceneMgr,this),this._undoMgr.init(),this.initEventListener()}async enter(e){console.debug("enter prefab scene facade"),this.clearSelection(),this.fireCloseEvent();var t=this._sceneProxy.queryCurrentSceneUuid();e.uuid&&await this.openScene(e.uuid),this.isHold&&(e.uuid&&t!==e.uuid||await this._sceneProxy.restore(),this.isHold=!1),this.fromState&&(this.snapshot(),await this.fromState.patchSceneState()?(this.snapshot(),cce.SceneFacadeManager.changeTitle()):this.abortSnapshot()),Editor.EditMode.enter(this.modeName.toLocaleLowerCase()),this._sceneProxy.sendModeChangeMsg(this.modeName)}async exit(){console.debug("exit prefab scene facade"),await this.closeSceneState()}async openScene(e){return await this._sceneProxy.open(e)}async setNodeProperty(e){var t=this._sceneProxy.getRootNode();return e.uuid===(null==t?void 0:t.uuid)&&"name"===e.path?(console.warn("can't change name of prefab root in prefab mode, you can modify it by changing the filename of this prefab"),message_1.messageManager.broadcast("scene:change-node",e.uuid),!1):this._nodeMgr.setProperty(e.uuid,e.path,e.dump)}async createNode(e){var t=this._sceneProxy.getRootNode(),t=null==t?void 0:t._prefab;return t&&t.asset&&t.asset._uuid===e.assetUuid?(console.warn("The prefab you are trying to add is the same with the prefab in editing, this is not allowed."),null):super.createNode(e)}async pasteNode(e){if(!e){const i=this.querySelection()[0];var a=Editor.Clipboard.read("nodes-info");if(!a)return[];var{type:a,uuids:r}=a;if(e={target:i,uuids:r},"cut"===a){let t=!1;const o=[];if(r.every(e=>{if(i===e)return console.warn(Editor.I18n.t("scene.messages.cannot_cut_to_self")),!(t=!0);e=this._nodeMgr.query(e);null!=e&&e.parent&&!o.includes(e.parent.uuid)&&o.push(e.parent.uuid)}),t||!i)return[];o.push(i);const n=this.beginRecording(o);var a=await this.setNodeParent({parent:i,uuids:r,keepWorldTransform:!1});return this.endRecording(n),Editor.Clipboard.clear(),a}}let t=e.target;e.pasteAsChild||((r=await this.queryNodeDump(e.target))&&r.parent&&(t=r.parent.value.uuid),a=null==(a=null==(a=this._sceneProxy.getRootNode())?void 0:a.parent)?void 0:a.uuid,t!==(null==(s=cc_1.director.getScene())?void 0:s.uuid)&&t!==a)||(t=r.uuid.value);const n=await this.beginRecording(t);var s=this._nodeMgr.pasteNode(t,e.uuids,e.keepWorldTransform);return await this.endRecording(n),s}async removeNode(e){var t=this._sceneProxy.getRootNode();t&&e&&(t.uuid===e.uuid||e.uuid.includes(t.uuid))?console.warn("can't remove root node of prefabAsset"):await super.removeNode(e)}async createPrefab(e,t){var a=this._sceneProxy.getRootNode();if(!a||a.uuid!==e)return this._prefabMgr.createPrefabAssetFromNode(e,t);console.warn("can't create prefabAsset from root node of prefabAsset")}doUnlinkPrefab(e,t){return this._prefabMgr.unWrapPrefabInstanceInPrefabMode(e,t)}async saveScene(e){return await this._sceneProxy.save(e)}}exports.default=PrefabSceneFacade;