"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MQuat=void 0;const cc_1=require("cc"),utils_1=require("./utils"),vec3_1=require("./vec3");let _x=0,_y=0,_z=0,_w=0;const qt_1=new cc_1.Quat,qt_2=new cc_1.Quat,v3_1=new cc_1.Vec3,m3_1=new cc_1.Mat3,halfToRad=.5*Math.PI/180;class MQuat{static clone(t){return new cc_1.Quat(t.x,t.y,t.z,t.w)}static copy(t,a){return t.x=a.x,t.y=a.y,t.z=a.z,t.w=a.w,t}static set(t,a,r,e,c){return t.x=a,t.y=r,t.z=e,t.w=c,t}static identity(t){return t.x=0,t.y=0,t.z=0,t.w=1,t}static rotationTo(t,a,r){var e=vec3_1.MVec3.dot(a,r);return e<-.999999?(vec3_1.MVec3.cross(v3_1,vec3_1.MVec3.UNIT_X,a),v3_1.length()<1e-6&&vec3_1.MVec3.cross(v3_1,vec3_1.MVec3.UNIT_Y,a),vec3_1.MVec3.normalize(v3_1,v3_1),cc_1.Quat.fromAxisAngle(t,v3_1,Math.PI),t):.999999<e?(t.x=0,t.y=0,t.z=0,t.w=1,t):(vec3_1.MVec3.cross(v3_1,a,r),t.x=v3_1.x,t.y=v3_1.y,t.z=v3_1.z,t.w=1+e,cc_1.Quat.normalize(t,t))}static getAxisAngle(t,a){var r=2*Math.acos(a.w),e=Math.sin(r/2);return 0!==e?(t.x=a.x/e,t.y=a.y/e,t.z=a.z/e):(t.x=1,t.y=0,t.z=0),r}static multiply(t,a,r){return _x=a.x*r.w+a.w*r.x+a.y*r.z-a.z*r.y,_y=a.y*r.w+a.w*r.y+a.z*r.x-a.x*r.z,_z=a.z*r.w+a.w*r.z+a.x*r.y-a.y*r.x,_w=a.w*r.w-a.x*r.x-a.y*r.y-a.z*r.z,t.x=_x,t.y=_y,t.z=_z,t.w=_w,t}static multiplyScalar(t,a,r){return t.x=a.x*r,t.y=a.y*r,t.z=a.z*r,t.w=a.w*r,t}static scaleAndAdd(t,a,r,e){return t.x=a.x+r.x*e,t.y=a.y+r.y*e,t.z=a.z+r.z*e,t.w=a.w+r.w*e,t}static rotateX(t,a,r){r*=.5;var e=Math.sin(r),r=Math.cos(r);return t.x=a.x*r+a.w*e,t.y=a.y*r+a.z*e,t.z=a.z*r-a.y*e,t.w=a.w*r-a.x*e,t}static rotateY(t,a,r){r*=.5;var e=Math.sin(r),r=Math.cos(r);return t.x=a.x*r-a.z*e,t.y=a.y*r+a.w*e,t.z=a.z*r+a.x*e,t.w=a.w*r-a.y*e,t}static rotateZ(t,a,r){r*=.5;var e=Math.sin(r),r=Math.cos(r);return t.x=a.x*r+a.y*e,t.y=a.y*r-a.x*e,t.z=a.z*r+a.w*e,t.w=a.w*r-a.z*e,t}static rotateAround(t,a,r,e){return cc_1.Quat.invert(qt_1,a),vec3_1.MVec3.transformQuat(v3_1,r,qt_1),cc_1.Quat.fromAxisAngle(qt_1,v3_1,e),cc_1.Quat.multiply(t,a,qt_1),t}static rotateAroundLocal(t,a,r,e){return cc_1.Quat.fromAxisAngle(qt_1,r,e),cc_1.Quat.multiply(t,a,qt_1),t}static calculateW(t,a){return t.x=a.x,t.y=a.y,t.z=a.z,t.w=Math.sqrt(Math.abs(1-a.x*a.x-a.y*a.y-a.z*a.z)),t}static dot(t,a){return t.x*a.x+t.y*a.y+t.z*a.z+t.w*a.w}static lerp(t,a,r,e){return t.x=a.x+e*(r.x-a.x),t.y=a.y+e*(r.y-a.y),t.z=a.z+e*(r.z-a.z),t.w=a.w+e*(r.w-a.w),t}static slerp(t,a,r,e){let c=0,s=0,x=a.x*r.x+a.y*r.y+a.z*r.z+a.w*r.w;var y,z;return x<0&&(x=-x,r.x=-r.x,r.y=-r.y,r.z=-r.z,r.w=-r.w),s=1e-6<1-x?(y=Math.acos(x),z=Math.sin(y),c=Math.sin((1-e)*y)/z,Math.sin(e*y)/z):(c=1-e,e),t.x=c*a.x+s*r.x,t.y=c*a.y+s*r.y,t.z=c*a.z+s*r.z,t.w=c*a.w+s*r.w,t}static sqlerp(t,a,r,e,c,s){return cc_1.Quat.slerp(qt_1,a,c,s),cc_1.Quat.slerp(qt_2,r,e,s),cc_1.Quat.slerp(t,qt_1,qt_2,2*s*(1-s)),t}static invert(t,a){var r=a.x*a.x+a.y*a.y+a.z*a.z+a.w*a.w,r=r?1/r:0;return t.x=-a.x*r,t.y=-a.y*r,t.z=-a.z*r,t.w=a.w*r,t}static conjugate(t,a){return t.x=-a.x,t.y=-a.y,t.z=-a.z,t.w=a.w,t}static len(t){return Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w)}static lengthSqr(t){return t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w}static normalize(t,a){var r=a.x*a.x+a.y*a.y+a.z*a.z+a.w*a.w;return 0<r&&(r=1/Math.sqrt(r),t.x=a.x*r,t.y=a.y*r,t.z=a.z*r,t.w=a.w*r),t}static fromAxes(t,a,r,e){return cc_1.Mat3.set(m3_1,a.x,a.y,a.z,r.x,r.y,r.z,e.x,e.y,e.z),cc_1.Quat.normalize(t,cc_1.Quat.fromMat3(t,m3_1))}static fromViewUp(t,a,r){return cc_1.Mat3.fromViewUp(m3_1,a,r),cc_1.Quat.normalize(t,cc_1.Quat.fromMat3(t,m3_1))}static fromAxisAngle(t,a,r){r*=.5;var e=Math.sin(r);return t.x=e*a.x,t.y=e*a.y,t.z=e*a.z,t.w=Math.cos(r),t}static fromMat3(t,a){var{m00:a,m03:r,m06:e,m01:c,m04:s,m07:x,m02:y,m05:z,m08:i}=a,w=a+s+i;return 0<w?(w=.5/Math.sqrt(w+1),t.w=.25/w,t.x=(z-x)*w,t.y=(e-y)*w,t.z=(c-r)*w):s<a&&i<a?(w=2*Math.sqrt(1+a-s-i),t.w=(z-x)/w,t.x=.25*w,t.y=(r+c)/w,t.z=(e+y)/w):i<s?(w=2*Math.sqrt(1+s-a-i),t.w=(e-y)/w,t.x=(r+c)/w,t.y=.25*w,t.z=(x+z)/w):(w=2*Math.sqrt(1+i-a-s),t.w=(c-r)/w,t.x=(e+y)/w,t.y=(x+z)/w,t.z=.25*w),t}static fromEuler(t,a,r,e){a*=halfToRad,r*=halfToRad,e*=halfToRad;var c=Math.sin(a),a=Math.cos(a),s=Math.sin(r),r=Math.cos(r),x=Math.sin(e),e=Math.cos(e);return t.x=c*r*e+a*s*x,t.y=a*s*e+c*r*x,t.z=a*r*x-c*s*e,t.w=a*r*e-c*s*x,t}static fromAngleZ(t,a){a*=halfToRad,t.x=t.y=0,t.z=Math.sin(a),t.w=Math.cos(a)}static toAxisX(t,a){var r=2*a.y,e=2*a.z;return t.x=1-r*a.y-e*a.z,t.y=r*a.x+e*a.w,t.z=e*a.x+r*a.w,t}static toAxisY(t,a){var r=2*a.x,e=2*a.y,c=2*a.z;return t.x=e*a.x-c*a.w,t.y=1-r*a.x-c*a.z,t.z=c*a.y+r*a.w,t}static toAxisZ(t,a){var r=2*a.x,e=2*a.y,c=2*a.z;return t.x=c*a.x-e*a.w,t.y=c*a.y-r*a.w,t.z=1-r*a.x-e*a.y,t}static toEuler(t,a,r){var{x:a,y:e,z:c,w:s}=a;let x=0,y=0,z=0;var i,w,n,u=a*e+c*s;return.499999<u?(x=0,y=(0,utils_1.toDegree)(2*Math.atan2(a,s)),z=90):u<-.499999?(x=0,y=-(0,utils_1.toDegree)(2*Math.atan2(a,s)),z=-90):(i=a*a,w=e*e,n=c*c,x=(0,utils_1.toDegree)(Math.atan2(2*a*s-2*e*c,1-2*i-2*n)),y=(0,utils_1.toDegree)(Math.atan2(2*e*s-2*a*c,1-2*w-2*n)),z=(0,utils_1.toDegree)(Math.asin(2*u)),r&&(x=-180*Math.sign(x+1e-6)+x,y=-180*Math.sign(y+1e-6)+y,z=180*Math.sign(z+1e-6)-z)),t.x=x,t.y=y,t.z=z,t}static toArray(t,a,r=0){return t[r+0]=a.x,t[r+1]=a.y,t[r+2]=a.z,t[r+3]=a.w,t}static fromArray(t,a,r=0){return t.x=a[r+0],t.y=a[r+1],t.z=a[r+2],t.w=a[r+3],t}static strictEquals(t,a){return t.x===a.x&&t.y===a.y&&t.z===a.z&&t.w===a.w}static equals(t,a,r=utils_1.EPSILON){return Math.abs(t.x-a.x)<=r*Math.max(1,Math.abs(t.x),Math.abs(a.x))&&Math.abs(t.y-a.y)<=r*Math.max(1,Math.abs(t.y),Math.abs(a.y))&&Math.abs(t.z-a.z)<=r*Math.max(1,Math.abs(t.z),Math.abs(a.z))&&Math.abs(t.w-a.w)<=r*Math.max(1,Math.abs(t.w),Math.abs(a.w))}}(exports.MQuat=MQuat).IDENTITY=Object.freeze(new cc_1.Quat);