"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MVec3=void 0;const cc_1=require("cc"),utils_1=require("./utils");let _x=0,_y=0,_z=0;const v3_1=new cc_1.Vec3,v3_2=new cc_1.Vec3;class MVec3{static zero(t){return t.x=0,t.y=0,t.z=0,t}static clone(t){return new cc_1.Vec3(t.x,t.y,t.z)}static copy(t,x){return t.x=x.x,t.y=x.y,t.z=x.z,t}static set(t,x,r,z){return t.x=x,t.y=r,t.z=z,t}static add(t,x,r){return t.x=x.x+r.x,t.y=x.y+r.y,t.z=x.z+r.z,t}static subtract(t,x,r){return t.x=x.x-r.x,t.y=x.y-r.y,t.z=x.z-r.z,t}static multiply(t,x,r){return t.x=x.x*r.x,t.y=x.y*r.y,t.z=x.z*r.z,t}static divide(t,x,r){return t.x=x.x/r.x,t.y=x.y/r.y,t.z=x.z/r.z,t}static ceil(t,x){return t.x=Math.ceil(x.x),t.y=Math.ceil(x.y),t.z=Math.ceil(x.z),t}static floor(t,x){return t.x=Math.floor(x.x),t.y=Math.floor(x.y),t.z=Math.floor(x.z),t}static min(t,x,r){return t.x=Math.min(x.x,r.x),t.y=Math.min(x.y,r.y),t.z=Math.min(x.z,r.z),t}static max(t,x,r){return t.x=Math.max(x.x,r.x),t.y=Math.max(x.y,r.y),t.z=Math.max(x.z,r.z),t}static round(t,x){return t.x=Math.round(x.x),t.y=Math.round(x.y),t.z=Math.round(x.z),t}static multiplyScalar(t,x,r){return t.x=x.x*r,t.y=x.y*r,t.z=x.z*r,t}static scaleAndAdd(t,x,r,z){return t.x=x.x+r.x*z,t.y=x.y+r.y*z,t.z=x.z+r.z*z,t}static distance(t,x){return _x=x.x-t.x,_y=x.y-t.y,_z=x.z-t.z,Math.sqrt(_x*_x+_y*_y+_z*_z)}static squaredDistance(t,x){return _x=x.x-t.x,_y=x.y-t.y,_z=x.z-t.z,_x*_x+_y*_y+_z*_z}static len(t){return _x=t.x,_y=t.y,_z=t.z,Math.sqrt(_x*_x+_y*_y+_z*_z)}static lengthSqr(t){return _x=t.x,_y=t.y,_z=t.z,_x*_x+_y*_y+_z*_z}static negate(t,x){return t.x=-x.x,t.y=-x.y,t.z=-x.z,t}static invert(t,x){return t.x=1/x.x,t.y=1/x.y,t.z=1/x.z,t}static invertSafe(t,x){return _x=x.x,_y=x.y,_z=x.z,Math.abs(_x)<utils_1.EPSILON?t.x=0:t.x=1/_x,Math.abs(_y)<utils_1.EPSILON?t.y=0:t.y=1/_y,Math.abs(_z)<utils_1.EPSILON?t.z=0:t.z=1/_z,t}static normalize(t,x){_x=x.x,_y=x.y,_z=x.z;x=_x*_x+_y*_y+_z*_z;return 0<x&&(x=1/Math.sqrt(x),t.x=_x*x,t.y=_y*x,t.z=_z*x),t}static dot(t,x){return t.x*x.x+t.y*x.y+t.z*x.z}static cross(t,x,r){var{x,y:z,z:y}=x,{x:r,y:_,z:a}=r;return t.x=z*a-y*_,t.y=y*r-x*a,t.z=x*_-z*r,t}static lerp(t,x,r,z){return t.x=x.x+z*(r.x-x.x),t.y=x.y+z*(r.y-x.y),t.z=x.z+z*(r.z-x.z),t}static random(t,x){x=x||1;var r=2*(0,utils_1.random)()*Math.PI,z=2*(0,utils_1.random)()-1,y=Math.sqrt(1-z*z);return t.x=y*Math.cos(r)*x,t.y=y*Math.sin(r)*x,t.z=z*x,t}static transformMat4(t,x,r){_x=x.x,_y=x.y,_z=x.z;x=(x=r.m03*_x+r.m07*_y+r.m11*_z+r.m15)?1/x:1;return t.x=(r.m00*_x+r.m04*_y+r.m08*_z+r.m12)*x,t.y=(r.m01*_x+r.m05*_y+r.m09*_z+r.m13)*x,t.z=(r.m02*_x+r.m06*_y+r.m10*_z+r.m14)*x,t}static transformMat4Normal(t,x,r){_x=x.x,_y=x.y,_z=x.z;x=(x=r.m03*_x+r.m07*_y+r.m11*_z)?1/x:1;return t.x=(r.m00*_x+r.m04*_y+r.m08*_z)*x,t.y=(r.m01*_x+r.m05*_y+r.m09*_z)*x,t.z=(r.m02*_x+r.m06*_y+r.m10*_z)*x,t}static transformMat3(t,x,r){return _x=x.x,_y=x.y,_z=x.z,t.x=_x*r.m00+_y*r.m03+_z*r.m06,t.y=_x*r.m01+_y*r.m04+_z*r.m07,t.z=_x*r.m02+_y*r.m05+_z*r.m08,t}static transformAffine(t,x,r){return _x=x.x,_y=x.y,_z=x.z,t.x=r.m00*_x+r.m01*_y+r.m02*_z+r.m03,t.y=r.m04*_x+r.m05*_y+r.m06*_z+r.m07,t.x=r.m08*_x+r.m09*_y+r.m10*_z+r.m11,t}static transformQuat(t,x,r){var z=r.w*x.x+r.y*x.z-r.z*x.y,y=r.w*x.y+r.z*x.x-r.x*x.z,_=r.w*x.z+r.x*x.y-r.y*x.x,x=-r.x*x.x-r.y*x.y-r.z*x.z;return t.x=z*r.w+x*-r.x+y*-r.z-_*-r.y,t.y=y*r.w+x*-r.y+_*-r.x-z*-r.z,t.z=_*r.w+x*-r.z+z*-r.y-y*-r.x,t}static transformRTS(t,x,r,z,y){var _=x.x*y.x,a=x.y*y.y,x=x.z*y.z,y=r.w*_+r.y*x-r.z*a,e=r.w*a+r.z*_-r.x*x,c=r.w*x+r.x*a-r.y*_,_=-r.x*_-r.y*a-r.z*x;return t.x=y*r.w+_*-r.x+e*-r.z-c*-r.y+z.x,t.y=e*r.w+_*-r.y+c*-r.x-y*-r.z+z.y,t.z=c*r.w+_*-r.z+y*-r.y-e*-r.x+z.z,t}static transformInverseRTS(t,x,r,z,y){var _=x.x-z.x,a=x.y-z.y,x=x.z-z.z,z=r.w*_-r.y*x+r.z*a,e=r.w*a-r.z*_+r.x*x,c=r.w*x-r.x*a+r.y*_,_=r.x*_+r.y*a+r.z*x;return t.x=(z*r.w+_*r.x+e*r.z-c*r.y)/y.x,t.y=(e*r.w+_*r.y+c*r.x-z*r.z)/y.y,t.z=(c*r.w+_*r.z+z*r.y-e*r.x)/y.z,t}static rotateX(t,x,r,z){_x=x.x-r.x,_y=x.y-r.y,_z=x.z-r.z;var x=Math.cos(z),z=Math.sin(z),y=_x,_=_y*x-_z*z,z=_y*z+_z*x;return t.x=y+r.x,t.y=_+r.y,t.z=z+r.z,t}static rotateY(t,x,r,z){_x=x.x-r.x,_y=x.y-r.y,_z=x.z-r.z;var x=Math.cos(z),z=Math.sin(z),y=_z*z+_x*x,_=_y,x=_z*x-_x*z;return t.x=y+r.x,t.y=_+r.y,t.z=x+r.z,t}static rotateZ(t,x,r,z){_x=x.x-r.x,_y=x.y-r.y,_z=x.z-r.z;var x=Math.cos(z),z=Math.sin(z),y=_x*x-_y*z,z=_x*z+_y*x,x=_z;return t.x=y+r.x,t.y=z+r.y,t.z=x+r.z,t}static toArray(t,x,r=0){return t[r+0]=x.x,t[r+1]=x.y,t[r+2]=x.z,t}static fromArray(t,x,r=0){return t.x=x[r+0],t.y=x[r+1],t.z=x[r+2],t}static strictEquals(t,x){return t.x===x.x&&t.y===x.y&&t.z===x.z}static equals(t,x,r=utils_1.EPSILON){var{x:t,y:z,z:y}=t,{x,y:_,z:a}=x;return Math.abs(t-x)<=r*Math.max(1,Math.abs(t),Math.abs(x))&&Math.abs(z-_)<=r*Math.max(1,Math.abs(z),Math.abs(_))&&Math.abs(y-a)<=r*Math.max(1,Math.abs(y),Math.abs(a))}static angle(t,x){MVec3.normalize(v3_1,t),MVec3.normalize(v3_2,x);t=MVec3.dot(v3_1,v3_2);return 1<t?0:t<-1?Math.PI:Math.acos(t)}static projectOnPlane(t,x,r){return MVec3.subtract(t,x,MVec3.project(t,x,r))}static project(t,x,r){var z=MVec3.lengthSqr(r);return z<1e-6?MVec3.set(t,0,0,0):MVec3.multiplyScalar(t,r,MVec3.dot(x,r)/z)}}(exports.MVec3=MVec3).UNIT_X=Object.freeze(new cc_1.Vec3(1,0,0)),MVec3.UNIT_Y=Object.freeze(new cc_1.Vec3(0,1,0)),MVec3.UNIT_Z=Object.freeze(new cc_1.Vec3(0,0,1)),MVec3.ZERO=Object.freeze(new cc_1.Vec3(0,0,0)),MVec3.ONE=Object.freeze(new cc_1.Vec3(1,1,1)),MVec3.NEG_ONE=Object.freeze(new cc_1.Vec3(-1,-1,-1));