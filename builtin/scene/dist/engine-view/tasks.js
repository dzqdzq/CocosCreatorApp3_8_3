"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const{outputFileSync,readdirSync,removeSync,readJSON}=require("fs-extra"),join=require("path")["join"];class Tasks{constructor(){this._dump=null,this._timer=null,this._softOpen=!1,this.tmpDir=join(Editor.Project.tmpDir,"./scene/staging"),this.tmpTimers={},this.editorInit=["editor-init",{depends:[],async handle(){}}],this.assetDbReady=["asset-db-ready",{depends:[],async handle(){return Editor.Message.request("asset-db","query-ready")}}],this.queryEngineInfo=["query-engine-info",{depends:[],async handle(){return(await Editor.Message.request("engine","query-engine-info")).typescript}}],this.webviewReady=["webview-ready",{depends:[],handle:async()=>{this.$scene.depend.finish("webview-ready"),this.$scene.ipc.setReady(!0)},reset:async()=>{Editor.Message.broadcast("scene:close"),this._softOpen=!0,this.$scene.ipc.setReady(!1)}}],this.webviewEngineInit=["webview-engine-init",{depends:["asset-db-ready","query-engine-info","webview-ready","packer-driver-ready"],handle:async()=>{try{var e=await Editor.Profile.getProject("project","layer"),t=await Editor.Profile.getProject("project","sorting-layer")||{},i=await Editor.Profile.getProject("project","general.renderPipeline"),n=(await this.$scene.ipc.send("call-method",{module:"Startup",handler:"initEngine",params:[this.$scene.info,i,e,t.layers||[]],queue:!1,timeout:!1}),await Editor.Profile.getProject("project","general.designResolution"));await this.$scene.ipc.send("call-method",{module:"Startup",handler:"initDesignResolution",params:[n.width,n.height],queue:!1,timeout:!1}),Editor.Message.send("scene","change-target-resolution")}catch(e){console.error(e)}this.$scene.depend.finish("webview-engine-init")}}],this.webviewManagerInit=["webview-manager-init",{depends:["webview-engine-init"],handle:async()=>{try{Editor.Metrics.trackTimeStart("[Metrics]open scene first time"),await this.$scene.ipc.send("call-method",{module:"Startup",handler:"initManager",params:[Object.assign(this.$scene.info,{project:Editor.Project.path})],queue:!1,timeout:!1}),await this.$scene.ipc.send("call-method",{module:"Ipc",handler:"startup",params:[],queue:!1,timeout:!1});var e=await Editor.Profile.getProject("engine","modules.includeModules"),t=(e&&!e.includes("3d")&&this.$scene.callSceneMethod("changeProjectMode",["2d"],!0),await Editor.Profile.getProject("project","general.highQuality"));t&&this.$scene.callSceneMethod("changeHighQuality",[t],!0),this.$scene.managerReady=!0,Editor.Metrics.trackTimeEnd("[Metrics]open scene first time",{output:!0})}catch(e){console.error(e)}this.$scene.setSceneManagerReady(!0),this.$scene.depend.finish("webview-manager-init")},reset:async()=>{this.$scene.managerReady=!1}}],this.packerDriverReady=["packer-driver-ready",{depends:[],handle:async()=>{var e=await Editor.Message.request("programming","packer-driver/ready","editor");return e?console.debug("Packer is ready. Immediately do first execution."):console.debug("Packer is not ready. Yield to wait for its completion."),e}}],this.autoOpenScene=["auto-open-scene",{depends:["editor-init","webview-manager-init"],handle:async()=>{let e=await Editor.Profile.getTemp("scene","current-scene")||"";e=e||await Editor.Profile.getProject("scene","current-scene")||"",await this.$scene.callSceneMethod("openScene",[e]),this.$scene.depend.finish("auto-open-scene"),this._softOpen&&this._dump&&(await this.$scene.callSceneMethod("restoreAllScenes",[this._dump]),this._softOpen=!1)}}]}stagingDump(r,a){r&&(clearTimeout(this.tmpTimers[r]),this.tmpTimers[r]=setTimeout(()=>{for(var e=new Date,t=[e.getFullYear(),e.getMonth()+1,e.getDate()].join(""),e=[e.getHours(),e.getMinutes(),e.getSeconds()].map(e=>("0"+e).substr(-2)).join(""),i=join(this.tmpDir,r),t=join(i,t+" "+e+".json"),n=(outputFileSync(t,JSON.stringify(JSON.parse(a))),readdirSync(i));5<n.length;){var s=n.shift();removeSync(join(i,s))}},6e4))}updateDump(e=void 0){e?this._dump=e:this.$scene.ipc.isReady}}exports.default=new Tasks;