"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.release=exports.init=exports.start=exports.stop=exports.status=void 0;const device_adapter_1=require("../script/utils/device-adapter");let leftButton=!1,middleButton=!1,rightButton=!1,isClicked=!1;const utils={createMouseEvent(e,t){let o=e.offsetX,a=e.offsetY;e.target!==t&&(s=t.getBoundingClientRect(),o=e.clientX-s.x,a=e.clientY-s.y);var n,s={ctrlKey:e.ctrlKey,shiftKey:e.shiftKey,altKey:e.altKey,metaKey:e.metaKey,x:o,y:a,clientX:o,clientY:a,deltaX:e.deltaX||0,deltaY:e.deltaY||0,wheelDeltaX:e.wheelDeltaX||0,wheelDeltaY:e.wheelDeltaY||0,moveDeltaX:e.movementX||0,moveDeltaY:e.movementY||0,movementX:e.movementX,movementY:e.movementY,leftButton:leftButton,middleButton:middleButton,rightButton:rightButton,button:e.button,buttons:e.buttons};return device_adapter_1.WebAdapter.enable&&(e=device_adapter_1.WebAdapter.offsetX,0<(n=device_adapter_1.WebAdapter.offsetY)?(s.y-=n,s.clientY-=n):(s.y+=t.scrollTop,s.clientY+=t.scrollTop),0<e?(s.x-=e,s.clientX-=e):(s.x+=t.scrollLeft,s.clientX+=t.scrollLeft)),s},createKeyboardEvent(e){return{ctrlKey:e.ctrlKey,shiftKey:e.shiftKey,altKey:e.altKey,metaKey:e.metaKey,key:e.key,keyCode:e.keyCode,code:e.code}},createDragEvent(e,t){var{type:o,value:a,name:n,additional:s}=Editor.UI.__protected__.DragArea.currentDragInfo||{},e=utils.createMouseEvent(e,t);e.name=n,e.type=o,e.value=a,e.values=[];let u=[];return Array.isArray(s)&&(e.values=s,u=e.values.map(e=>e.value)),a&&!u.includes(a)&&e.values.push({value:a,type:o,name:n}),e},createConfirmEvent(e){return{path:e.target.getAttribute("path"),value:e.target.value}}};function stop(){exports.status="pause"}function start(){exports.status="ready"}function updateMouseButtonState(e){leftButton=Boolean(1&e.buttons),rightButton=Boolean(2&e.buttons),middleButton=Boolean(4&e.buttons),isClicked=leftButton||rightButton||middleButton}exports.status="pause",exports.stop=stop,exports.start=start;const keyDownMap=new Map,globalEventMap=new Map;function init(a){function t(e){0===e.movementX&&0===e.movementY||a.ipc.send("call-method",{module:"Operation",handler:"_emitMouseEvent",params:["mousemove",utils.createMouseEvent(e,a)],queue:!1,timeout:!0})}function e(e){e=e,"pause"!==exports.status&&isClicked&&(a.ipc.send("call-method",{module:"Operation",handler:"_emitMouseEvent",params:["mouseup",utils.createMouseEvent(e,a)],queue:!1,timeout:!0}),updateMouseButtonState(e),a.focus())}function o(e){e=e,keyDownMap.has(e.code)&&(keyDownMap.delete(e.code),"pause"!==exports.status)&&a.ipc.send("call-method",{module:"Operation",handler:"_emit",params:["keyup",utils.createKeyboardEvent(e)],queue:!1,timeout:!0})}function n(e){"pause"!==exports.status&&isClicked&&t(e)}release(),a.addEventListener("mousedown",function(e){"pause"!==exports.status&&(updateMouseButtonState(e),a.ipc.send("call-method",{module:"Operation",handler:"_emitMouseEvent",params:["mousedown",utils.createMouseEvent(e,a)],queue:!1,timeout:!0}))}),a.addEventListener("mousemove",function(e){"pause"===exports.status||isClicked||t(e)}),a.addEventListener("wheel",e=>{"pause"!==exports.status&&a.ipc.send("call-method",{module:"Operation",handler:"_emitMouseEvent",params:["mousewheel",utils.createMouseEvent(e,a)],queue:!1,timeout:!0})}),a.addEventListener("keydown",function(e){"pause"!==exports.status&&(keyDownMap.set(e.code,{code:e.code,keyCode:e.keyCode}),a.ipc.send("call-method",{module:"Operation",handler:"_emit",params:["keydown",utils.createKeyboardEvent(e)],queue:!1,timeout:!0}))}),a.addEventListener("dragover",e=>{var t;"pause"!==exports.status&&(t=utils.createDragEvent(e,a),e.preventDefault(),a.ipc.send("call-method",{module:"Operation",handler:"_emitMouseEvent",params:["onDragOver",t],queue:!1,timeout:!0}))}),a.addEventListener("drop",e=>{"pause"!==exports.status&&(e.preventDefault(),a.ipc.send("call-method",{module:"Operation",handler:"_emitMouseEvent",params:["onDrop",utils.createDragEvent(e,a)],queue:!1,timeout:!0}))}),a.addEventListener("blur",function(e){for(var[t,o]of keyDownMap)a.ipc.send("call-method",{module:"Operation",handler:"_emitMouseEvent",params:["keyup",utils.createKeyboardEvent({ctrlKey:!1,shiftKey:!1,altKey:!1,metaKey:!1,key:t,keyCode:o.keyCode,code:o.code})],queue:!1,timeout:!0});keyDownMap.clear()}),document.addEventListener("mousemove",n),document.addEventListener("mouseup",e),document.addEventListener("keyup",o),globalEventMap.set("mousemove",n),globalEventMap.set("mouseup",e),globalEventMap.set("keyup",o)}function release(){for(var[e,t]of globalEventMap.entries())document.removeEventListener(e,t);globalEventMap.clear(),keyDownMap.clear()}exports.init=init,exports.release=release;