"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.formatTime=exports.animationClipCacheManager=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path"),ipc_event_1=require("./ipc-event"),ANIMATION_CACHE_DIR=(0,path_1.join)(Editor.Project.tmpDir,"animator/cache");class AnimationClipCacheManager{constructor(){this.useClipCache=!0,this.animationMode=!1}get disabled(){return!this.useClipCache||!this.animationMode}async init(){var e=await Editor.Profile.getConfig("animator","clip_cache");this.useClipCache=e.use,e.use||console.log("The animator instant cache function is turned off")}async queryLatestCache(e){if(this.useClipCache){e=await(0,ipc_event_1.queryLatestClipCache)(e);if(e){var t=await Editor.Dialog.info(Editor.I18n.t("animator.clip_cache.use_latest_clip",{time:formatTime(e.time),url:e.url}),{buttons:[Editor.I18n.t("animator.clip_cache.apply"),Editor.I18n.t("animator.clip_cache.no")],default:1,cancel:1});if(0===t.response)try{return e.data||(0,fs_extra_1.readJSONSync)(e.file)}catch(e){console.error(e)}}}}async selectClipCache(e){e=await Editor.Dialog.select({type:"file",path:(0,path_1.join)(ANIMATION_CACHE_DIR,e),extensions:"json",filters:[{extensions:["json"],name:Editor.I18n.t("animator.toolbar.clips")}]});try{return e.canceled||!e.filePaths[0]?null:await(0,fs_extra_1.readJSON)(e.filePaths[0])}catch(e){console.error(e)}return null}async cacheClipDump(e,t){this.disabled||await(0,ipc_event_1.saveClipCacheToFile)(e,t)}}function formatTime(e){return new Date(e).toLocaleString()}exports.animationClipCacheManager=new AnimationClipCacheManager,exports.formatTime=formatTime;