"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.mounted=exports.methods=exports.computed=exports.watch=exports.data=exports.props=exports.template=void 0;const animation_ctrl_1=require("../../share/animation-ctrl"),animation_editor_1=require("../../share/animation-editor"),grid_ctrl_1=require("../../share/grid-ctrl"),ipc_event_1=require("../../share/ipc-event"),utils_1=require("../../utils"),join=require("path")["join"],readFileSync=require("fs-extra")["readFileSync"];function data(){return{spacingFrame:1,showType:"frame",menu:[]}}async function mounted(){this.spacingFrame=await animation_editor_1.animationEditor.getConfig("spacingFrame")||1;var t=await animation_editor_1.animationEditor.getConfig("showType");t&&(this.showType=t)}exports.template=readFileSync(join(__dirname,"./../../../../static/template/components/toolbar.html"),"utf-8"),exports.props=["currentFrame","state","clipsMenu","currentClip","sample","aniComp"],exports.data=data,exports.watch={showType(){this.$root.showType=this.showType}},exports.computed={currentTime(){var t=this;return(0,utils_1.transFrameByType)(t.currentFrame,t.showType,t.sample)}},exports.methods={t(t,a="toolbar."){return Editor.I18n.t("animator."+a+t)},onMouseDown(t){var a=t.target.getAttribute("name");if(a)switch(a){case"jump_prev_frame":animation_editor_1.animationEditor.jumpPrevFrame();break;case"jump_first_frame":animation_editor_1.animationEditor.jumpFirstFrame();break;case"jump_next_frame":animation_editor_1.animationEditor.jumpNextFrame();break;case"jump_last_frame":animation_editor_1.animationEditor.jumpLastFrame();break;case"play":case"pause":case"stop":animation_ctrl_1.animationCtrl.updatePlayState(a);break;case"arrange":animation_editor_1.animationEditor.spacingSelectedKeys(this.$refs.spacingFrame.value);break;case"exit":animation_ctrl_1.animationCtrl.exit();break;case"saveClip":animation_ctrl_1.animationCtrl.save();break;case"addEvent":animation_ctrl_1.animationCtrl.addEvent();break;case"shortcuts":Editor.Panel.open("shortcuts","animator");break;case"applyClipCache":animation_editor_1.animationEditor.selectCacheClipToApply()}},onSpacingFrame(t){this.spacingFrame=t.target.value,animation_editor_1.animationEditor.spacingFrame=this.spacingFrame},changeFrameShowType(t){const a=this;requestAnimationFrame(()=>{a.showType=t,grid_ctrl_1.gridCtrl.grid.labelShowType=t,grid_ctrl_1.gridCtrl.grid.updateLabels(),animation_editor_1.animationEditor.setConfig("showType",t)})},onTimeConfirm(t){const a=this;var e=t.target.value;if(/^([0-9]*)f?$/.test(e))animation_editor_1.animationEditor.updateCurrentFrame(Number(e));else{var i=animation_ctrl_1.animationCtrl.clipConfig.sample,r=e.match(/^([0-9]*)-([0-9]*)$/);if(r)r=Number(r[1])*i+Number(r[2]),animation_editor_1.animationEditor.updateCurrentFrame(r);else{r=/^((?<m>\d((\.\d*)?))m)?(?<s>(\d((\.\d*)?)))s$/;if(r.test(e)){var{m:e,s:r}=e.match(r)["groups"];let t=(0,utils_1.timeToFrame)(Number(r),i);e&&(t+=Number(e)*i),animation_editor_1.animationEditor.updateCurrentFrame(t)}requestAnimationFrame(()=>{t.path[0].value=a.currentTime})}}},async setCurrentClip(t){var a=this,t=t.target;if("addClip"===t.value){if("cc.animation.AnimationController"===a.aniComp)return void animation_editor_1.animationEditor.showToast("i18n:animator.mask.editInAnimationControl",2e3);var e=await animation_ctrl_1.animationCtrl.createAniClip();t.value=e||a.currentClip}await(0,ipc_event_1.IsetEditClip)(t.value)||(t.value=a.currentClip)}},exports.mounted=mounted;