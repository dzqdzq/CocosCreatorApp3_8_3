"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.newConsole=exports.getRealTime=exports.getCurrentLocalTime=exports.transTimeToNumber=exports.formateBytes=exports.NewConsole=void 0;const fs_1=require("fs"),fs_extra_1=require("fs-extra"),path_1=require("path");let rawConsole;class NewConsole{constructor(){this.command=!1,this.messages=[],this._start=!1,this.memoryTrackMap=new Map,this.logDest=(0,path_1.join)(NewConsole.logDest,getCurrentLocalTime()+".log"),rawConsole=console.__rawConsole||console,this.__proto__.__proto__=rawConsole}initLogFiles(){try{(0,fs_1.existsSync)(this.logDest)||(0,fs_extra_1.outputFileSync)(this.logDest,"")}catch(e){console.debug(e)}}async clearAuto(){try{var e,t=await(0,fs_extra_1.readdir)(NewConsole.logDest);t.length&&(t.sort((e,t)=>transTimeToNumber(t)-transTimeToNumber(e)),e=t.slice(4,t.length-1),await Promise.all(e.map(e=>{(0,fs_extra_1.remove)((0,path_1.join)(NewConsole.logDest,e))})))}catch(e){console.debug(e)}}record(){window.console.switchConsole?window.console.switchConsole(this):(this._start=!0,window.console=this,rawConsole.debug(`Start record asset-db log in {file(${this.logDest})}`))}stopRecord(){rawConsole.debug(`Stop record asset-db log. {file(${this.logDest})}`),window.console=rawConsole,this._start=!1}log(...e){rawConsole.log(...e),this._start&&(this.messages.push({type:"log",value:e}),this.save())}error(e){rawConsole.error(e),this._start&&(this.messages.push({type:"error",value:e}),this.save())}warn(...e){rawConsole.warn(...e),this._start&&(this.messages.push({type:"warn",value:e}),this.save())}debug(...e){rawConsole.debug(...e),this._start&&(this.messages.push({type:"debug",value:e}),this.save())}async save(){var e;this._start&&this.messages.length&&(e=this.messages.shift(),await this.saveLog(e.type,e.value))}async saveLog(e,t){t&&(0,fs_1.existsSync)(this.logDest)&&(e=`${getRealTime()}-${e}: ${translate(t)}\n`,(0,fs_extra_1.appendFile)(this.logDest,e))}trackMemoryStart(e){var t=process.memoryUsage().heapUsed;return this.memoryTrackMap.set(e,t),t}trackMemoryEnd(e,t=!0){var s,r,o=this.memoryTrackMap.get(e);return o?(s=process.memoryUsage().heapUsed,this.memoryTrackMap.delete(e),r=s-o,t?(1048576<r&&console.debug(`[Assets Memory track]: ${e} start:${formateBytes(o)}, end ${formateBytes(s)}, increase: `+formateBytes(r)),t):r):0}}function formateBytes(e){return(e/1024/1024).toFixed(2)+"MB"}function transTimeToNumber(e){var t=(e=(0,path_1.basename)(e,".log")).match(/-(\d+)$/);return(t?((e=Array.from(e))[t.index]=":",new Date(e.join(""))):new Date).getTime()}function getCurrentLocalTime(){var e=new Date;return e.toLocaleDateString().replace(/\//g,"-")+" "+e.toTimeString().slice(0,5).replace(/:/g,"-")}function translate(e){if("string"==typeof e&&!e.includes("\n")||"number"==typeof e)return String(e);if("string"==typeof e&&e.includes("\n"))return translate(e.split("\n"));if("object"==typeof e){if(Array.isArray(e)){let t="";return e.forEach(e=>{t+=translate(e)+"\r"}),t}try{return e.stack?translate(e.stack):JSON.stringify(e)}catch(e){}}return e&&e.toString&&e.toString()}function getRealTime(){var e=new Date;return e.toLocaleDateString().replace(/\//g,"-")+" "+e.toTimeString().slice(0,8)}(exports.NewConsole=NewConsole).logDest=(0,path_1.join)(Editor.Project.path,"temp","asset-db","log"),exports.formateBytes=formateBytes,exports.transTimeToNumber=transTimeToNumber,exports.getCurrentLocalTime=getCurrentLocalTime,exports.getRealTime=getRealTime,exports.newConsole=new NewConsole;