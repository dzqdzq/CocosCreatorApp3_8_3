"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const path_1=require("path"),events_1=__importDefault(require("events")),console_1=require("./../console"),Profile=require("@base/electron-profile"),_profile=Profile.load("local://editor/packages.json"),_profileDefault=Profile.load("defaultPreferences://editor/packages.json");class PluginManager extends events_1.default{constructor(){super(...arguments),this.packageRegisterInfo={},this.hookOrder=[],this.assetDBProfileMap={},this._tasks=[],this._currentTask=null,this.pkgLock={},this.ready=!1}async init(){Editor.Metrics.trackTimeStart("asset-db:worker-init: initPlugin"),console_1.newConsole.trackMemoryStart("asset-db:worker-init: initPlugin");var e=Editor.Package.getPackages({});await Promise.all(e.map(async e=>{await this.onPackageRegister(e),e.enable&&await this.onPackageEnable(e)})),Editor.Package.__protected__.on("register",registerAttach),Editor.Package.__protected__.on("enable",enableAttach),Editor.Package.__protected__.on("disable",disableDetach),console_1.newConsole.trackMemoryEnd("asset-db:worker-init: initPlugin"),Editor.Metrics.trackTimeEnd("asset-db:worker-init: initPlugin",{output:!0}),this.ready=!0,this.emit("ready")}async destroyed(){Editor.Package.__protected__.removeListener("register",registerAttach),Editor.Package.__protected__.removeListener("enable",enableAttach),Editor.Package.__protected__.removeListener("disable",disableDetach)}addTask(e,t,a,...r){this._tasks.push({type:e,pkgName:t,handler:a,args:r}),this.step()}async onPackageRegister(t){var e=_profile.get("disable-packages."+t.path);if(!e){e=_profileDefault.get("disable-packages."+t.path);if(!e&&t.info.contributions&&t.info.contributions["asset-db"]){var e=t.info.contributions["asset-db"],a=this.packageRegisterInfo[t.name]||{name:t.name,hooks:[],enable:!1,internal:Editor.Utils.Path.contains(Editor.App.path,t.path)};if(console_1.newConsole.trackMemoryStart("asset-db-plugin-register: "+t.name),e.importer&&e.importer.script){if(console.warn(`[Register ${t.name}]`+Editor.I18n.t("asset-db.deprecatedTip",{oldName:"contribution.importer",newName:"contribution.asset-handler",version:"3.8.3"})),!e.importer.list)return;var r=(0,path_1.join)(t.path,e.importer.script);try{a.importerRegisterInfo={script:r,list:e.importer.list}}catch(e){console.warn(`Failed to register the importer from ${t.name}: `+r),console.warn(e)}}if(e.script){r=(0,path_1.join)(t.path,e.script);try{var o=Editor.Module.__protected__.requireFile(r);"function"==typeof o.load&&await o.load(),Array.isArray(e["global-hook"])&&a.hooks.push(...e["global-hook"]),Array.isArray(e["mount-hook"])&&a.hooks.push(...e["mount-hook"]),a.hooks.length&&this.hookOrder.push(t.name),e["asset-handler"]&&(a.assetHandlerInfos=e["asset-handler"]),a.script=r}catch(e){delete a.script,console.warn(`Description Failed to register the Asset-DB script from ${t.name}: ${a.script}.`),console.warn(e)}}e.mount&&(a.mount=Object.assign(Object.assign({},e.mount),{path:e.mount.path&&(0,path_1.join)(t.path,e.mount.path)}),e.mount.enable)&&(this.assetDBProfileMap[`packages/${t.name}.json(${e.mount.enable})`]=t.name),console_1.newConsole.trackMemoryEnd("asset-db-plugin-register: "+t.name),this.packageRegisterInfo[t.name]=a}}}async onPackageEnable(e){var t;e.invalid||(t=this.packageRegisterInfo[e.name])&&(t.enable=!0,this.emit("register",e.name,t))}async onPackageDisable(e){var t=this.packageRegisterInfo[e.name];if(t){if(t.enable=!1,t.script)try{var a=Editor.Module.__protected__.requireFile(t.script);a.unload&&a.unload()}catch(e){console.warn("Description Failed to register the Asset-DB script."),console.warn(e)}if(t.importerRegisterInfo)try{var r=Editor.Module.__protected__.requireFile(t.importerRegisterInfo.script);r.unload&&r.unload()}catch(e){console.warn(e)}delete this.packageRegisterInfo[e.name],this.emit("unregister",e.name,t)}}async step(){if(this._tasks.length){var t=this._tasks.findIndex(e=>!this.pkgLock[e.pkgName]);if(-1!==t){var e=this._tasks[t],t=(this.pkgLock[e.pkgName]=!0,this._tasks.splice(t,1),`run package(${e.pkgName}) handler(${e.type})`);try{console.debug(t+" start"),await e.handler.call(this,...e.args),console.debug(t+" success!")}catch(e){console.error(e),console.error(t+" failed!")}this.pkgLock[e.pkgName]=!1,await this.step()}}}async queryAssetDBInfos(){var e=[];for(const a of Object.keys(this.packageRegisterInfo)){var t=await this.queryAssetDBInfo(a);t&&e.push(t)}return e}async queryAssetDBInfo(e){var t=this.packageRegisterInfo[e];if(!t||!t.mount)return null;if(t.mount.enable&&!(await Editor.Profile.getProject(t.name,t.mount.enable)||await Editor.Profile.getConfig(t.name,t.mount.enable)))return null;return{name:e,readonly:!!t.mount.readonly,visible:!1!==t.mount.visible,target:t.mount.path}}getAssetDBInfo(e){var t=this.packageRegisterInfo[e];return t&&t.mount?{name:e,readonly:!!t.mount.readonly,visible:!1!==t.mount.visible,target:t.mount.path}:null}async executeScript(e){this.packageRegisterInfo[e.name]||(t=(await Editor.Package.getPackages({name:e.name}))[0])&&await enableAttach(t);var t=this.packageRegisterInfo[e.name];if(t&&t.script&&(t.enable||!this.ready)){t=Editor.Module.__protected__.requireFile(t.script);if(t.methods&&t.methods[e.method])return t.methods[e.method](...e.args||[])}throw"Asset database scripts do not exist: "+e.name+"/"+e.method}async executeScriptSafe(e){try{var t=this.packageRegisterInfo[e.name].script,a=Editor.Module.__protected__.requireFile(t);if(a.methods&&a.methods[e.method])return await a.methods[e.method](...e.args||[])}catch(e){console.debug(e)}}async runHook(e,t=[]){for(const o of this.hookOrder){var{hooks:a,enable:r}=this.packageRegisterInfo[o];!r&&this.ready||!a.includes(e)||(Editor.Metrics.trackTimeStart(`asset-db-hook-${o}-`+e),console.debug(`Run asset db hook ${o}:${e} ...`),await this.executeScriptSafe({name:o,method:e,args:t}),console.debug(`Run asset db hook ${o}:${e} success!`),Editor.Metrics.trackTimeEnd(`asset-db-hook-${o}-`+e,{output:!0}))}}async registerImporterList(t){for(const o in pluginManager.packageRegisterInfo){var e=pluginManager.packageRegisterInfo[o];if(e.importerRegisterInfo){var a=Editor.Module.__protected__.requireFile(e.importerRegisterInfo.script);for(const i of e.importerRegisterInfo.list)if(a.methods&&a.methods[i])try{var r=await a.methods[i]();t.importerManager.add(r.importer,r.extname)}catch(e){console.warn(`Failed to register importer. Data is not compliant: ${t.options.name} `+i),console.warn(e)}else console.warn(`Failed to register importer. Data is not compliant: ${t.options.name} `+i)}}}}const registerAttach=async function(e){pluginManager.addTask("register",e.name,pluginManager.onPackageRegister,e)},enableAttach=async function(e){pluginManager.addTask("enable",e.name,pluginManager.onPackageEnable,e)},disableDetach=async function(e){pluginManager.addTask("disable",e.name,pluginManager.onPackageDisable,e)},pluginManager=new PluginManager;exports.default=pluginManager;