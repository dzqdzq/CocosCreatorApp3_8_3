"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.assetHandlerManager=exports.CustomImporter=void 0;const asset_db_1=require("@editor/asset-db"),fs_extra_1=require("fs-extra"),path_1=require("path"),utils_1=require("../utils"),plugin_1=__importDefault(require("./plugin")),lodash_1=__importDefault(require("lodash")),globby_1=__importDefault(require("globby")),sharp_1=__importDefault(require("sharp")),customHandlerKeys=["thumbnail","userDataConfig","open","export","create","customOperate"],databaseIconConfig={type:"icon",value:"database",thumbnail:!1};class CustomImporter extends asset_db_1.Importer{constructor(e,t){super();const{migrations:a,migrationHook:r,version:n,versionCode:s,force:i,import:o}=t.importer;if(!o)throw new Error(`Can not find import function in assetHandler(${t.name})`);var{validate:t,name:l}=t;this._name=l,this._version=n||"0.0.0",this._versionCode=s||1,a&&(this._migrations=a),r&&(this._migrationHook=r),t&&(this.validate=t),i&&(this.force=i),this.extnames=e,this.import=async e=>{await exports.assetHandlerManager.runImporterHook(e,"before");var t=await o(e);return await exports.assetHandlerManager.runImporterHook(e,"after"),t}}}exports.CustomImporter=CustomImporter;class AssetHandlerManager{constructor(){this.name2handler={},this.type2handler={},this.name2importer={},this.importer2OperateRecord={},this.extname2registerInfo={},this.name2registerInfo={},this.name2custom={},this.importer2custom={},this._iconConfigMap=null,this._userDataCache={},this._defaultMetaPath=(0,path_1.join)(Editor.Project.path,".creator","default-meta.json")}clear(){this.name2handler={},this.extname2registerInfo={},this.name2registerInfo={},this.name2custom={},this.importer2OperateRecord={},this.importer2custom={},this._iconConfigMap=null}async init(){Object.values(plugin_1.default.packageRegisterInfo).forEach(e=>{e.assetHandlerInfos&&this.register(e.name,e.assetHandlerInfos,e.internal)}),await this.refreshDefaultUserData()}async activateRegisterAll(){await Promise.all(Object.values(this.name2registerInfo).map(e=>(console.debug("lazy register asset handler "+e.name),this.activateRegister(e))))}async activateRegister(e){const{pkgName:t,handler:a,name:r,extnames:n,internal:s}=e;if(this.name2importer[r])return this.name2importer[r];try{const m=await plugin_1.default.executeScriptSafe({name:t,method:a});if(m){this.name2handler[r]=Object.assign(m,{from:{pkgName:t,internal:s}});var i,o,l=m.extends;if(l){if(!this.name2handler[l])return console.error("Can not find extend asset-handler "+l),this.name2handler[r].assetType&&(i=this.name2handler[r].assetType,this.type2handler[i]=(this.type2handler[i]||[]).concat([this.name2handler[r]])),null;this.name2handler[r]=Object.assign({},this.name2handler[l],this.name2handler[r]),this.name2handler[r].importer=Object.assign({},this.name2handler[l].importer,this.name2handler[r].importer)}return this.name2handler[r].assetType&&(o=this.name2handler[r].assetType,this.type2handler[o]=(this.type2handler[o]||[]).concat([this.name2handler[r]])),this._userDataCache[r]&&m.userDataConfig&&Object.keys(m.userDataConfig.default).forEach(e=>{e in this._userDataCache[r]&&(m.userDataConfig.default[e].default=this._userDataCache[r][e])}),this.name2importer[r]=new CustomImporter(n,this.name2handler[r])}}catch(e){delete this.name2registerInfo[r],console.error(e),console.error(`register asset-handler ${r} failed!`)}return null}register(a,e,r){e.forEach(t=>{var e=t.extnames&&t.extnames.length?t.extnames:["-"];this.name2registerInfo[t.name]={pkgName:a,name:t.name,handler:t.handler,extnames:e,internal:r},e.forEach(e=>{this.extname2registerInfo[e]=this.extname2registerInfo[e]||[],this.extname2registerInfo[e].push(this.name2registerInfo[t.name])})})}unregister(t,e){e.forEach(e=>{delete this.name2registerInfo[e.name],e.extnames.forEach(e=>{this.extname2registerInfo[e]&&(this.extname2registerInfo[e]=this.extname2registerInfo[e].filter(e=>e.pkgName===t))}),this.extname2registerInfo["-"]=this.extname2registerInfo["-"].filter(e=>e.pkgName===t)})}async findImporter(e,t){let a="";if(e instanceof asset_db_1.Asset&&e.extname&&(a=e.extname),e.meta.importer&&"*"!==e.meta.importer){var r=this.name2importer[e.meta.importer];if(r)return r;var n=this.name2registerInfo[e.meta.importer];if(n&&(r=await this.activateRegister(n))&&r.name===e.meta.importer)return r;console.log(`Can not find the importer ${e.meta.importer} in editor`)}n=this.extname2registerInfo[a]||[];if(n.length){r=await this._findImporterInRegisterInfo(e,n);if(r)return r}return t?null:this.getDefaultImporter(e)}async getDefaultImporter(e){return await this._findImporterInRegisterInfo(e,this.extname2registerInfo["*"]||[])||null}async _findImporterInRegisterInfo(a,r){for(let t=r.length-1;0<=t;t--){var n=r[t]["name"];let e=this.name2importer[n];if(e=e||await this.activateRegister(r[t]))try{if(await e.validate(a))return e}catch(e){console.warn(`Importer(${n}) validate failed: `+a.uuid),console.warn(e)}}}add(e,t){"*"!==e.name&&this.name2handler[e.name]&&this.name2handler[e.name]!==e?console.warn(`The AssetHandler[${e.name}] is already registered.`):(this.name2handler[e.name]=e,t=new CustomImporter(t,e),this.name2importer[e.name]=t)}remove(e){delete this.name2handler[e.name]}addCustom(t){t.handlerList.length?this.name2custom[t.name]?console.warn(`The custom handler [${t.name}] is already registered.`):(t.handlerList.forEach(e=>{this.importer2custom[e]=this.importer2custom[e]||[],this.importer2custom[e].push(t)}),this.name2custom[t.name]=t):console.warn(`Cannot register the custom asset handler [${t.name}] because 'handlerList' is required.`)}removeCustom(t){delete this.name2custom[t.name],t.handlerList.forEach(e=>{this.importer2custom[e].length&&this.importer2custom[e].splice(this.importer2custom[e].findIndex(e=>e.name===t.name),1)})}async getCreateMap(){var e=[];for(const s of Object.keys(this.name2handler)){var t=this.name2handler[s];if(t.createInfo){t=t.createInfo["generateMenuInfo"];try{var r=await t(),n=getUserTemplateDir(s);let a=await queryUserTemplates(n);const i=this.name2importer[s].extnames,o=(a=a.filter(e=>{e=(0,path_1.extname)(e);return!e||i.includes(e)}),[]);if(r.forEach(t=>{var e;t.template&&a.length&&-1!==(e=a.findIndex(e=>(0,path_1.basename)(e)===(0,path_1.basename)(t.template)))&&((t=JSON.parse(JSON.stringify(t))).template=a[e],a.splice(e,1)),o.push(patchHandler(t,s,i))}),a.length&&o.length){let t=o;t=o[0].submenu||(o[0]=Object.assign(Object.assign({},o[0]),{submenu:[Object.assign(Object.assign({},o[0]),{label:"Default"})]}),o[0].submenu),a.forEach(e=>{t.push(patchHandler({label:(0,path_1.basename)(e,(0,path_1.extname)(e)),template:e},s,i))}),t.push({label:"i18n:asset-db.createAssetTemplate.manageTemplate",message:{target:"asset-db",name:"show-asset-template-dir",params:[n]}})}e.push(...o)}catch(e){console.error(`Generate create list in handler ${s} failed`)}}}return e}async queryIconConfigMap(){if(this._iconConfigMap)return this._iconConfigMap;var e={};for(const r of Object.keys(this.name2handler)){var t,a=this.name2handler[r];a.iconInfo?({default:a,generateThumbnail:t}=a.iconInfo,e[r]=Object.assign(Object.assign({},a),{thumbnail:!!t})):e[r]={type:"icon",value:Editor.UI.__protected__.Icon.Map.asset[r]?r:"file",thumbnail:!1}}return e.database=databaseIconConfig,this._iconConfigMap=e}async createAsset(e){if(!e.handler)return console.error("Cannot create asset because options.target and options.handler is required."),null;e.target&&!(0,path_1.isAbsolute)(e.target)&&(e.target=(0,utils_1.url2path)(e.target));var t=this.name2handler[e.handler];if(t&&t.createInfo&&t.createInfo.create){t=await t.createInfo.create(e);if(null!==t)return t}if(e.template&&e.target){var t=(0,utils_1.url2path)(e.template);if((0,fs_extra_1.existsSync)(t))return await(0,fs_extra_1.copy)(t,e.target,{overwrite:e.overwrite}),(e.userData||e.uuid)&&(t={userData:e.userData||{}},e.uuid&&(t.uuid=e.uuid),await(0,fs_extra_1.outputJSONSync)((0,path_1.join)(e.target,".meta"),t,{spaces:4})),e.target}return e.target&&!e.template?((0,fs_extra_1.outputFileSync)(e.target,""),e.target):null}async createAssetDialog(e){let t;if(e.handler?t=this.name2handler[e.handler]:e.ccType&&this.type2handler[e.ccType]&&(t=this.type2handler[e.ccType].find(e=>!!e.createInfo)),t&&t.createInfo){var a=(await t.createInfo.generateMenuInfo())[0],r=e.url?(0,utils_1.url2path)(e.url):(0,path_1.join)(Editor.Project.path,"assets",a.fullFileName||""),n=this.name2importer[t.name].extnames[0],r=(a.label=(0,utils_1.transI18nName)(a.label),await Editor.Dialog.save({title:Editor.I18n.t("asset-db.createAsset.title"),path:Editor.Utils.File.getName(r),filters:[{name:a.label,extensions:[n.slice(1)]}]}));if(r.filePath)return this.createAsset(Object.assign({target:r.filePath,handler:t.name},a))}else console.error(`Can not find asset handler for ${e.ccType||e.handler}.`)}async generateThumbnail(t,e="large"){if(!t)return null;if(t.invalid)return{type:"icon",value:"file"};var a=await this.queryIconConfigMap();if(!a[t.meta.importer])return null;var r=(0,path_1.join)(t.temp,`thumbnail-${e}.png`);if((0,fs_extra_1.existsSync)(r))return{type:"image",value:r};let n;if(a[t.meta.importer].thumbnail){var s=this.name2handler[t.meta.importer];try{n=await s.iconInfo.generateThumbnail(t)}catch(e){return console.warn(e),console.warn("generateThumbnail failed for "+t.url),null}}else n=a[t.meta.importer];if("image"===n.type){s=(0,path_1.isAbsolute)(n.value)?n.value:(0,utils_1.url2path)(n.value);if(!(0,fs_extra_1.existsSync)(s))return null;try{n.value=await resizeThumbnail(s,r,e)}catch(e){console.warn(e),console.warn("resizeThumbnail failed for "+t.url)}}return n}async generateExportData(e,t){var a=this.name2handler[e.meta.importer];return a&&a.exporter&&a.exporter.generateExportData?a.exporter.generateExportData(e,t):null}async outputExportData(e,t,a){e=this.name2handler[e];return!!(e&&e.exporter&&e.exporter.outputExportData)&&e.exporter.outputExportData(t,a)}async queryAssetConfigMap(){var e={};for(const n of Object.keys(this.name2handler)){var t=this.name2handler[n],a=this.name2registerInfo[n],r={displayName:t.displayName,description:t.description,docURL:t.docURL};a&&(r.from={pkgName:a.pkgName,internal:a.internal}),t.iconInfo&&(r.iconInfo=t.iconInfo.default),t.userDataConfig&&(r.userDataConfig=t.userDataConfig.default),e[n]=r}return e}async queryUserDataConfig(e){var t;return!!e&&((t=this.name2handler[e.meta.importer])&&t.userDataConfig?t.userDataConfig.generate?t.userDataConfig.generate(e):t.userDataConfig.default:void 0)}async queryUserDataConfigDefault(e){e=this.name2handler[e];if(e&&e.userDataConfig)return e.userDataConfig.default}async openAsset(e){var t;return!!e&&((t=this._findOperateHandler(e.meta.importer,"open"))&&t.open?t.open(e):!!(0,fs_extra_1.existsSync)(e.source)&&Editor.Message.request("program","open-url",e.source))}async executeCustomOperation(e,t,...a){e=this.name2handler[e];if(e&&e.customOperationMap&&e.customOperationMap[t])return(0,e.customOperationMap[t].operator)(...a)}async runImporterHook(e,t){var a=this.name2handler[e.meta.importer];if(a&&a.importer&&"function"==typeof a.importer[t])try{await a.importer[t](e)}catch(e){console.error(e),console.error(`run ${t} hook failed!`)}a=this.importer2custom[e.meta.importer];if(a&&a.length)for(const n of a){var r=n.importer&&n.importer[t];if(r)try{await r(e)}catch(e){console.error(e),console.error(`run ${t} hook failed!`)}}}_findOperateHandler(e,t){if(this.importer2OperateRecord[e]&&this.importer2OperateRecord[e][t])return this.importer2OperateRecord[e][t];let a=this.name2handler[e];return(a=!a||t in a||!this.importer2custom[e]?a:this.importer2custom[e].find(e=>t in e))&&a[t]?(this.importer2OperateRecord[e]||(this.importer2OperateRecord[e]={}),this.importer2OperateRecord[e][t]=a):(console.debug(`Cannot find the asset handler of operate ${t} for importer `+e),null)}queryAllImporter(){let e=Object.keys(this.name2handler);var t=(0,asset_db_1.get)("internal"),a=t.importerManager.name2importer;return Object.keys(a).length&&(e.push(...Object.keys(t.importerManager.name2importer)),e=Array.from(new Set(e)),console.warn("the importer version need to upgrade.")),e.sort()}queryAllAssetTypes(){const t=new Set;Object.values(this.name2handler).forEach(e=>{e=e.assetType;e&&t.add(e)});var e,a=(0,asset_db_1.get)("internal").importerManager.name2importer;if(Object.keys(a).length)for(const r in a)"*"!==r&&(e=a[r]["assetType"],e&&t.add(e),console.warn(`the importer${r} version need to upgrade.`));return Array.from(t).sort()}updateDefaultUserData(e,t,a){lodash_1.default.set(this._userDataCache,e+"."+t,a);var r=this.name2handler[e];r&&r.userDataConfig&&r.userDataConfig.default[t]&&(r.userDataConfig.default[t].default=a),(0,asset_db_1.setDefaultUserData)(e,this._userDataCache[e]),(0,fs_extra_1.outputJSONSync)(this._defaultMetaPath,this._userDataCache)}refreshDefaultUserData(){try{if((0,fs_extra_1.existsSync)(this._defaultMetaPath)){var e=(0,fs_extra_1.readJSONSync)(this._defaultMetaPath);for(const t in this._userDataCache=e)(0,asset_db_1.setDefaultUserData)(t,e[t])}}catch(e){console.error(e)}}}function patchHandler(e,t,a){e=Object.assign({handler:t},e);return e.submenu&&(e.submenu=e.submenu.map(e=>patchHandler(e,t,a))),e.template&&!e.fullFileName&&(e.fullFileName=(0,path_1.basename)(e.template),(0,path_1.extname)(e.fullFileName)||(e.fullFileName+=a[0])),e}async function queryUserTemplates(e){try{if((0,fs_extra_1.existsSync)(e))return(await(0,globby_1.default)((0,path_1.join)(e,"/**/*"),{onlyFiles:!0})).filter(e=>!e.endsWith(".meta"))}catch(e){console.warn(e)}return[]}function getUserTemplateDir(e){return(0,path_1.join)(Editor.Project.path,".creator","asset-template",e)}exports.assetHandlerManager=new AssetHandlerManager;const SizeMap={large:512,small:16,middle:128};async function resizeThumbnail(e,t,a){if("origin"===a)return e;"string"==typeof a&&(a=SizeMap[a]||16),await(0,fs_extra_1.ensureDir)((0,path_1.dirname)(t));var r=(0,sharp_1.default)(e),n=(await r.metadata()).width;return n&&n<=a?await(0,fs_extra_1.copyFile)(e,t):await r.resize(a).toFile(t),t}