"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.shortcutManager=void 0;const utils_1=require("../utils"),lodash_1=require("lodash"),packageJson=require("../../package.json"),debounceEmitChange=(0,lodash_1.debounce)(t=>{Editor.Message.broadcast(packageJson.name+":change",t)},300);class ShortcutManager{constructor(){this._packagesShortcutConfig={},this._userConfig={},this._shortcutMapCache={},this._shortcutListCache={},this._dirty=!1,this.emitChange=debounceEmitChange}get shortcutMap(){return this._dirty&&(this._shortcutMapCache=this.queryShortcutMap()),this._shortcutMapCache}get queryPackagesShortcutList(){return this._dirty&&(this._shortcutListCache=this.queryShortcutList(),this._dirty=!1),this._shortcutListCache}queryShortcutList(){const e=JSON.parse(JSON.stringify(this._packagesShortcutConfig));return Object.keys(this._userConfig).forEach(s=>{if(e[s]||(e[s]={}),this._packagesShortcutConfig[s]){const r=e[s];var t=this._userConfig[s];Object.values(t).forEach(t=>{var e=this.getKeyFromItem(t,!0);this._packagesShortcutConfig[s]=this._packagesShortcutConfig[s]||{},this._packagesShortcutConfig[s][e]||(t.missing=!0),t.key=e,r[t.key]=t})}}),e}queryShortcutMap(){const e={};return Object.keys(this.queryPackagesShortcutList).forEach(t=>{t=this.queryPackagesShortcutList[t];Object.values(t).forEach(t=>{e[t.shortcut]=e[t.shortcut]||[],e[t.shortcut].push(t)})}),e}async init(){this._userConfig=await Editor.Profile.getConfig("shortcuts","userConfig","global")||{},(await Editor.Package.getPackages({enable:!0})).forEach(t=>this.register(t)),Editor.Package.__protected__.on("enable",t=>this.register(t)),Editor.Package.__protected__.on("disable",t=>this.unRegister(t))}register(t){if(!t.invalid){var e=t.info.contributions?t.info.contributions.shortcuts:[];if(Array.isArray(e)&&0!==e.length){var s={};for(const a of e){var r,i=(0,utils_1.handleOptionsToShortcut)(a);i&&(s[r=this.getKeyFromItem(Object.assign(a,{shortcut:i}))]={shortcut:i,when:a.when,message:a.message,pkgName:t.name,key:r})}this._packagesShortcutConfig[t.name]=s,this._dirty=!0,this.emitChange(t.name)}}}unRegister(t){delete this._packagesShortcutConfig[t.name],this._dirty=!0,this.emitChange(t.name)}async changeShortcut(t,e){if(!this._packagesShortcutConfig[t.pkgName]||"string"!=typeof e)return!1;var s=this.getKeyFromItem(t,!0);if(!this._packagesShortcutConfig[t.pkgName][s])return""===e&&(delete this._userConfig[t.pkgName][s],!0);this._userConfig[t.pkgName]||(this._userConfig[t.pkgName]={});var r=this.getKeyFromItem(t),r=(delete this._userConfig[t.pkgName][r],JSON.parse(JSON.stringify(t))),e=this.getKeyFromItem(Object.assign(r,{shortcut:e,rawShortcut:t.rawShortcut||this._packagesShortcutConfig[t.pkgName][s].shortcut,when:this._packagesShortcutConfig[t.pkgName][s].when}));return r.rawShortcut&&(this._userConfig[t.pkgName][e]=r,await Editor.Profile.setConfig("shortcuts","userConfig",this._userConfig,"global")),this._dirty=!0,this.emitChange(t.pkgName),!0}resetShortcut(t){var e,s=this.getKeyFromItem(t);return this._userConfig[t.pkgName]&&this._userConfig[t.pkgName][s]?(e=this._userConfig[t.pkgName][s],delete this._userConfig[t.pkgName][s],this._dirty=!0,this.emitChange(t.pkgName),e.rawShortcut||this._packagesShortcutConfig[t.pkgName][this.getKeyFromItem(t,!0)].shortcut):t.rawShortcut||t.shortcut}getKeyFromItem(t,e=!1){e=e&&t.rawShortcut||t.shortcut||"(empty)";return t.message+(t.when||"")+e}}exports.shortcutManager=new ShortcutManager;