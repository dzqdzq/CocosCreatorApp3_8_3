import type { CustomResolve } from './index';
export interface Options {
    /**
     * For example:
     * ```js
     * {
     *   '.js': ['.js', '.ts', '.tsx'], // Specifiers ended with '.js' will resolved to, '.ts', '.tsx'.
     * }
     * ```
     */
    extMap?: Record<string, string[]>;
    /**
     * If import(`./*.js`) is resolved as `./x.ts`,
     * should we use:
     * - `import('./x.js')` (as-is),
     * - `import('x.ts')` (resolved), or
     * - `import('./x')` (drop)?
     */
    forwardExt?: 'drop' | 'resolved' | 'keep-with-test';
}
export default function createDefaultResolver(options?: Options): CustomResolve;
