"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CjsModuleNotFileError = exports.CjsInteropError = exports.CanNotBeBaseURLError = exports.UnsupportedDirectoryImportError = exports.ModuleNotFoundError = exports.PackageImportNotDefined = exports.PackagePathNotExportedError = exports.InvalidPackageTargetError = exports.InvalidPackageConfigurationError = exports.InvalidModuleSpecifierError = void 0;
const i18n_1 = require("@cocos/creator-programming-common/lib/i18n");
/**
 * Specifier 是无效的 URL、包名或包的子路径 specifier。
 */
class InvalidModuleSpecifierError extends Error {
    constructor(specifier) {
        super((0, i18n_1.i18nTranslate)('resolve_error_invalid_module_specifier', {
            specifier,
        }));
    }
}
exports.InvalidModuleSpecifierError = InvalidModuleSpecifierError;
/**
 *  `package.json` 配置无效或包含无效的配置。
 */
class InvalidPackageConfigurationError extends Error {
    constructor(packageURL) {
        super((0, i18n_1.i18nTranslate)('resolve_error_invalid_package_configuration', {
            packageURL: packageURL.href,
        }));
    }
}
exports.InvalidPackageConfigurationError = InvalidPackageConfigurationError;
/**
 * 包的导入或导出为包定义了目标模块，但该目标模块的类型无效或指定了一个字符串目标。
 */
class InvalidPackageTargetError extends Error {
    constructor(packageURL) {
        super((0, i18n_1.i18nTranslate)('resolve_error_invalid_package_target', {
            packageURL: packageURL.href,
        }));
    }
}
exports.InvalidPackageTargetError = InvalidPackageTargetError;
/**
 * 指定模块所在包的导出没有定义或者不允许导出目标子路径。
 * Package exports do not define or permit a target subpath in the package for the given module.
 */
class PackagePathNotExportedError extends Error {
    constructor(subpath, packageURL) {
        super((0, i18n_1.i18nTranslate)('resolve_error_package_path_not_exported', {
            subpath,
            packageURL: packageURL.href,
        }));
    }
}
exports.PackagePathNotExportedError = PackagePathNotExportedError;
/**
 * Package imports do not define the specifier.
 * 包的 `imports` 中未囊括该 specifier 的定义。
 */
class PackageImportNotDefined extends Error {
    constructor(specifier, packageURL) {
        super((0, i18n_1.i18nTranslate)('resolve_error_package_imports_not_defined', {
            specifier,
            packageURL: packageURL.href,
        }));
    }
}
exports.PackageImportNotDefined = PackageImportNotDefined;
class ModuleNotFoundError extends Error {
    constructor(specifier, parentURL) {
        super((0, i18n_1.i18nTranslate)('resolve_error_module_not_found', {
            specifier,
            parentURL: parentURL.href,
        }));
    }
}
exports.ModuleNotFoundError = ModuleNotFoundError;
class UnsupportedDirectoryImportError extends Error {
    constructor() { super((0, i18n_1.i18nTranslate)('resolve_unsupported_directory_import')); }
}
exports.UnsupportedDirectoryImportError = UnsupportedDirectoryImportError;
/**
 * ModLo 特定：解析出的 URL 含有 “cannot-be-a-base-URL” 状态。
 */
class CanNotBeBaseURLError extends Error {
    constructor(url) { super((0, i18n_1.i18nTranslate)('modLo_can_not_be_base_url_error', { url: url.href })); }
}
exports.CanNotBeBaseURLError = CanNotBeBaseURLError;
/**
 * ModLo 特定：无法从源 ESM 模块中解析目标 CommonJS 模块。
 */
class CjsInteropError extends Error {
    constructor(url, error) { super((0, i18n_1.i18nTranslate)('modLo_cjs_interop_error', { url: url.href })); }
}
exports.CjsInteropError = CjsInteropError;
/**
 * ModLo 特定：CommonJS 模块必须是文件模块。
 */
class CjsModuleNotFileError extends Error {
    constructor(url) { super((0, i18n_1.i18nTranslate)('modLo_cjs_module_not_file_error', { url: url.href })); }
}
exports.CjsModuleNotFileError = CjsModuleNotFileError;
//# sourceMappingURL=resolve-error.js.map