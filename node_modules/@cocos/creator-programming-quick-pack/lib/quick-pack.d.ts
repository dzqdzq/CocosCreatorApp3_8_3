/// <reference types="node" />
import { URL } from 'url';
import { ModLo } from '@cocos/creator-programming-mod-lo';
import { LoaderContext } from './utils/loader-context';
import { Logger } from '@cocos/creator-programming-common/lib/logger';
interface BuildResult {
    depsGraph: Record<string, string[]>;
}
export declare class QuickPack {
    constructor({ modLo, sourceMaps, origin, workspace, verbose, logger, }: {
        modLo: ModLo;
        sourceMaps?: boolean | 'inline';
        origin: string;
        workspace: string;
        verbose?: boolean;
        logger?: Logger;
    });
    build(specifiers: Iterable<string | URL>, options?: {
        retryResolutionOnUnchangedModule?: boolean;
        cleanResolution?: boolean;
    }): Promise<BuildResult>;
    createLoaderContext(): Promise<LoaderContext>;
    clear(): Promise<void>;
    loadCache(): Promise<void>;
    private _verbose;
    private _origin;
    private _modLo;
    private _sourceMaps;
    private _moduleRecords;
    private _chunkWriter;
    private _logger;
    private _middleware;
    private _resolveEntry;
    private _getOrCreateInspectRecord;
    private _instantiateAll;
    private _inspectWithCache;
    private _link;
    private _inspect;
    private _createResolver;
    private _addChunk;
    private _addErroneousChunk;
    private _resolve;
    private _serializeMainRecord;
    private _deserializeMainRecord;
    /**
     * This method should be called after all modules are instantiated.
     */
    private _getDepsGraphFromModuleRecords;
}
export {};
