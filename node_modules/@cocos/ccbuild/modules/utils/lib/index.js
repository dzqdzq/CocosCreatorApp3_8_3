"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function () {
        return m[k];
      }
    };
  }
  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isThenable = exports.asserts = exports.readdirR = exports.toExtensionLess = exports.filePathToModuleRequest = exports.rebasePath = exports.absolutePathFuncFactory = exports.formatPath = exports.ps = void 0;
const ps = __importStar(require("./path"));
exports.ps = ps;
// TODO: for module compatibility, to be removed.
var path_1 = require("./path");
Object.defineProperty(exports, "formatPath", {
  enumerable: true,
  get: function () {
    return path_1.formatPath;
  }
});
Object.defineProperty(exports, "absolutePathFuncFactory", {
  enumerable: true,
  get: function () {
    return path_1.absolutePathFuncFactory;
  }
});
Object.defineProperty(exports, "rebasePath", {
  enumerable: true,
  get: function () {
    return path_1.rebasePath;
  }
});
Object.defineProperty(exports, "filePathToModuleRequest", {
  enumerable: true,
  get: function () {
    return path_1.filePathToModuleRequest;
  }
});
Object.defineProperty(exports, "toExtensionLess", {
  enumerable: true,
  get: function () {
    return path_1.toExtensionLess;
  }
});
Object.defineProperty(exports, "readdirR", {
  enumerable: true,
  get: function () {
    return path_1.readdirR;
  }
});
function asserts(expr, message) {
  if (!expr) {
    throw new Error(message);
  }
  return true;
}
exports.asserts = asserts;
function isThenable(value) {
  // https://stackoverflow.com/a/53955664/10602525
  return Boolean(value && typeof value.then === 'function');
}
exports.isThenable = isThenable;