import { StatsQuery } from "../../../stats-query/lib/index";
import ConstantManager = StatsQuery.ConstantManager;
export declare namespace EngineBuilder {
  interface IBuildOptions {
    root: string;
    features?: string[];
    platform: ConstantManager.PlatformType;
    mode: ConstantManager.ModeType;
    flagConfig: Partial<ConstantManager.IFlagConfig>;
    outDir?: string;
  }
  interface IBuildResult {
    [outputFile: string]: IHandleResult;
  }
  interface IHandleResult {
    code: string;
    file: string;
    originalId: string;
    resolvedId: string;
    map: any;
  }
  interface ITransformResult {
    code: string;
    map?: any;
  }
}
export declare class EngineBuilder {
  private _options;
  private _moduleQuery;
  private _entries;
  private _entriesForPass2;
  private _virtual2code;
  private _virtualOverrides;
  private _buildTimeConstants;
  private _moduleOverrides;
  private _buildResult;
  private _resolveExtension;
  private _renameMap;
  private _fieldDecoratorHelper;
  private _plugins;
  private _excludeTransform;
  private _handledCache;
  build(options: EngineBuilder.IBuildOptions): Promise<EngineBuilder.IBuildResult>;
  private _initPlugins;
  private _initOptions;
  private _handleId;
  private _getOverrideId;
  private _resolve;
  private _resolveRelative;
  private _load;
  private _getDepIdList;
  private _transform;
  private _buildIndex;
  private _copyTypes;
  private _requireEngineModules;
}