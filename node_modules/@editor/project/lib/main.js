"use strict";const{existsSync:existsSync,readFileSync:readFileSync}=require("fs"),{join:join,basename:basename}=require("path"),ipc=require("@base/electron-base-ipc"),{EventEmitter:EventEmitter}=require("events"),pkg=require("../package.json"),ipcFlag=`${pkg.name}@${pkg.version}`;let loadProject=function(e){const t={path:e,name:basename(e),validity:!0,type:"unknown",ctime:(new Date).getTime(),otime:-1};existsSync(e)||(t.validity=!1);const i=join(e,"package.json");if(existsSync(i))try{const e=JSON.parse(readFileSync(i,"utf8"));t.type=e.type,t.name=e.name||t.name}catch(e){t.validity=!1}else t.validity=!1;return t};class ProjectManager extends EventEmitter{constructor(){super(),this.path2pkg=Object.create(null)}init(e){if(1!==e.version)return;e.projects.forEach(e=>{this.path2pkg[e.path]=e}),this.emit("init"),ipc.broadcast(`${ipcFlag}:emit`,"init")}dump(){return{version:1,projects:Object.keys(this.path2pkg).map(e=>this.path2pkg[e])}}setOpenHandler(e){"function"==typeof e?this.openHandler=e:console.warn("The setOpenHandler must pass in the function.")}add(e){if(this.path2pkg[e])return void console.warn("The project already exists and does not need to be repeated.");let t=loadProject(e);this.path2pkg[e]=t,this.emit("add",e),ipc.broadcast(`${ipcFlag}:emit`,"add",e)}remove(e){this.path2pkg[e]?(delete this.path2pkg[e],this.emit("remove",e),ipc.broadcast(`${ipcFlag}:emit`,"remove",e)):console.warn("There is no corresponding project.")}open(e){if(!this.openHandler)return void console.warn("openHandler is not defined. please use 'setOpenHandler(func)'.");const t=!!this.path2pkg[e],i=loadProject(e);this.path2pkg[e]=i,i.otime=(new Date).getTime(),t&&(this.emit("add",e),ipc.broadcast(`${ipcFlag}:emit`,"add",e)),this.openHandler(e),this.emit("open",e),ipc.broadcast(`${ipcFlag}:emit`,"open",e)}query(e){e&&"object"==typeof e||(e={}),"otime"!==e.sort&&"ctime"!==e.sort&&(e.sort="otime"),"desc"!==e.order&&"asc"!==e.order&&(e.order="desc");let t=Object.keys(this.path2pkg).map(e=>this.path2pkg[e]);return e.type&&(t=t.filter(t=>t.type===e.type)),e.name&&(t=t.filter(t=>t.name===e.name)),t.sort((t,i)=>"desc"===e.order?i[e.sort]-t[e.sort]:t[e.sort]-i[e.sort]),t}}module.exports=new ProjectManager,ipc.on(`${ipcFlag}:call`,(e,t,...i)=>{if(module.exports[t])return module.exports[t](...i)});