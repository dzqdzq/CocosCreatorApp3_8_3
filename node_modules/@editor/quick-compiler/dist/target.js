"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectChangedFiles = void 0;
const file_uid_1 = require("./file-uid");
async function detectChangedFiles({ rootDir, entries, targetRecord, bundler, fsCache, }) {
    const startupFilesToAudit = entries.concat(Object.keys(targetRecord.files));
    const filesToAudit = new Set();
    await Promise.all(startupFilesToAudit.map(async (startupFile) => {
        const delFromRecord = () => delete targetRecord.files[startupFile];
        if (!(0, file_uid_1.isVirtualFileUid)(startupFile)) {
            if (!(await fsCache.pathExists(startupFile))) {
                delFromRecord();
                return;
            }
            const fileStat = await fsCache.stat(startupFile);
            const fileTime = fileStat.mtimeMs;
            if (!(startupFile in targetRecord.files) ||
                targetRecord.files[startupFile].fileTime !== fileTime ||
                Object.values(targetRecord.files[startupFile].dependencies).some((resolveRecord) => !resolveRecord.resolved)) {
                filesToAudit.add(startupFile);
                delFromRecord();
                return;
            }
        }
        if (!(await bundler.isOutFileValid(startupFile))) {
            filesToAudit.add(startupFile);
            delFromRecord();
            return;
        }
    }));
    return Array.from(filesToAudit);
}
exports.detectChangedFiles = detectChangedFiles;
//# sourceMappingURL=target.js.map