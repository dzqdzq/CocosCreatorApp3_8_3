{"version":3,"file":"concat-bundler.js","sourceRoot":"","sources":["../src/concat-bundler.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs-extra';\nimport ps from 'path';\nimport { CacheTransformed } from './cache-transformed';\nimport ConcatWithSourceMaps from 'concat-with-sourcemaps';\nimport { IBundler, TransformTargetModule } from './bundler';\nimport { IndexedSourceMap } from './indexed-source-map';\nimport { RawSourceMap } from 'source-map';\nimport { pathToFileURL } from 'url';\nimport RelateURl from 'relateurl';\n\nclass RegularConcat {\n    constructor({\n        file,\n        separator,\n    }: {\n        file: string,\n        separator?: string,\n    }) {\n        this._concat = new ConcatWithSourceMaps(true, file, separator);\n    }\n\n    get code() {\n        return this._concat.content.toString('utf8');\n    }\n\n    get sourceMap() {\n        return this._concat.sourceMap!.toString();\n    }\n\n    public add(code: string | Buffer, map?: RawSourceMap) {\n        this._concat.add(null, code, map as any);\n    }\n\n    private _concat: ConcatWithSourceMaps;\n}\n\n\ntype ConcatTool = RegularConcat | IndexedSourceMap;\n\nexport class ConcatBundler extends CacheTransformed implements IBundler {\n    constructor(options: ConstructorParameters<typeof CacheTransformed>[0] & {\n        format: 'commonjs' | 'systemjs',\n    }) {\n        super(options);\n        this.targetMode = (options.format === 'commonjs') ?\n            TransformTargetModule.commonJs : TransformTargetModule.systemJsNamed;\n    }\n\n    targetMode = TransformTargetModule.systemJsNamed;\n\n    getModuleId(path: string) {\n        return this._getModuleIdOfOutFile(this.getRelativeOutputPath(path));\n    }\n\n    getFinalUrl(path: string) {\n        return this.getModuleId(path);\n    }\n\n    public async build({\n        outDir,\n        usedInElectron509,\n        sourceRoot,\n        inlineSourceMap,\n        indexedSourceMap: useIndexedSourceMap,\n    }: Parameters<IBundler['build']>[0]) {\n        const outFile = ps.join(outDir, 'index.js');\n        const concat: ConcatTool = new (useIndexedSourceMap ? IndexedSourceMap : RegularConcat)({\n            file: outFile,\n            separator: '\\n',\n        });\n\n        const outURL = pathToFileURL(outFile);\n        if (this.targetMode === TransformTargetModule.commonJs) {\n            await this._concatToCommonJs(concat, outURL);\n        } else {\n            await this._concatToSystemJs(concat, outURL);\n        }\n\n        let sourceMapPromise: undefined | Promise<void>;\n        if (inlineSourceMap) {\n            concat.add(`//# sourceMappingURL=data:application/json;base64,${Buffer.from(concat.sourceMap).toString('base64')}`);\n        } else {\n            const sourceMapFile = `${ps.basename(outFile)}.map`;\n            const sourceMapFileFullPath = ps.join(ps.dirname(outFile), sourceMapFile);\n            const sourceMappingUrl = usedInElectron509 ?\n                pathToFileURL(sourceMapFileFullPath).href :\n                sourceMapFile;\n            concat.add(`//# sourceMappingURL=${sourceMappingUrl}`);\n            const sourceMapText = concat.sourceMap;\n            // const hack509 = (sourceMap: any) => {\n            //     // Electron 5.0.9 require path\n            //     // sourceMap.file = outFile;\n            //     // Do not include sources in source map\n            //     delete sourceMap.sourcesContent;\n            //     return sourceMap;\n            // };\n            // const sourceMapText = usedInElectron509\n            //     ? JSON.stringify(hack509(JSON.parse(concat.sourceMap)), undefined, 2)\n            //     : JSON.stringify(Object.assign({ sourceRoot: `${pathToFileURL(sourceRoot)}/` }, JSON.parse(concat.sourceMap)));\n            sourceMapPromise = fs.outputFile(\n                sourceMapFileFullPath,\n                sourceMapText,\n                { encoding: 'utf8' },\n            );\n        }\n        await Promise.all([\n            fs.outputFile(outFile, concat.code, { encoding: 'utf8' }),\n            sourceMapPromise,\n        ]);\n    }\n\n    private async _concatToCommonJs(concat: ConcatTool, outURL: URL) {\n        wrapBigIIFEPre();\n\n        await this.forEachModule(async (path, code, map, mapURL) => {\n            if (map && mapURL) {\n                relocateSourceFilePaths(map, mapURL, outURL);\n            }\n            wrapIIFEPre(this._getModuleIdOfOutFile(path));\n            concat.add(/*path, */code, map);\n            wrapIIFEPost();\n        });\n\n        wrapBigIIFEPost();\n\n        function wrapBigIIFEPre() {\n            concat.add(`\\\nmodule.exports = (function(){ return {\n`);\n        }\n\n        function wrapBigIIFEPost() {\n            concat.add(`\\\n}; })();`);\n        }\n\n        function wrapIIFEPre(path: string) {\n            concat.add(`['${path}']: (function(exports, require){`);\n        }\n\n        function wrapIIFEPost() {\n            concat.add(`}),`);\n        }\n    }\n\n    private async _concatToSystemJs(concat: ConcatTool, outURL: URL) {\n        await this.forEachModule(async (path, code, map, mapURL) => {\n            if (map && mapURL) {\n                relocateSourceFilePaths(map, mapURL, outURL);\n            }\n            concat.add(/*path, */code, map);\n        });\n    }\n\n    protected _getModuleIdOfOutFile(relativeOutPath: string) {\n        const parts = relativeOutPath.split(/[\\\\/]/g);\n        return `q-bundled:///${parts.map((part) => encodeURIComponent(part)).join('/')}`;\n    }\n}\n\nfunction relocateSourceFilePaths(\n    sourceMap: RawSourceMap,\n    sourceMapURL: URL,\n    newSourceMapURL: URL,\n) {\n    if (!sourceMap.sources) {\n        return;\n    }\n    const sources = sourceMap.sources;\n\n    const resolveRelative = new RelateURl(newSourceMapURL.href);\n    sources.map((source, iSource) => {\n        const sourceURL = new URL(source, sourceMapURL);\n        const resolved = resolveRelative.relate(sourceURL.href);\n        sources[iSource] = resolved;\n    });\n\n    return sourceMap;\n}\n"]}