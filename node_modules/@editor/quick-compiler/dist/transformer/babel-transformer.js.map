{"version":3,"file":"babel-transformer.js","sourceRoot":"","sources":["../../src/transformer/babel-transformer.ts"],"names":[],"mappings":"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","sourcesContent":["import { ScriptTargets, Transformer, TransformOptions, TransformResult } from \"./transformer\";\nimport * as babel from '@babel/core';\nimport babelPresetEnv from '@babel/preset-env';\n// @ts-ignore\nimport babelPluginConstEnum from 'babel-plugin-const-enum';\n// @ts-ignore\nimport babelPluginTransformModulesUmd from '@babel/plugin-transform-modules-umd';\n// @ts-ignore\nimport babelPluginTransformModulesSystemJs from '@babel/plugin-transform-modules-systemjs';\n// @ts-ignore\nimport babelPluginTransformModulesCommonJs from '@babel/plugin-transform-modules-commonjs';\n// @ts-ignore\nimport babelPluginProposalDynamicImport from '@babel/plugin-proposal-dynamic-import';\nimport babelPluginDynamicVars from '@cocos/babel-plugin-dynamic-import-vars';\nimport { TransformTargetModule } from \"../bundler\";\nimport winston from 'winston';\nimport { makeVisitorOnModuleSpecifiers } from '../module-specifier-visitor';\nimport { importHelperPlugin } from '../bundled-helpers-plugin';\nimport { babelPresetCC } from '@cocos/creator-programming-babel-preset-cc'\nimport { ConfigInterface } from \"@cocos/ccbuild\";\n\nexport class BabelTransformer implements Transformer {\n    public static buildHelper(): string {\n        // @ts-ignore\n        return babel.buildExternalHelpers(null, 'module');\n    }\n\n    constructor({\n        targets,\n        loose,\n        targetModule,\n        logger,\n        optimizeDecorators,\n    }: {\n        targets: ScriptTargets | undefined;\n        loose: boolean;\n        targetModule: TransformTargetModule;\n        logger: winston.Logger;\n        optimizeDecorators: ConfigInterface.IOptimizeDecorators,\n    }) {\n        this._loose = loose;\n        this._targets = targets;\n        this._targetModule = targetModule;\n        this._logger = logger;\n        this._optimizeDecorators = optimizeDecorators;\n    }\n\n    public async transform(source: string, options: TransformOptions): Promise<TransformResult> {\n        const {\n            _logger,\n        } = this;\n\n        const {\n            fileName,\n            isFile,\n            sourceFileName,\n            moduleId,\n            replaceModuleSpecifier,\n            isBabelHelper,\n        } = options;\n\n        const sourceMaps = !!sourceFileName;\n\n        const targetModule = this._targetModule;\n        const babelOptionsBase: babel.TransformOptions = {\n            moduleIds: targetModule === TransformTargetModule.systemJsNamed,\n            moduleId,\n            filename: fileName,\n            sourceMaps,\n            sourceFileName,\n\n            configFile: false,\n            babelrc: false,\n        };\n        const addTransformModulesPlugin = (plugins: any[]) => {\n            if (targetModule === TransformTargetModule.umd) {\n                plugins.push([babelPluginTransformModulesUmd]);\n            } else if (targetModule === TransformTargetModule.commonJs) {\n                plugins.push([babelPluginTransformModulesCommonJs]);\n            } else if (targetModule === TransformTargetModule.systemJs || targetModule === TransformTargetModule.systemJsNamed) {\n                plugins.push([babelPluginTransformModulesSystemJs]);\n            }\n            return plugins;\n        };\n\n        if (isBabelHelper) {\n            const babelFileResult = await babel.transformAsync(source, {\n                ...babelOptionsBase,\n                plugins: [\n                    [babelPluginConstEnum, { transform: 'constObject' }]\n                ].concat(addTransformModulesPlugin([])),\n            });\n            if (!babelFileResult) {\n                throwUnexpectedBabelError();\n            } else {\n                return {\n                    code: babelFileResult.code!,\n                };\n            }\n        }\n\n        // const helperModuleRequest = getModuleRequestTo(babelHelpersModuleUid);\n\n        let resolveModuleSpecifier: babel.PluginObj | undefined;\n\n        if (replaceModuleSpecifier) {\n            // Resolves them and record the useful information.\n            const moduleSpecifierResolveMap: Record<string, string> = {};\n\n            const processModuleSpecifier = (moduleSpecifier: string) => {\n                const replacement = replaceModuleSpecifier(moduleSpecifier);\n                if (replacement) {\n                    moduleSpecifierResolveMap[moduleSpecifier] = replacement;\n                }\n            };\n            resolveModuleSpecifier = {\n                visitor: makeVisitorOnModuleSpecifiers((moduleSpecifierPath) => {\n                    const moduleSpecifier = moduleSpecifierPath.node.value;\n                    processModuleSpecifier(moduleSpecifier);\n                    // An in-place babel plugin which apply the resolve result.\n                    if (moduleSpecifier in moduleSpecifierResolveMap) {\n                        moduleSpecifierPath.replaceWith(babel.types.stringLiteral(moduleSpecifierResolveMap[moduleSpecifier]));\n                    }\n                }),\n            };\n        }\n\n        // 2020.10.10: esbuild will treat empty files(not using es6 features) as commonjs modules.\n        // 1. for commonjs modules, esbuild will generate strange _commonjs wrapper to handle.\n        // 2. If a module (transitively) export star from commonjs modules, the module is\n        // treated as commonjs module and will only export a default binding.\n        const injectEmptyExportStmt: babel.PluginObj = {\n            visitor: { Program: { exit: (path) => {\n                if (path.node.body.length === 0) {\n                    path.node.body.push(\n                        babel.types.exportNamedDeclaration(\n                            undefined,\n                            [],\n                        ));\n                }\n            } } },\n        };\n\n        const transformCodePassResult = await babel.transformAsync(source, {\n            ...babelOptionsBase,\n            presets: [\n                [{ plugins: [\n                    [babelPluginConstEnum, { transform: 'constObject' }],\n                    [babelPluginProposalDynamicImport],\n                ] }],\n                [babelPresetEnv, {\n                    modules: false,\n                    targets: this._targets,\n                    loose: this._loose,\n                } as babelPresetEnv.Options],\n                [{ plugins: [\n                    [injectEmptyExportStmt],\n                    [babelPluginDynamicVars],\n                    [resolveModuleSpecifier], // Resolve module specifiers\n                    ...addTransformModulesPlugin([]),\n                ] }],\n                [babelPresetCC, {\n                    allowDeclareFields: true,\n                    ccDecoratorHelpers: 'inline',\n                    fieldDecorators: this._optimizeDecorators.fieldDecorators,\n                } as babelPresetCC.Options],\n                [{ plugins: [\n                    // [importHelperPlugin, { helperModuleName: helperModuleRequest }],\n                ] }],\n            ],\n        });\n\n        if (!transformCodePassResult || !transformCodePassResult.code) {\n            throwUnexpectedBabelError();\n        }\n\n        if (transformCodePassResult.map?.sourcesContent) {\n            if (isFile) {\n                delete transformCodePassResult.map.sourcesContent;\n            }\n        }\n\n        return {\n            code: transformCodePassResult.code!,\n            map: transformCodePassResult.map? JSON.stringify(transformCodePassResult.map) : undefined,\n        };\n\n        function throwUnexpectedBabelError(): never {\n            throw new Error(`Babel returned empty result`);\n        }\n    }\n\n    private _targetModule: TransformTargetModule;\n    private _targets: ScriptTargets | undefined;\n    private _loose: boolean;\n    private _logger: winston.Logger;\n    private _optimizeDecorators: ConfigInterface.IOptimizeDecorators;\n}"]}