{"version":3,"file":"bundle-externals.js","sourceRoot":"","sources":["../src/bundle-externals.ts"],"names":[],"mappings":"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","sourcesContent":["import { OutputOptions, Plugin, rollup, RollupOptions, WarningHandlerWithDefault } from 'rollup';\nimport rpBabel, { RollupBabelInputPluginOptions } from '@rollup/plugin-babel';\n// @ts-ignore\nimport rpSourcemaps from 'rollup-plugin-sourcemaps';\nimport { terser } from 'rollup-plugin-terser';\nimport rpCommonJS from '@rollup/plugin-commonjs';\nimport rpNodeResolve from '@rollup/plugin-node-resolve';\n// @ts-ignore\nimport babelPresetEnv from '@babel/preset-env';\nimport UUID from 'node-uuid';\nimport { encodeUrlAsFilePath } from './utilts';\nimport fs from 'fs';\n\nexport interface ImportMap {\n    imports?: Record<string, string>;\n    scopes?: Record<string, Record<string, string>>;\n}\n\nexport interface BundleExternalsOptions {\n    perf?: boolean;\n\n    rootDir: string;\n}\n\nexport interface BundleResult {\n    /**\n     * Key is the entry, value is the relative url from chunkDir.\n     */\n    entryMap: Record<string, string>;\n\n    watchFiles: string[];\n}\n\nexport async function bundleExternals(entries: [string, string][], options: BundleExternalsOptions) {\n    // const withSourceMap = options.sourceMap;\n    // const doMinify = options.minify;\n\n    const realpath = typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n    const realPath = (file: string) => new Promise<string>((resolve, reject) => {\n        realpath(file, function (err, path) {\n            if (err && err.code !== 'ENOENT') {\n                reject(err);\n            } else {\n                resolve(err ? file : path);\n            }\n        });\n    });\n\n    const rollupWarningHandler: WarningHandlerWithDefault = (warning, defaultHandler) => {\n        if (typeof warning !== 'string') {\n            if (warning.code === 'THIS_IS_UNDEFINED') {\n                // TODO: It's really inappropriate to do this...\n                // Let's fix these files instead of suppressing rollup.\n                if (warning.id?.match(/(?:spine-core\\.js$)|(?:dragonBones\\.js$)/)) {\n                    console.debug(`Rollup warning 'THIS_IS_UNDEFINED' is omitted for ${warning.id}`);\n                    return;\n                }\n            }\n        }\n\n        defaultHandler(warning);\n    };\n\n    const rollupPlugins: Plugin[] = [\n        rpNodeResolve({\n            jail: await realPath(options.rootDir),\n            rootDir: options.rootDir,\n        }),\n        rpCommonJS({\n            include: [\n                /node_modules[/\\\\]/,\n                /asm\\.js/,\n            ],\n            sourceMap: false, // Save performance\n        }),\n        rpBabel({\n            babelHelpers: 'bundled',\n            overrides: [{\n                // Eliminates the babel compact warning:\n                // 'The code generator has deoptimised the styling of ...'\n                // that came from node_modules/@cocos\n                test: /node_modules[/\\\\]@cocos[/\\\\]/,\n                compact: true,\n            }],\n            exclude: [\n                /node_modules[/\\\\]@cocos[/\\\\]ammo/,\n                /node_modules[/\\\\]@cocos[/\\\\]cannon/,\n                /node_modules[/\\\\]@cocos[/\\\\]physx/,\n                /asm\\.js/,\n            ],\n            presets: [\n                babelPresetEnv,\n            ],\n        } as RollupBabelInputPluginOptions),\n        // rpSourcemaps,\n    ];\n    // if (doMinify) {\n    //     rollupPlugins.push(terser);\n    // }\n\n    const entryMap: Record<string, string> = {};\n    const rollupInput: Record<string, string> = {};\n    for (const [entry, nameHint] of entries) {\n        const entryChunkUUID = nameHint.split(/[\\\\/]/g).map((part) => encodeUrlAsFilePath(part)).join('/');\n        entryMap[entry] = `${entryChunkUUID}.js`;\n        rollupInput[entryChunkUUID] = entry;\n    }\n\n    const rollupOptions: RollupOptions = {\n        input: rollupInput,\n        plugins: rollupPlugins,\n        perf: options.perf,\n        onwarn: rollupWarningHandler,\n    };\n\n    const rollupBuild = await rollup(rollupOptions);\n    if (rollupBuild.getTimings) {\n        console.debug(rollupBuild.getTimings());\n    }\n    const watchFiles = rollupBuild.watchFiles.slice();\n\n    return {\n        entryMap,\n        watchFiles,\n        write: async (writeOptions: {\n            minify?: boolean;\n            sourceMap?: boolean;\n            format: 'commonjs' | 'systemjs';\n            chunkDir: string;\n        }) => {\n            const rollupOutputOptions: OutputOptions = {\n                format: writeOptions.format === 'systemjs' ? 'system' : (writeOptions.format),\n                sourcemap: writeOptions.sourceMap,\n                dir: writeOptions.chunkDir,\n                exports: 'auto',\n            };\n\n            await rollupBuild.write(rollupOutputOptions);\n        },\n    };\n}\n"]}