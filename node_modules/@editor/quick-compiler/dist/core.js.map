{"version":3,"file":"core.js","sourceRoot":"","sources":["../src/core.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport fs from 'fs-extra';\nimport ps from 'path';\nimport { ModuleResolver, replaceWithOutputExtension } from '@editor/transform-utilities/dist/module-resolve';\nimport { moduleSpecifierURLRelative } from '@editor/transform-utilities/dist/path-url-interop';\nimport { pathToFileURL } from 'url';\nimport * as jss from 'javascript-stringify';\nimport type { FileUid } from './file-uid';\nimport { decodeVirtualFileUid, isVirtualFileUid, encodeVirtualFileUid, decodeRegularFilePath } from './file-uid';\nimport { VirtualModules } from './virtual-modules';\nimport { FileRecord } from './file-record';\nimport { SourceMapOptions } from './source-map-options';\nimport { bundleExternals } from './bundle-externals';\nimport { IBundler, TransformTargetModule } from './bundler';\nimport { TargetRecord } from './target';\nimport { FsCache } from './fs-cache';\nimport { ProgressMessage, Stage, TransformStageMessage } from './progress';\nimport { sequenceDiscarding } from './seq';\nimport winston from 'winston';\nimport RelateURl from 'relateurl';\nimport { Modularize, StatsQuery } from '@cocos/ccbuild';\nimport { TransformResult } from './transformer/transformer';\nimport { BabelTransformer } from './transformer/babel-transformer';\n\ntype FileId = FileUid;\n\nexport type Platform = 'HTML5' | 'NATIVE';\n\nconst externalProtocol = 'external:';\n\nexport interface TargetOptions extends SourceMapOptions {\n    /**\n     * 加到功能模块的前缀。\n     */\n    featureUnitPrefix?: string;\n\n    /**\n     * 是否包含引擎 `editor/exports` 下的模块。\n     */\n    includeEditorExports?: boolean;\n\n    /**\n     * `'cc'` 模块的内容。\n     */\n    includeIndex?: {\n        features: string[];\n    };\n\n    /**\n     * 输出目录。\n     */\n    dir: string;\n\n    /**\n     * 输出格式。\n     */\n    format: 'commonjs' | 'systemjs';\n\n    /**\n     * 宽松模式.\n     */\n    loose?: boolean;\n\n    loader?: boolean;\n\n    /**\n     * BrowsersList targets.\n     */\n    targets?: string | string[] | Record<string, string>;\n    perf?: boolean;\n}\n\nexport interface OutputProfile {\n    importMap: ImportMap & { imports: NonNullable<ImportMap['imports']> };\n    importMapFile: string;\n    chunkDir: string;\n}\n\nexport async function core({\n    rootDir,\n    statsQuery,\n    entries,\n    targetOptions,\n    targetRecord,\n    bundler,\n    chunkDir,\n    fsCache,\n    vm,\n    logger,\n    onProgress,\n    platform = 'HTML5',\n}: {\n    rootDir: string;\n    statsQuery: StatsQuery;\n    entries: FileUid[];\n    targetOptions: TargetOptions;\n    targetRecord: TargetRecord;\n    bundler: IBundler;\n    chunkDir: string;\n    fsCache: FsCache;\n    vm?: VirtualModules;\n    logger: winston.Logger,\n    onProgress?: (message: Readonly<ProgressMessage>) => void;\n    platform: Platform,\n}) {\n    const babelHelpersModuleName = 'quick-compiler.babel-helpers';\n    const babelHelpersModuleUid = encodeVirtualFileUid(babelHelpersModuleName);\n    const moduleQuery = new Modularize.ModuleQuery({\n        engine: rootDir,\n        platform: 'WEB_EDITOR',\n    });\n    const moduleExportMap = await moduleQuery.getExportMap();\n\n    const virtualModules = vm ?? new VirtualModules();\n    await setupVirtualModules(platform);\n\n    const moduleResolver = new ModuleResolver({\n        rootDir,\n    });\n\n    // Do audition.\n    const audition: {\n        audited: Set<string>;\n    } = { audited: new Set() };\n\n    const transformProgress: TransformStageMessage = {\n        stage: Stage.transform,\n        total: 0,\n        progress: 0,\n        file: '',\n    };\n\n    const updateTransformProgress = onProgress\n        ? () => onProgress(transformProgress)\n        : undefined;\n\n    await main();\n\n    async function main() {\n        await Promise.all(entries.concat(\n            [babelHelpersModuleUid],\n        ).map(\n            (fileUid) => audit(fileUid),\n        ));\n\n        if (await rebuildExternalDependenciesIsNeeded()) {\n            onProgress?.({\n                stage: Stage.external,\n            });\n            await createExternalDependenciesStuffs();\n        }\n    }\n\n    async function setupVirtualModules(platform: Platform) {\n        const dynamicConstants = statsQuery.constantManager.exportDynamicConstants({\n            // platform and mode are dynamic values, indeed we don't have to pass these value.\n            platform,\n            mode: 'PREVIEW',\n            flags: {\n                DEBUG: true,\n                CULL_MESHOPT: false, // NOTE: CULL_MESHOPT should be disabled in 'editor' and 'preview' engine, it should only impact 'Build' result.\n            },\n        });\n        virtualModules.set(\n            'internal:constants',\n            () => dynamicConstants,\n        );\n\n        virtualModules.set(\n            babelHelpersModuleName,\n            () => {\n                return BabelTransformer.buildHelper();\n            },\n        );\n\n    }\n\n    /**\n     * @param fileUid\n     */\n    async function audit(fileUid: FileId) {\n        if (audition.audited.has(fileUid)) {\n            return;\n        }\n        audition.audited.add(fileUid);\n\n        if (fileUid in targetRecord.files) {\n            return;\n        }\n\n        let source: string;\n        let fileTime = 0;\n        const isVirtual = isVirtualFileUid(fileUid);\n        if (isVirtual) {\n            const name = decodeVirtualFileUid(fileUid);\n            if (!virtualModules.has(name)) {\n                logger.error(`Can not find module(virtual): ${name}`);\n                return;\n            }\n            source = virtualModules.get(name);\n        } else {\n            fileTime = (await fsCache.stat(fileUid)).mtimeMs;\n            source = await fsCache.readFile(fileUid);\n            if (fileUid.toLowerCase().endsWith('.json')) {\n                // Because AMD (which is our engine code format, in editor or previewer)\n                // is not able to import a json module, in [SystemJS](https://github.com/systemjs/systemjs/issues/2045).\n                // We should transform the json module here.\n                source = `export default ${jss.stringify(JSON.parse(source), undefined, 2)}`;\n            }\n        }\n\n        // Update total\n        ++transformProgress.total;\n        transformProgress.file = fileUid;\n        updateTransformProgress?.();\n        transformProgress.file = '';\n        logger.debug(`[QuickCompiler] Transforming ${fileUid}...`);\n\n        const newFileRecord: FileRecord = {\n            fileTime,\n            dependencies: {},\n            status: false,\n        };\n        targetRecord.files[fileUid] = newFileRecord;\n\n        const transformResult = await (async () => {\n            try {\n                return await compileFile(source, fileUid, newFileRecord, bundler);\n            } catch (err) {\n                logger.error(err);\n                return;\n            }\n        })();\n        newFileRecord.status = !!transformResult;\n\n        // Update progress\n        ++transformProgress.progress;\n        updateTransformProgress?.();\n\n        const store = !transformResult ? undefined :\n            bundler.store(fileUid, transformResult.code, transformResult.map);\n\n        await store;\n        await sequenceDiscarding(\n            Object.entries(newFileRecord.dependencies).reduce((result, [_moduleSpecifier, resolveRecord]) => {\n                if (!resolveRecord.external && resolveRecord.resolved) {\n                    result.push(resolveRecord.resolved);\n                }\n                return result;\n            }, [] as string[]),\n            async (dependency) => await audit(dependency),\n        );\n    }\n\n    /**\n     * @param source\n     * @param fileUid\n     * @param record\n     */\n    async function compileFile(source: string, fileUid: string, record: FileRecord, bundler: IBundler): Promise<TransformResult> {\n        const targetModule = bundler.targetMode ?? TransformTargetModule.esm;\n        const targets = targetOptions.targets;\n        const loose = targetOptions.loose ?? false;\n        const optimizeDecorators = statsQuery.getOptimizeDecorators();\n        const transformer = new BabelTransformer({\n            targets,\n            loose,\n            targetModule,\n            logger,\n            optimizeDecorators,\n        });\n\n        const outFileURL = bundler.getOutFileUrl(fileUid);\n        const resolveRelativeFromOutFile = new RelateURl(outFileURL);\n\n        let fileName: string | undefined;\n        let sourceFileName: string | undefined;\n        let isFile = false;\n        if (isVirtualFileUid(fileUid)) {\n            sourceFileName = `virtual:///${decodeVirtualFileUid(fileUid)}`;\n        } else {\n            fileName = ps.resolve(rootDir, decodeRegularFilePath(fileUid));\n            isFile = true;\n            const fileURL = pathToFileURL(fileName);\n            if (targetOptions.usedInElectron509) {\n                sourceFileName = fileURL.href;\n            } else {\n                sourceFileName = resolveRelativeFromOutFile.relate(fileURL.href);\n            }\n        }\n\n        const moduleId = bundler.getModuleId?.(fileUid) ?? fileUid;\n\n        const getModuleRequestTo = (targetFileUid: string) => moduleSpecifierURLRelative(\n            outFileURL,\n            bundler.getOutFileUrl(targetFileUid),\n        );\n\n        const readDepRecord = (moduleSpecifier: string): string | undefined => {\n            if (!(moduleSpecifier in record.dependencies)) {\n                return undefined;\n            }\n            const resolveRecord = record.dependencies[moduleSpecifier];\n            if (resolveRecord.resolved && !resolveRecord.external) {\n                const replacement = replaceWithOutputExtension(getModuleRequestTo(resolveRecord.resolved));\n                return replacement;\n            } else {\n                return undefined;\n            }\n        };\n\n        const replaceModuleSpecifier = (moduleSpecifier: string): string | undefined => {\n            if (moduleSpecifier in record.dependencies) {\n                return readDepRecord(moduleSpecifier);\n            }\n\n            let resolvedModule: {\n                file: string;\n                isExternal: boolean;\n            } | null;\n            if (virtualModules.has(moduleSpecifier)) {\n                resolvedModule = {\n                    file: moduleSpecifier,\n                    isExternal: false,\n                };\n            }\n            else if (moduleSpecifier.startsWith(externalProtocol)) {\n                if (moduleSpecifier.endsWith('.wasm') || moduleSpecifier.endsWith('.js.mem') || moduleSpecifier.endsWith('.wasm.fallback')) {\n                    // for module ending with '.wasm' or '.js.mem', we only export an external url.\n                    virtualModules.set(\n                        moduleSpecifier,\n                        () => {\n                            return `export default '${moduleSpecifier}';`;\n                        },\n                    );\n                    resolvedModule = {\n                        file: moduleSpecifier,\n                        isExternal: false,\n                    };\n                } else {\n                    const externalInEngine = moduleSpecifier.replace(externalProtocol, 'native/external/');\n                    resolvedModule = {\n                        file: ps.join(rootDir, externalInEngine),\n                        isExternal: true,\n                    };\n                }\n            }\n            else if (!fileName) { // isVirtualFileUid(fileUid)\n                resolvedModule = {\n                    file: moduleSpecifier,\n                    isExternal: false,\n                };\n            }\n            else if (moduleExportMap[moduleSpecifier]) {\n                resolvedModule = {\n                    file: moduleExportMap[moduleSpecifier],\n                    isExternal: false,\n                };\n            }\n            else {\n                resolvedModule = moduleResolver.resolveSync(moduleSpecifier, fileName);\n                if (resolvedModule && !resolvedModule.isExternal) {\n                    const lower = resolvedModule.file.toLowerCase();\n                    if (lower.endsWith('.d.ts')) {\n                        // If a module is resolved to a declaration file.\n                        // We are trying to figure out the real code file.\n                        const baseName = resolvedModule.file.substr(0, resolvedModule.file.length - 5);\n                        let found = false;\n                        for (const extension of ['.js', '.json']) {\n                            const name = `${baseName}${extension}`;\n                            if (fs.pathExistsSync(name)) {\n                                resolvedModule.file = name;\n                                found = true;\n                                break;\n                            }\n                        }\n                        if (!found) {\n                            resolvedModule = null;\n                        }\n                    }\n                }\n            }\n\n            const resolveRecord: FileRecord['dependencies'][''] = record.dependencies[moduleSpecifier] = { resolved: undefined };\n            if (!resolvedModule) {\n                logger.debug(`Failed to resolve ${moduleSpecifier} from ${fileName}`);\n            } else if (resolvedModule.isExternal) {\n                resolveRecord.resolved = getDependencyFileId(resolvedModule.file);\n                resolveRecord.external = true;\n            } else {\n                const depFileId = getFileUidFromResolved(resolvedModule.file);\n                if (!depFileId) {\n                    logger.error(`File ${resolvedModule.file} referenced from ${fileName ?? fileUid} is not under source root.`);\n                } else {\n                    resolveRecord.resolved = depFileId;\n                }\n            }\n\n            return readDepRecord(moduleSpecifier);\n        };\n\n        return await transformer.transform(source, {\n            fileName,\n            sourceFileName,\n            isFile,\n            moduleId,\n            replaceModuleSpecifier,\n            isBabelHelper: fileUid === babelHelpersModuleUid,\n        });\n    }\n\n    /**\n     *\n     */\n    function countExternalDependencies() {\n        const dependenciesMap: Record<string, string> = {};\n        for (const fileRecord of Object.values(targetRecord.files)) {\n            Object.assign(dependenciesMap, Object.entries(fileRecord.dependencies).reduce((result, [moduleSpecifier, resolveRecord]) => {\n                if (resolveRecord.external && resolveRecord.resolved) {\n                    result[moduleSpecifier] = resolveRecord.resolved;\n                }\n                return result;\n            }, {} as Record<string, string>));\n        }\n        return dependenciesMap;\n    }\n\n    /**\n     *\n     */\n    async function rebuildExternalDependenciesIsNeeded() {\n        /// / TODO!!!!! remove\n        // return true;\n\n        // eslint-disable-next-line no-constant-condition\n        if (true) {\n            const old = targetRecord.externalDependencies;\n            const now = countExternalDependencies();\n            const keysOld = Object.keys(old);\n            const keysNew = Object.keys(now);\n            if (keysOld.length !== keysNew.length ||\n                !keysOld.every((keyOld) => keysNew.includes(keyOld) && old[keyOld] === now[keyOld]) ||\n                !keysNew.every((keyNew) => keysOld.includes(keyNew))\n            ) {\n                logger.debug(`Dependencies changed from ${JSON.stringify(old, undefined, 2)} to ${JSON.stringify(now, undefined, 2)}`);\n                return true;\n            }\n        }\n\n        // 任何外部依赖文件更新了，都需要重新构建。\n        for (const file of Object.keys(targetRecord.externalDependencyWatchFiles)) {\n            const stamp = targetRecord.externalDependencyWatchFiles[file];\n            try {\n                const stat = await fs.stat(getDependencyFile(file));\n                if (stat.mtimeMs !== stamp) {\n                    logger.debug(`[QuickCompiler] External dependency \"${file}\" changed.`);\n                    return true;\n                }\n            } catch {\n                logger.debug(`[QuickCompiler] Miss external dependency \"${file}\".`);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param chunkDir\n     * @param importMapFile\n     */\n    async function createExternalDependenciesStuffs() {\n        targetRecord.externalDependencyWatchFiles = {};\n        targetRecord.externalDependencyImportMap = {};\n\n        const dependenciesMap = countExternalDependencies();\n\n        const dependenciesMapResolved: typeof dependenciesMap = {};\n        for (const key of Object.keys(dependenciesMap)) {\n            dependenciesMapResolved[key] = getDependencyFile(dependenciesMap[key]);\n        }\n\n        const dependencyEntries = Object.entries(dependenciesMapResolved).map(([k, v]): [string, string] => [v, k]);\n        logger.debug(`Bundling external dependencies: ${JSON.stringify(dependenciesMapResolved, undefined, 2)}`);\n\n        const bundleResult = await bundleExternals(dependencyEntries, {\n            rootDir,\n            perf: targetOptions.perf,\n        });\n\n        if (await fs.pathExists(chunkDir)) {\n            await fs.emptyDir(chunkDir);\n        }\n\n        await bundleResult.write({\n            format: targetOptions.format,\n            sourceMap: true,\n            chunkDir,\n        });\n\n        for (const moduleSpecifier of Object.keys(dependenciesMapResolved)) {\n            const entry = dependenciesMapResolved[moduleSpecifier];\n            const chunkRelativeURL = bundleResult.entryMap[entry].split(/[\\\\/]/g).map((part) => encodeURIComponent(part)).join('/');\n            targetRecord.externalDependencyImportMap[moduleSpecifier] = chunkRelativeURL;\n        }\n\n        const watchFiles: Record<string, number> = {};\n        for (const watchFile of bundleResult.watchFiles) {\n            try {\n                const stat = await fs.stat(watchFile);\n                watchFiles[getDependencyFileId(watchFile)] = stat.mtimeMs;\n            } catch {\n\n            }\n        }\n\n        targetRecord.externalDependencies = dependenciesMap;\n        targetRecord.externalDependencyWatchFiles = watchFiles;\n    }\n\n    /**\n     * @param moduleNameOrFile\n     */\n    function getFileUidFromResolved(moduleNameOrFile: string) {\n        if (virtualModules.has(moduleNameOrFile)) {\n            return encodeVirtualFileUid(moduleNameOrFile);\n        }\n        const relativeFromRoot = ps.relative(ps.join(rootDir), moduleNameOrFile);\n        if (relativeFromRoot.length === 0 ||\n            relativeFromRoot.startsWith('..') ||\n            ps.isAbsolute(relativeFromRoot)) {\n            return null;\n        } else {\n            return relativeFromRoot;\n        }\n    }\n\n    /**\n     * @param dependencyFile\n     */\n    function getDependencyFileId(dependencyFile: string) {\n        return ps.relative(rootDir, dependencyFile);\n    }\n\n    /**\n     * @param dependencyFileId\n     */\n    function getDependencyFile(dependencyFileId: string) {\n        return ps.resolve(rootDir, dependencyFileId);\n    }\n}\n"]}