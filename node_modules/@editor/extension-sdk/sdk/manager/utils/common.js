"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.recursiveChmod = exports.getFileMd5 = exports.formatPath = void 0;
const path_1 = require("path");
const crypto_1 = require("crypto");
const fs_extra_1 = require("fs-extra");
const formatPath = (customPath) => {
    return customPath.split(path_1.sep).join('/');
};
exports.formatPath = formatPath;
const getFileMd5 = (filePath) => {
    return new Promise((resolve) => {
        const md5sum = (0, crypto_1.createHash)('md5');
        const stream = (0, fs_extra_1.createReadStream)(filePath);
        stream.on('data', (chunk) => md5sum.update(chunk));
        stream.on('end', () => resolve(md5sum.digest('hex')));
    });
};
exports.getFileMd5 = getFileMd5;
const recursiveChmod = async (folderPath, mode) => {
    if (!folderPath)
        return;
    const fileStat = await (0, fs_extra_1.stat)(folderPath);
    if (fileStat.isDirectory()) {
        await (0, fs_extra_1.chmod)(folderPath, mode);
        const fileList = await (0, fs_extra_1.readdir)(folderPath);
        await Promise.all(fileList.map((item) => (0, exports.recursiveChmod)((0, path_1.join)(folderPath, item), mode)));
    }
    else {
        await (0, fs_extra_1.chmod)(folderPath, mode);
    }
};
exports.recursiveChmod = recursiveChmod;
