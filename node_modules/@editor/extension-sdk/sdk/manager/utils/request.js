"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cancelToken = exports.httpClient = exports.axiosInstance = exports.IServerResponseCode = void 0;
const provider_1 = require("./../provider");
const manager_constant_1 = require("./../manager.constant");
const axios_1 = __importDefault(require("axios"));
var IServerResponseCode;
(function (IServerResponseCode) {
    IServerResponseCode[IServerResponseCode["NORMAL"] = 0] = "NORMAL";
    IServerResponseCode[IServerResponseCode["ERROR"] = 1] = "ERROR";
})(IServerResponseCode = exports.IServerResponseCode || (exports.IServerResponseCode = {}));
exports.axiosInstance = axios_1.default.create({
    baseURL: manager_constant_1.DEFAULT_REMOTE_SOURCE,
    timeout: 5 * 60 * 1000,
});
exports.axiosInstance.interceptors.request.use((requestConfig) => {
    const domain = provider_1.Provider.getInstance().domain;
    if (domain)
        requestConfig.baseURL = domain;
    return requestConfig;
}, (err) => {
    console.log(err);
    return Promise.reject(err);
});
exports.axiosInstance.interceptors.response.use((response) => {
    const { data } = response;
    return data.status === IServerResponseCode.ERROR ? Promise.reject(data) : data;
}, (err) => {
    return Promise.reject(err);
});
exports.httpClient = exports.axiosInstance;
exports.cancelToken = axios_1.default.CancelToken;
