"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference types="../@types/core-js-builder" />
// @ts-ignore
var plugin_babel_1 = __importDefault(require("@rollup/plugin-babel"));
// @ts-ignore
var plugin_multi_entry_1 = __importDefault(require("@rollup/plugin-multi-entry"));
// @ts-ignore
var rollup_plugin_sourcemaps_1 = __importDefault(require("rollup-plugin-sourcemaps"));
var plugin_commonjs_1 = __importDefault(require("@rollup/plugin-commonjs"));
var plugin_node_resolve_1 = __importDefault(require("@rollup/plugin-node-resolve"));
var rollup_plugin_terser_1 = require("rollup-plugin-terser");
var rollup_1 = require("rollup");
var tmp_1 = __importDefault(require("tmp"));
var core_js_builder_1 = __importDefault(require("core-js-builder"));
var path_1 = __importDefault(require("path"));
/**
 * @param options
 * @returns True if the requested polyfills(bundle) is generated and should be taken.
 * False if no polyfill is necessary, the bundle file is not generated as well.
 */
function buildPolyfills(options) {
    return __awaiter(this, void 0, void 0, function () {
        var entries, coreJsTempDir, coreJsOutFile, coreJsOptions, err_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    entries = [];
                    if (!(options.coreJs === true || typeof options.coreJs === 'object')) return [3 /*break*/, 5];
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            tmp_1.default.dir({}, function (error, name) {
                                if (error) {
                                    reject(error);
                                }
                                else {
                                    resolve(name);
                                }
                            });
                        })];
                case 1:
                    coreJsTempDir = _a.sent();
                    coreJsOutFile = path_1.default.join(coreJsTempDir, 'core-js.js');
                    coreJsOptions = Object.assign({}, options.coreJs === true ? buildPolyfills.defaultCoreJsOptions : options.coreJs, { filename: coreJsOutFile });
                    _a.label = 2;
                case 2:
                    _a.trys.push([2, 4, , 5]);
                    return [4 /*yield*/, core_js_builder_1.default(coreJsOptions)];
                case 3:
                    _a.sent();
                    entries.push(coreJsOutFile);
                    return [3 /*break*/, 5];
                case 4:
                    err_1 = _a.sent();
                    console.debug("Caught exception during build core-js: " + err_1 + "\n" +
                        "This may indicates the core-js polyfill is not necessary. " +
                        "See https://github.com/zloirock/core-js/issues/822");
                    return [3 /*break*/, 5];
                case 5:
                    if (options.asyncFunctions) {
                        entries.push(require.resolve(require.resolve('regenerator-runtime/runtime')));
                    }
                    // Fetch polyfills
                    if (options.fetch) {
                        entries.push(require.resolve('whatwg-fetch'));
                    }
                    if (entries.length === 0) {
                        return [2 /*return*/, false];
                    }
                    return [4 /*yield*/, bundle(entries, options.file, options)];
                case 6:
                    _a.sent();
                    return [2 /*return*/, true];
            }
        });
    });
}
function bundle(entries, outFile, options) {
    return __awaiter(this, void 0, void 0, function () {
        var rollupPlugins, rollupOptions, rollupBuild, rollupOutputOptions;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    rollupPlugins = [
                        plugin_multi_entry_1.default({ exports: false }),
                        plugin_commonjs_1.default(),
                        plugin_node_resolve_1.default(),
                        plugin_babel_1.default({
                            babelHelpers: 'bundled',
                            inputSourceMap: true,
                            sourceMaps: 'inline',
                            plugins: [],
                        }),
                    ];
                    if (options.sourceMap) {
                        rollupPlugins.push(rollup_plugin_sourcemaps_1.default());
                    }
                    if (!options.debug) {
                        rollupPlugins.push(rollup_plugin_terser_1.terser(
                        // TODO
                        ));
                    }
                    rollupOptions = {
                        input: entries,
                        plugins: rollupPlugins,
                    };
                    return [4 /*yield*/, rollup_1.rollup(rollupOptions)];
                case 1:
                    rollupBuild = _a.sent();
                    rollupOutputOptions = {
                        format: 'umd',
                        name: 'ccEnvBundle',
                        file: outFile,
                    };
                    if (options.sourceMap) {
                        rollupOutputOptions.sourcemap = true;
                    }
                    return [4 /*yield*/, rollupBuild.write(rollupOutputOptions)];
                case 2:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
(function (buildPolyfills) {
    buildPolyfills.defaultCoreJsOptions = {
        modules: ['es'],
        blacklist: [],
        targets: '> 0.5%',
    };
})(buildPolyfills || (buildPolyfills = {}));
exports.default = buildPolyfills;
//# sourceMappingURL=index.js.map