"use strict";var __awaiter=this&&this.__awaiter||function(e,n,s,t){return new(s||(s=Promise))(function(r,c){function o(e){try{i(t.next(e))}catch(e){c(e)}}function a(e){try{i(t.throw(e))}catch(e){c(e)}}function i(e){var n;e.done?r(e.value):(n=e.value,n instanceof s?n:new s(function(e){e(n)})).then(o,a)}i((t=t.apply(e,n||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.removeListener=exports.emit=exports.once=exports.on=exports.sync=exports.removeSyncTask=exports.hasSyncTask=exports.updateSyncTask=exports.addSyncTask=void 0;const ipc=require("@base/electron-base-ipc"),events_1=require("events"),emmitter=new events_1.EventEmitter,syncTasks=[],syncTaskMap={};let syncTaskTimer=null,syncRendererMaskAfterRemoveTimer=null,syncRendererMaskAfterRemoveTimeout=300;function _syncRendererMask(){const e=syncTasks[syncTasks.length-1];e?ipc.broadcast("editor-lib-task:show",e.title,e.describe,e.message):ipc.broadcast("editor-lib-task:show",null)}function syncRendererMask(){null===syncTaskTimer&&(_syncRendererMask(),syncTaskTimer=null)}function addSyncTask(e,n,s){let t=syncTaskMap[e];t||(t={title:e,describe:n,message:s},syncTaskMap[e]=t,syncTasks.push(t),syncRendererMask())}function updateSyncTask(e,n,s){let t=syncTaskMap[e];t&&(t.describe=n,t.message=s,syncRendererMask())}function hasSyncTask(){return __awaiter(this,void 0,void 0,function*(){return!!syncTasks.length})}function removeSyncTask(e){const n=syncTaskMap[e];if(!n)return;const s=syncTasks.indexOf(n);-1!==s&&syncTasks.splice(s,1),delete syncTaskMap[e],clearTimeout(syncRendererMaskAfterRemoveTimer),syncRendererMaskAfterRemoveTimer=setTimeout(syncRendererMask,syncRendererMaskAfterRemoveTimeout)}function sync(){}function on(e,n){return emmitter.on(e,n)}function once(e,n){return emmitter.once(e,n)}function emit(e,...n){return emmitter.emit(e,...n)}function removeListener(e,n){return emmitter.removeListener(e,n)}exports.addSyncTask=addSyncTask,exports.updateSyncTask=updateSyncTask,exports.hasSyncTask=hasSyncTask,exports.removeSyncTask=removeSyncTask,exports.sync=sync,exports.on=on,exports.once=once,exports.emit=emit,exports.removeListener=removeListener,ipc.on("editor-lib-task:query",e=>{const n=syncTasks[0];n?e.reply(null,n.title,n.describe,n.message):e.reply(null,"")}),ipc.on("editor-lib-task:call-protected",(e,n,...s)=>__awaiter(void 0,void 0,void 0,function*(){try{const t=yield exports[n](...s);return e.reply(null,t),t}catch(n){e.reply(n)}return null}));