"use strict";var __awaiter=this&&this.__awaiter||function(e,t,s,a){return new(s||(s=Promise))(function(r,o){function n(e){try{c(a.next(e))}catch(e){o(e)}}function i(e){try{c(a.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof s?t:new s(function(e){e(t)})).then(n,i)}c((a=a.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.removeBroadcastListener=exports.addBroadcastListener=exports.broadcast=exports.send=exports.request=exports.__unregister__=exports.__register__=exports.__eb__=void 0;const electron_1=require("electron"),events_1=require("events"),ipc=require("@base/electron-base-ipc"),packageManager=require("@editor/package"),panelManager=require("@editor/panel");exports.__eb__=new events_1.EventEmitter;const messageMap={},broadcastWindowMap={},broadcastListenerMap={};function __register__(e,t){for(const s in t){const a=t[s];a.methods?Array.isArray(a.methods)||(console.warn(`Invalid message definition: ${e}(${s}) 'methods' must be an array`),t[s].methods=[]):t[s].methods=[]}messageMap[e]=t}function __unregister__(e){delete messageMap[e]}function request(e,t,...s){return __awaiter(this,void 0,void 0,function*(){const a={name:e,message:t,args:s};if(exports.__eb__.emit("request",a),!messageMap[e]||!messageMap[e][t])throw new Error(`Message does not exist: ${e} - ${t}`);const r=messageMap[e][t];if(!r.methods.length)throw new Error(`No methods specified for current message: ${e} - ${t}`);for(let a=0;a<r.methods.length-1;a++){const o=r.methods[a].split(".");1===o.length?packageManager.exec(e,t,...s):panelManager.exec(e+"."+o[0],o[1],...s)}const o=r.methods[r.methods.length-1].split(".");return new Promise((r,n)=>{1===o.length?packageManager.exec(e,o[0],...s).callback((s,o)=>{if(s)return s.stack=`${s.stack}\n    (Target: ${e}, Message: ${t})`,n(s);exports.__eb__.emit("reply",a),r(o)}):panelManager.exec("default"===o[0]?e:e+"."+o[0],o[1],...s).then(e=>{exports.__eb__.emit("reply",a),r(e)}).catch(e=>{exports.__eb__.emit("reply",a),n(e)})})})}function send(e,t,...s){if(exports.__eb__.emit("send",{name:e,message:t,args:s}),!messageMap[e]||!messageMap[e][t])throw new Error(`Message does not exist: ${e} - ${t}`);messageMap[e][t].methods.forEach(t=>{const a=t.split(".");1===a.length?packageManager.execWithoutReply(e,t,...s):panelManager.execWithoutReply("default"===a[0]?e:e+"."+a[0],a[1],...s)})}function broadcast(e,...t){exports.__eb__.emit("broadcast",{message:e,args:t});for(const s in messageMap){if(!messageMap[s][e])continue;const a=messageMap[s][e];a.methods&&a.methods.forEach(e=>{const a=e.split(".");if(1===a.length)packageManager.execWithoutReply(s,e,...t);else{const e="default"===a[0]?s:s+"."+a[0];(panelManager.getWindow(e)||[]).length>0&&panelManager.execWithoutReply(e,a[1],...t)}})}if(broadcastWindowMap[e]){const s=broadcastWindowMap[e];for(let a=0;a<s.length;a++){const r=s[a],o=electron_1.webContents.fromId(r);o?ipc.sendToWin(electron_1.BrowserWindow.fromWebContents(o),"editor-lib-message:emit-broadcast-listener",e,...t):(s.splice(a,1),a--)}}if(broadcastListenerMap[e]){const s=broadcastListenerMap[e];for(const e of[...s])try{e(...t)}catch(e){console.error(e)}}}function addBroadcastListener(e,t){var s;broadcastListenerMap[e]=null!==(s=broadcastListenerMap[e])&&void 0!==s?s:[],broadcastListenerMap[e].push(t)}function removeBroadcastListener(e,t){if(broadcastListenerMap[e]){const s=broadcastListenerMap[e].indexOf(t);-1!==s&&broadcastListenerMap[e].splice(s,1)}}exports.__register__=__register__,exports.__unregister__=__unregister__,exports.request=request,exports.send=send,exports.broadcast=broadcast,exports.addBroadcastListener=addBroadcastListener,exports.removeBroadcastListener=removeBroadcastListener,ipc.on("editor-lib-message:call",(e,t,...s)=>__awaiter(void 0,void 0,void 0,function*(){if(module.exports[t])try{const a=yield module.exports[t](...s);e.reply(null,a)}catch(t){e.reply(t,null)}})),ipc.on("editor-lib-message:add-broadcast-listener",(e,t)=>__awaiter(void 0,void 0,void 0,function*(){const s=e.sender.id;broadcastWindowMap[t]=broadcastWindowMap[t]||[],broadcastWindowMap[t].includes(s)||broadcastWindowMap[t].push(s)})),ipc.on("editor-lib-message:remove-broadcast-listener",(e,t)=>__awaiter(void 0,void 0,void 0,function*(){const s=e.sender.id;if(broadcastWindowMap[t]){const e=broadcastWindowMap[t].indexOf(s);-1!==e&&broadcastWindowMap[t].splice(e,1)}}));