"use strict";var __awaiter=this&&this.__awaiter||function(e,r,t,s){return new(t||(t=Promise))(function(a,o){function i(e){try{c(s.next(e))}catch(e){o(e)}}function n(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var r;e.done?a(e.value):(r=e.value,r instanceof t?r:new t(function(e){e(r)})).then(i,n)}c((s=s.apply(e,r||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.__eb__=exports.__unregister__=exports.__register__=exports.removeBroadcastListener=exports.addBroadcastListener=exports.broadcast=exports.send=exports.request=void 0;const ipc=require("@base/electron-base-ipc"),broadcastListenerMap={};function request(e,r,...t){return __awaiter(this,void 0,void 0,function*(){return new Promise((s,a)=>{ipc.send("editor-lib-message:call","request",e,r,...t).callback((e,r)=>e?a(e):s(r))})})}function send(e,r,...t){ipc.send("editor-lib-message:call","send",e,r,...t)}function broadcast(e,...r){ipc.send("editor-lib-message:call","broadcast",e,...r)}function addBroadcastListener(e,r){var t;ipc.send("editor-lib-message:add-broadcast-listener",e),broadcastListenerMap[e]=null!==(t=broadcastListenerMap[e])&&void 0!==t?t:[],broadcastListenerMap[e].push(r)}function removeBroadcastListener(e,r){if(broadcastListenerMap[e]){const t=broadcastListenerMap[e].indexOf(r);-1!==t&&(broadcastListenerMap[e].splice(t,1),0===broadcastListenerMap[e].length&&ipc.send("editor-lib-message:remove-broadcast-listener",e))}}function __register__(){console.warn("Please ise it(__register__) in the browser process")}function __unregister__(){console.warn("Please ise it(__unregister__) in the browser process")}exports.request=request,exports.send=send,exports.broadcast=broadcast,exports.addBroadcastListener=addBroadcastListener,exports.removeBroadcastListener=removeBroadcastListener,exports.__register__=__register__,exports.__unregister__=__unregister__,exports.__eb__=void 0,ipc.on("editor-lib-message:emit-broadcast-listener",(e,r,...t)=>__awaiter(void 0,void 0,void 0,function*(){if(broadcastListenerMap[r]){const e=broadcastListenerMap[r];for(const r of e)try{r(...t)}catch(e){console.error(e)}}else ipc.send("editor-lib-message:remove-broadcast-listener",r)}));