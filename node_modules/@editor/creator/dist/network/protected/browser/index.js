"use strict";var __awaiter=this&&this.__awaiter||function(t,e,r,o){return new(r||(r=Promise))(function(n,i){function s(t){try{c(o.next(t))}catch(t){i(t)}}function u(t){try{c(o.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r(function(t){t(e)})).then(s,u)}c((o=o.apply(t,e||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.post=exports.get=exports.testHost=exports.getFreePort=exports.portIsOccupied=exports.testConnectServer=exports.queryIPList=void 0;const ipc=require("@base/electron-base-ipc"),ping=require("ping"),util_1=require("./util");function queryIPList(){const t=(0,util_1.queryIpList)();return t.splice(0,0,"127.0.0.1"),t}function testConnectServer(){return(0,util_1.canConnectPassport)()}function portIsOccupied(t){return(0,util_1.portIsOccupied)(t)}function getFreePort(t=4e3){return __awaiter(this,void 0,void 0,function*(){for(;t<9e3&&(yield portIsOccupied(t));t++);return t})}function testHost(t){return __awaiter(this,void 0,void 0,function*(){return new Promise(e=>{ping.sys.probe(t,function(t){return __awaiter(this,void 0,void 0,function*(){e(t)})})})})}function get(t,e){return __awaiter(this,void 0,void 0,function*(){return yield(0,util_1.sendGetRequest)(t,e)})}function post(t,e){return __awaiter(this,void 0,void 0,function*(){return yield(0,util_1.sendPostRequest)(t,e)})}exports.queryIPList=queryIPList,exports.testConnectServer=testConnectServer,exports.portIsOccupied=portIsOccupied,exports.getFreePort=getFreePort,exports.testHost=testHost,exports.get=get,exports.post=post,ipc.on("editor-lib-network:call",(t,e,...r)=>__awaiter(void 0,void 0,void 0,function*(){try{const o=yield module.exports[e](...r);return t.reply(null,o),o}catch(e){return t.reply(e),null}}));