"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.code=void 0;const fs_extra_1=require("fs-extra"),path_1=require("path"),crypto_1=require("crypto"),os_1=require("os"),md5=require("md5");exports.code={ok:0,not_add:461,no_permission:462,license_expired:463};class Utils{static getMessage(e){switch(e){case 0:return"成功";case 461:return"账号尚未加入公司";case 462:return"账号无权限";case 463:return"证书权限到期"}}static readCacheLicense(e){return(0,fs_extra_1.readJSONSync)(Utils.getCacheLicensePath(e))}static saveCacheLicense(e,t){const r=this.getCacheLicensePath(e);(0,fs_extra_1.ensureDirSync)((0,path_1.dirname)(r)),(0,fs_extra_1.writeJSONSync)(r,{l:t.license,m:t.license_mark,i:this.getMID()})}static getCacheLicensePath(e){return(0,path_1.join)(Editor.App.home,"licenses",`creator_${e.toLowerCase()}`)}static getPubKeyByName(e){return(0,fs_extra_1.readFileSync)((0,path_1.join)(__dirname,"../../../../static/license/rsa",`license_rsa_${e}.pub`),"utf8")}static convertToPublicEncrypt(e,t){const r=Utils.getPubKeyByName(e);return(0,crypto_1.publicEncrypt)(r,Buffer.from(t)).toString("base64")}static convertToPublicDecrypt(e,t,r){const s=Utils.getPubKeyByName(e),c=r?t.split(r):[t];let i="";for(let e=0;e<c.length;++e)i+=(0,crypto_1.publicDecrypt)(s,Buffer.from(c[e],"base64")).toString("utf8");return JSON.parse(i)}static getMID(){let e="",t=(0,os_1.networkInterfaces)(),r=!1;for(const s in t){let c=t[s];for(let t=0;t<c.length;++t){let s=c[t];if(!s.internal&&s.mac){e=md5(s.mac),r=!0;break}}if(r)break}return r||(e=md5("00:00:00:00:00:00")),e}static newError(e){return new Error(JSON.stringify(e))}}exports.default=Utils;