"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.removeListener=exports.emit=exports.once=exports.on=exports.record=exports.query=exports.clear=void 0;const os_1=require("os"),events_1=require("events"),fse=require("fs-extra"),ps=require("path"),Stream=require("stream"),utils=require("./utils"),ipc=require("@base/electron-base-ipc"),v_stacks_1=require("v-stacks"),setting=require("@editor/setting"),logger=require("@base/electron-logger");logger.setLogHandler(e=>{if(e.message="[Editor] "+e.message,("warn"===e.type||"error"===e.type)&&0===e.stack.length){const r=new Error("Unknown warning");e.stack=(0,v_stacks_1.ignoreStack)(r.stack,3)}});const data={},emitter=new events_1.EventEmitter;function clear(e){logger.clear&&logger.clear(e)}function query(){return logger.query()}function record(e){const r=utils.formatLog({message:e+"",type:"verbose",time:Date.now()})+os_1.EOL;this._readStream&&this._readStream.push(r)}function on(e,r){return emitter.on(e,r)}function once(e,r){return emitter.once(e,r)}function emit(e,...r){return emitter.emit(e,...r)}function removeListener(e,r){return emitter.removeListener(e,r)}(()=>{if(setting.PATH.PROJECT){data.dirname=ps.join(setting.PATH.PROJECT,"./temp/logs"),fse.ensureDirSync(data.dirname),data.file=ps.join(data.dirname,"project.log"),fse.existsSync(data.file)&&fse.removeSync(data.file);const e=fse.createWriteStream(data.file,{flags:"a"});data._readStream=new Stream.Readable({read(){}}),data._readStream.pipe(e,{end:!1})}})(),exports.clear=clear,exports.query=query,exports.record=record,exports.on=on,exports.once=once,exports.emit=emit,exports.removeListener=removeListener;const cyptoDeprecated=/crypto\.createDecipher is deprecated\.$/;logger.setLogHandler(e=>!cyptoDeprecated.test(e.message)),logger.on("record",e=>{emit("record",e);const r=utils.formatLog(e)+os_1.EOL;data._readStream&&data._readStream.push(r)}),logger.on("clear",(e,r)=>{emit("clear",r)}),ipc.on("editor-lib-logger:call",(e,r,t=[])=>{if(!exports[r])return;const o=exports[r](...t);e.reply(null,o)}),process.on("unhandledRejection",e=>{console.error(e)});