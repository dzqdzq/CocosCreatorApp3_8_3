"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.removeListener=exports.emit=exports.once=exports.on=exports.record=exports.query=exports.starup=exports.clear=void 0;const events_1=require("events"),v_stacks_1=require("v-stacks"),ipc=require("@base/electron-base-ipc"),logger=require("@base/electron-logger");logger.setLogHandler(e=>{if(e.message="[Window] "+e.message,!("warn"!==e.type&&"error"!==e.type||e.stack&&0!==e.stack.length)){const r=new Error(e.message);e.stack=(0,v_stacks_1.ignoreStack)(r.stack,3)}});const emitter=new events_1.EventEmitter;function clear(e){ipc.send("editor-lib-logger:call","clear",[e])}function starup(){ipc.send("editor-lib-logger:call","starup")}function query(){return logger.query()}function record(e){ipc.send("editor-lib-logger:call","record",e)}function on(e,r){return emitter.on(e,r)}function once(e,r){return emitter.once(e,r)}function emit(e,...r){return emitter.emit(e,...r)}function removeListener(e,r){return emitter.removeListener(e,r)}exports.clear=clear,exports.starup=starup,exports.query=query,exports.record=record,exports.on=on,exports.once=once,exports.emit=emit,exports.removeListener=removeListener,logger.on("record",e=>{emit("record",e)}),logger.on("clear",()=>{emit("clear")}),window.addEventListener("unhandledrejection",e=>{console.error(e.reason)});