"use strict";var __awaiter=this&&this.__awaiter||function(t,e,r,o){return new(r||(r=Promise))(function(n,s){function c(t){try{a(o.next(t))}catch(t){s(t)}}function i(t){try{a(o.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r(function(t){t(e)})).then(c,i)}a((o=o.apply(t,e||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports._trackCrashEvent=exports.trackTimeEnd=exports.trackTimeStart=exports.trackProcessMemory=exports.trackException=exports.trackProcessMemoryEnd=exports.trackProcessMemoryStart=exports._sendEventGroup=exports._trackEventWithTimer=exports.trackEvent=exports.close=exports.getTrackAwaitHandler=exports.getProcessMemoryMap=exports.getTrackTimeStartMap=exports.getTrackInfoList=exports.setMetricInitData=exports.getMetricInitData=exports.reset=exports.register=void 0;const ipc=require("@base/electron-base-ipc");function register(){throw new Error("Renderer is not supported")}function reset(){throw new Error("Renderer is not supported")}function getMetricInitData(){throw new Error("Renderer is not supported")}function setMetricInitData(t){throw new Error("Renderer is not supported")}function getTrackInfoList(){throw new Error("Renderer is not supported")}function getTrackTimeStartMap(){throw new Error("Renderer is not supported")}function getProcessMemoryMap(){throw new Error("Renderer is not supported")}function getTrackAwaitHandler(){throw new Error("Renderer is not supported")}function close(){return __awaiter(this,void 0,void 0,function*(){throw new Error("Renderer is not supported")})}function trackEvent(t){return ipc.send("metrics:track-event",t)}function _trackEventWithTimer(t){return ipc.send("metrics:track-event-with-timer",t)}function _sendEventGroup(){return ipc.send("metrics:send-event-group")}function trackProcessMemoryStart(t,e){ipc.send("metrics:track-process-memory-start",t,process.memoryUsage())}function trackProcessMemoryEnd(t,e){return new Promise(e=>{ipc.send("metrics:track-process-memory-end",t,process.memoryUsage()).callback((t,r)=>{e(r)})})}function trackException(t){return ipc.send("metrics:track-exception",t)}function trackProcessMemory(t,e){return ipc.send("metrics:track-process-memory",t,e)}function trackTimeStart(t){ipc.send("metrics:track-time-start",t,Date.now())}function trackTimeEnd(t,e={}){return __awaiter(this,void 0,void 0,function*(){return new Promise((r,o)=>{ipc.send("metrics:track-time-end",t,e,Date.now()).callback((n,s)=>{if(n)return o(n);if(!s||!e.output)return r(s),s;const c="string"==typeof e.label&&(Editor.I18n.t(e.label.replace("i18n:",""))||e.label)||t;return console.debug(c+` (${s}ms)`),r(s),s})})})}function _trackCrashEvent(t){return __awaiter(this,void 0,void 0,function*(){return new Promise((e,r)=>{ipc.send("metrics:track-crash-event",t).callback((t,o)=>{if(t)return r(t);e(o)})})})}exports.register=register,exports.reset=reset,exports.getMetricInitData=getMetricInitData,exports.setMetricInitData=setMetricInitData,exports.getTrackInfoList=getTrackInfoList,exports.getTrackTimeStartMap=getTrackTimeStartMap,exports.getProcessMemoryMap=getProcessMemoryMap,exports.getTrackAwaitHandler=getTrackAwaitHandler,exports.close=close,exports.trackEvent=trackEvent,exports._trackEventWithTimer=_trackEventWithTimer,exports._sendEventGroup=_sendEventGroup,exports.trackProcessMemoryStart=trackProcessMemoryStart,exports.trackProcessMemoryEnd=trackProcessMemoryEnd,exports.trackException=trackException,exports.trackProcessMemory=trackProcessMemory,exports.trackTimeStart=trackTimeStart,exports.trackTimeEnd=trackTimeEnd,exports._trackCrashEvent=_trackCrashEvent;