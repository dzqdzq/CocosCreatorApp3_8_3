"use strict";var __awaiter=this&&this.__awaiter||function(t,e,r,c){return new(r||(r=Promise))(function(a,n){function o(t){try{i(c.next(t))}catch(t){n(t)}}function s(t){try{i(c.throw(t))}catch(t){n(t)}}function i(t){var e;t.done?a(t.value):(e=t.value,e instanceof r?e:new r(function(t){t(e)})).then(o,s)}i((c=c.apply(t,e||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.trackProcessMemoryEnd=exports.trackProcessMemoryStart=exports._trackCrashEvent=exports._sendEventGroup=exports._trackEventWithTimer=exports.trackTimeEnd=exports.trackTimeStart=exports.trackProcessMemory=exports.trackException=exports.trackEvent=exports.close=exports.init=exports.reset=exports.register=exports.trackAwaitHandler=exports.getTrackAwaitHandler=exports.getProcessMemoryMap=exports.getTrackTimeStartMap=exports.getTrackInfoList=exports.setMetricInitData=exports.getMetricInitData=exports.trackProcessMemoryMap=exports.trackTimeStartMap=exports.trackHandler=exports.trackInfoList=exports.metricInitData=void 0;const ipc=require("@base/electron-base-ipc");function getMetricInitData(){return exports.metricInitData}function setMetricInitData(t){exports.metricInitData=t}function getTrackInfoList(){return exports.trackInfoList}function getTrackTimeStartMap(){return exports.trackTimeStartMap}function getProcessMemoryMap(){return exports.trackProcessMemoryMap}function getTrackAwaitHandler(){return exports.trackAwaitHandler}exports.trackInfoList=[],exports.trackHandler={},exports.trackTimeStartMap=new Map,exports.trackProcessMemoryMap=new Map,exports.getMetricInitData=getMetricInitData,exports.setMetricInitData=setMetricInitData,exports.getTrackInfoList=getTrackInfoList,exports.getTrackTimeStartMap=getTrackTimeStartMap,exports.getProcessMemoryMap=getProcessMemoryMap,exports.getTrackAwaitHandler=getTrackAwaitHandler,exports.trackAwaitHandler=[];let index=0;function addTrackInfo(t,e){const r=new Date,c=r.getTime(),a={index:index,funcName:t,date:r,time:c,info:e};return index++,exports.trackInfoList.push(a),a}function executeAsyncFunc(t){const e=exports.trackAwaitHandler.findIndex(e=>e.index===t),r=exports.trackAwaitHandler[e];r&&(r.resolve(r.defaultResult),exports.trackAwaitHandler.splice(e,1))}function register(t,e){exports.trackHandler[t]=e}function reset(){index=0,exports.trackInfoList.length=0;for(let t=0;t<exports.trackAwaitHandler.length;t++){const e=exports.trackAwaitHandler[t];e&&e.resolve(e.defaultResult)}}function init(t){return __awaiter(this,void 0,void 0,function*(){exports.metricInitData={outputMetricLog:t};const e=exports.trackHandler.init;e&&(yield e()),setInterval(()=>{const t=exports.trackHandler.clear;t&&t(),reset()},36e5)})}function close(){return __awaiter(this,void 0,void 0,function*(){const t=exports.trackHandler.close;return!!t&&(yield t())})}function trackEvent(t){const e=addTrackInfo("trackEvent",t);try{const t=exports.trackHandler.trackEvent;t&&t(e.index)}catch(t){}}function trackException(t){const e=addTrackInfo("trackException",t);try{const t=exports.trackHandler.trackException;t&&t(e.index)}catch(t){}}function trackProcessMemory(t,e){const r=addTrackInfo("trackProcessMemory",{process:t,memoryInfo:e});try{const t=exports.trackHandler.trackProcessMemory;t&&t(r.index)}catch(t){}}function trackTimeStart(t,e){exports.trackTimeStartMap.has(t)&&exports.trackTimeStartMap.delete(t),exports.trackTimeStartMap.set(t,e||Date.now());try{const t=exports.trackHandler.trackTimeStart;t&&t()}catch(t){}}function trackTimeEnd(t,e={},r){return __awaiter(this,void 0,void 0,function*(){return new Promise((c,a)=>{const n=addTrackInfo("trackTimeEnd",{message:t,options:e,time:r||new Date});try{const t=exports.trackHandler.trackTimeEnd;t?c(t(n.index)):(exports.trackAwaitHandler.push({index:n.index,resolve:c,reject:a,defaultResult:-1}),setTimeout(()=>{executeAsyncFunc(n.index)},5e3))}catch(t){c(-1)}})})}function _trackEventWithTimer(t){const e=addTrackInfo("_trackEventWithTimer",t);try{const t=exports.trackHandler._trackEventWithTimer;t&&t(e.index)}catch(t){}}function _sendEventGroup(){const t=addTrackInfo("_sendEventGroup");try{const e=exports.trackHandler._sendEventGroup;e&&e(t.index)}catch(t){}}function _trackCrashEvent(t){return __awaiter(this,void 0,void 0,function*(){return new Promise((e,r)=>__awaiter(this,void 0,void 0,function*(){const c=addTrackInfo("_trackCrashEvent",t);try{const t=exports.trackHandler._trackCrashEvent;t?e(yield t(c.index)):(exports.trackAwaitHandler.push({index:c.index,resolve:e,reject:r,defaultResult:null}),setTimeout(()=>{executeAsyncFunc(c.index)},5e3))}catch(t){return null}}))})}function trackProcessMemoryStart(t,e){try{exports.trackProcessMemoryMap.has(t)&&exports.trackProcessMemoryMap.delete(t);const r=e||process.memoryUsage();exports.trackProcessMemoryMap.set(t,r.heapUsed);const c=exports.trackHandler.trackProcessMemoryStart;c&&c()}catch(t){}}function trackProcessMemoryEnd(t,e){return new Promise((r,c)=>{try{const a=addTrackInfo("trackProcessMemoryEnd",{message:t,memory:e}),n=exports.trackHandler.trackProcessMemoryEnd;n?n(a.index).then(r):(exports.trackAwaitHandler.push({index:a.index,resolve:r,reject:c,defaultResult:-1}),setTimeout(()=>{executeAsyncFunc(a.index)},5e3))}catch(t){r(-1)}})}exports.register=register,exports.reset=reset,exports.init=init,exports.close=close,exports.trackEvent=trackEvent,exports.trackException=trackException,exports.trackProcessMemory=trackProcessMemory,exports.trackTimeStart=trackTimeStart,exports.trackTimeEnd=trackTimeEnd,exports._trackEventWithTimer=_trackEventWithTimer,exports._sendEventGroup=_sendEventGroup,exports._trackCrashEvent=_trackCrashEvent,exports.trackProcessMemoryStart=trackProcessMemoryStart,exports.trackProcessMemoryEnd=trackProcessMemoryEnd,ipc.on("metrics:track-event",(t,e)=>{trackEvent(e)}),ipc.on("metrics:track-event-with-timer",(t,e)=>{_trackEventWithTimer(e)}),ipc.on("metrics:track-exception",(t,e)=>{trackException(e)}),ipc.on("metrics:send-event-group",t=>{_sendEventGroup()}),ipc.on("metrics:track-crash-event",(t,e)=>__awaiter(void 0,void 0,void 0,function*(){try{t.reply(null,yield _trackCrashEvent(e))}catch(e){t.reply(e,null)}})),ipc.on("metrics:track-process-memory",(t,e,r)=>{trackProcessMemory(e,r)}),ipc.on("metrics:track-time-start",(t,e,r)=>{trackTimeStart(e,r)}),ipc.on("metrics:track-time-end",(t,e,r,c)=>__awaiter(void 0,void 0,void 0,function*(){try{r.output=!1;const a=yield trackTimeEnd(e,r,c);return t.reply(null,a),a}catch(e){t.reply(e,null)}})),ipc.on("metrics:track-process-memory-start",(t,e,r)=>__awaiter(void 0,void 0,void 0,function*(){trackProcessMemoryStart(e,r)})),ipc.on("metrics:track-process-memory-end",(t,e,r)=>__awaiter(void 0,void 0,void 0,function*(){try{const c=yield trackProcessMemoryEnd(e,r);t.reply(null,c)}catch(e){t.reply(e,-1)}}));