"use strict";var __awaiter=this&&this.__awaiter||function(e,t,r,o){return new(r||(r=Promise))(function(i,s){function n(e){try{f(o.next(e))}catch(e){s(e)}}function c(e){try{f(o.throw(e))}catch(e){s(e)}}function f(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r(function(e){e(t)})).then(n,c)}f((o=o.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.removeListener=exports.emit=exports.once=exports.on=exports.removeTemp=exports.setTemp=exports.getTemp=exports.removeProject=exports.setProject=exports.getProject=exports.removeConfig=exports.setConfig=exports.getConfig=exports.ensureProfiles=exports.profileMap=exports._registerMigration=exports.migrateProject=exports.migrateLocal=exports.migrateGlobal=void 0;const ps=require("path"),fse=require("fs-extra"),config_1=require("../public/config"),events_1=require("events"),semver=require("semver"),profile=require("@base/electron-profile"),setting=require("@editor/setting"),packageManager=require("@editor/package"),ipc=require("@base/electron-base-ipc"),emitter=new events_1.EventEmitter;var migration_1=require("./migration");function ensureProfiles(e){return exports.profileMap[e]?exports.profileMap[e]:exports.profileMap[e]={defaultPreferences:profile.load(`defaultPreferences://packages/${e}.json`),global:profile.load(`global://packages/${e}.json`),local:profile.load(`local://packages/${e}.json`),defaultProject:profile.load(`defaultProject://packages/${e}.json`),project:profile.load(`project://packages/${e}.json`),temp:profile.load(`temp://packages/${e}.json`)}}function getConfig(e,t,r){return __awaiter(this,void 0,void 0,function*(){const o=ensureProfiles(e),i=!r;if(r||(r="local"),"default"===r){return o.defaultPreferences.get(t)}const s=o[r];return s?s.get(t,{type:i?"deep":"current"}):null})}function setConfig(e,t,r,o="local"){return __awaiter(this,void 0,void 0,function*(){"object"==typeof r&&(r=JSON.parse(JSON.stringify(r)));const i=ensureProfiles(e);if("default"===o){return void(yield i.defaultPreferences.set(t,r))}const s=i[o];s&&(yield s.set(t,r),s.save())})}function removeConfig(e,t,r){return __awaiter(this,void 0,void 0,function*(){const o=ensureProfiles(e);r?"default"===r?yield o.defaultPreferences.remove(t):o[r]&&void 0!==(yield o[r].get(t))&&(yield o[r].remove(t),o[r].save()):(void 0!==(yield o.local.get(t))&&(yield o.local.remove(t),o.local.save()),void 0!==(yield o.global.get(t))&&(yield o.global.remove(t),o.global.save()))})}function getProject(e,t,r){return __awaiter(this,void 0,void 0,function*(){const o=ensureProfiles(e),i=!r;if(r||(r="project"),"default"===r)return o.defaultProject.get(t);const s=o[r];return s?s.get(t,{type:i?"deep":"current"}):null})}function setProject(e,t,r,o="project"){return __awaiter(this,void 0,void 0,function*(){"object"==typeof r&&(r=JSON.parse(JSON.stringify(r)));const i=ensureProfiles(e);if("default"===o)return void i.defaultProject.set(t,r);const s=i[o];s&&(yield s.set(t,r),s.save())})}function removeProject(e,t,r){return __awaiter(this,void 0,void 0,function*(){const o=ensureProfiles(e);r?"default"===r?yield o.defaultPreferences.remove(t):o[r]&&void 0!==(yield o[r].get(t))&&(yield o[r].remove(t),o[r].save()):void 0!==(yield o.project.get(t))&&(yield o.project.remove(t),o.project.save())})}function getTemp(e,t){return __awaiter(this,void 0,void 0,function*(){return ensureProfiles(e).temp.get(t)})}function setTemp(e,t,r){return __awaiter(this,void 0,void 0,function*(){"object"==typeof r&&(r=JSON.parse(JSON.stringify(r)));const o=ensureProfiles(e);o.temp.set(t,r),o.temp.save()})}function removeTemp(e,t){return __awaiter(this,void 0,void 0,function*(){const r=ensureProfiles(e);r.temp.remove(t),r.temp.save()})}function on(e,t){return emitter.on(e,t)}function once(e,t){return emitter.on(e,t)}function emit(e,...t){return emitter.emit(e,...t)}function removeListener(e,t){return emitter.removeListener(e,t)}function migrateFolder(e,t){if(!fse.existsSync(t))return;const r=fse.readdirSync(t).filter(e=>semver.valid(e)&&semver.lt(e,"3.0.1")).sort((e,t)=>semver.gt(e,t)?-1:1)[0];if(r)try{fse.copySync(ps.join(t,r),e)}catch(e){}else{try{fse.copySync(ps.join(t,"packages"),ps.join(e,"packages"))}catch(e){}try{fse.copySync(ps.join(t,"editor"),ps.join(e,"editor"))}catch(e){}}}if(Object.defineProperty(exports,"migrateGlobal",{enumerable:!0,get:function(){return migration_1.migrateGlobal}}),Object.defineProperty(exports,"migrateLocal",{enumerable:!0,get:function(){return migration_1.migrateLocal}}),Object.defineProperty(exports,"migrateProject",{enumerable:!0,get:function(){return migration_1.migrateProject}}),Object.defineProperty(exports,"_registerMigration",{enumerable:!0,get:function(){return migration_1._registerMigration}}),exports.profileMap={},exports.ensureProfiles=ensureProfiles,exports.getConfig=getConfig,exports.setConfig=setConfig,exports.removeConfig=removeConfig,exports.getProject=getProject,exports.setProject=setProject,exports.removeProject=removeProject,exports.getTemp=getTemp,exports.setTemp=setTemp,exports.removeTemp=removeTemp,exports.on=on,exports.once=once,exports.emit=emit,exports.removeListener=removeListener,profile.on("change",(...e)=>{emitter.emit("change",...e)}),ps.isAbsolute(setting.PATH.HOME)){const e=ps.join(setting.PATH.HOME,"./profiles",config_1.VERSION);if(fse.existsSync(e))try{if(0===fse.readdirSync(e).length){fse.removeSync(e),migrateFolder(e,ps.join(setting.PATH.HOME.replace(".CocosCreator",".CocosEditor3D"),"./profiles"))}}catch(e){}else{migrateFolder(e,ps.join(setting.PATH.HOME.replace(".CocosCreator",".CocosEditor3D"),"./profiles"))}const t=ps.join(e,"./default-profiles");fse.ensureDirSync(t),fse.emptyDirSync(t),profile.register("defaultPreferences",t),fse.ensureDirSync(e),profile.register("global",e),profile.inherit("global","defaultPreferences")}if(ps.isAbsolute(setting.PATH.PROJECT)){const e=ps.join(setting.PATH.PROJECT,"./profiles",config_1.VERSION);if(fse.ensureDirSync(e),ps.isAbsolute(setting.PATH.PROJECT)){if(fse.existsSync(e))try{if(0===fse.readdirSync(e).length){fse.removeSync(e),migrateFolder(e,ps.join(setting.PATH.PROJECT,"./profiles"))}}catch(e){}else{migrateFolder(e,ps.join(setting.PATH.PROJECT,"./profiles"))}fse.ensureDirSync(e),profile.register("local",e),profile.inherit("local","global")}}if(ps.isAbsolute(setting.PATH.PROJECT)){const e=ps.join(setting.PATH.PROJECT,"./settings",config_1.VERSION);if(fse.existsSync(e))try{if(0===fse.readdirSync(e).length){fse.removeSync(e),migrateFolder(e,ps.join(setting.PATH.PROJECT,"./settings"))}}catch(e){}else{migrateFolder(e,ps.join(setting.PATH.PROJECT,"./settings"))}const t=ps.join(e,"./default-profiles");fse.ensureDirSync(t),fse.emptyDirSync(t),profile.register("defaultProject",t),fse.ensureDirSync(e),profile.register("project",e),profile.inherit("project","defaultProject")}if(ps.isAbsolute(setting.PATH.PROJECT)){const e=ps.join(setting.PATH.PROJECT,"./temp/profiles");fse.existsSync(e)||fse.mkdirsSync(e),profile.register("temp",e)}ipc.on("editor3d-lib-profile:call",(e,t,...r)=>__awaiter(void 0,void 0,void 0,function*(){try{const o=yield module.exports[t](...r);return e.reply(null,o),o}catch(t){throw e.reply(t,null),t}}));