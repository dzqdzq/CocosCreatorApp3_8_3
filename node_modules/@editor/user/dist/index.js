"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.removeChildProcess=exports.addChildProcess=exports.removeListener=exports.once=exports.on=exports.getSessionCode=exports.getUserToken=exports.logout=exports.login=exports.isLoggedIn=exports.getData=exports.setData=exports.setClientInfo=exports.queryServerBaseURL=exports.setServerBaseURL=void 0;const{EventEmitter:EventEmitter}=require("events"),{network:network}=require("./utils");let serverBaseURL="";function queryServerURL(e){return new URL(e,queryServerBaseURL()).toString()}const clientInfo={id:-1,type:-1};function setServerBaseURL(e){serverBaseURL=e}function queryServerBaseURL(){return serverBaseURL||"https://creator-api.cocos.com"}function setClientInfo(e,n){clientInfo.id=e,clientInfo.type=n}exports.setServerBaseURL=setServerBaseURL,exports.queryServerBaseURL=queryServerBaseURL,exports.setClientInfo=setClientInfo;const info={session_id:"",session_key:"",cocos_uid:"",email:"",nickname:""},EventManager=new EventEmitter;function setData(e){info.session_id=e.session_id,info.session_key=e.session_key,info.cocos_uid=e.cocos_uid,info.email=e.email,info.nickname=e.nickname,EventManager.emit("info-update")}function getData(){return info}async function isLoggedIn(){if(!info.session_key)return!1;let e,n=queryServerURL("api/account/is_online");return 0===(e=await network.sendPostRequest(n,{session_key:info.session_key,client_type:clientInfo.type})).status&&(info.session_id=e.data.session_id,info.session_key=e.data.session_key,info.cocos_uid=e.data.cocos_uid,info.email=e.data.email,info.nickname=e.data.nickname,EventManager.emit("info-update"),!0)}async function login(e,n){let o,s=queryServerURL("api/account/signin");if(0!==(o=await network.sendPostRequest(s,{username:e,password:n,client_type:clientInfo.type})).status)throw new Error(o.status+": "+o.msg);return info.session_id=o.data.session_id,info.session_key=o.data.session_key,info.cocos_uid=o.data.cocos_uid,info.email=o.data.email,info.nickname=o.data.nickname,EventManager.emit("info-update"),EventManager.emit("login"),{nickname:info.nickname,email:info.email}}async function logout(){let e,n=queryServerURL("api/user/signout");if(0!==(e=await network.sendPostRequest(n,{session_id:info.session_id,client_type:clientInfo.type})).status)throw new Error(e.status+": "+e.msg);return info.session_id="",info.session_key="",info.cocos_uid="",info.email="",info.nickname="",EventManager.emit("info-update"),EventManager.emit("logout"),!0}async function getUserToken(){let e,n=queryServerURL("api/user/cocos_token");if(0!==(e=await network.sendPostRequest(n,{session_id:info.session_id,client_type:clientInfo.type})).status)throw new Error(e.status+": "+e.msg);return e.data}async function getSessionCode(e){let n,o=queryServerURL("api/session/code");if(0!==(n=await network.sendPostRequest(o,{session_id:info.session_id,plugin_id:e,client_type:clientInfo.type})).status)throw new Error(n.status+": "+n.msg);return n.data}function on(...e){EventManager.on(...e)}function once(...e){EventManager.once(...e)}function removeListener(...e){EventManager.removeListener(...e)}exports.setData=setData,exports.getData=getData,exports.isLoggedIn=isLoggedIn,exports.login=login,exports.logout=logout,exports.getUserToken=getUserToken,exports.getSessionCode=getSessionCode,exports.on=on,exports.once=once,exports.removeListener=removeListener;const children=[];function addChildProcess(e){-1===children.indexOf(e)&&(children.push(e),e.__handle=async function(n){if(!n||!n.channel||"cocos-user"!==n.channel)return;const o=module.exports[n.func];if(!o)return;let s;try{s=await o(...n.params||[])}catch(o){return void(e.connected&&e.send({channel:"cocos-user",id:n.id,error:o.message,result:null}))}e.connected&&e.send({channel:"cocos-user",id:n.id,error:null,result:s})},e.on("message",e.__handle))}function removeChildProcess(e){const n=children.indexOf(e);-1!==n&&(children.splice(n,1),e.removeListener("message",e.__handle))}if(exports.addChildProcess=addChildProcess,exports.removeChildProcess=removeChildProcess,EventManager.on("login",()=>{children.forEach(e=>{e.connected&&e.send({channel:"cocos-user",emit:"login",result:[]})})}),EventManager.on("logout",()=>{children.forEach(e=>{e.connected&&e.send({channel:"cocos-user",emit:"logout",result:[]})})}),EventManager.on("info-update",()=>{children.forEach(e=>{e.connected&&e.send({channel:"cocos-user",emit:"info-update",result:[]})})}),"browser"===process.type){const e=require("@base/electron-base-ipc");e.on("cocos-user",async(e,n,o)=>{const s=module.exports[n];if(!s)return;let t;try{t=await s(...o||[])}catch(n){return void e.reply(n,null)}e.reply(null,t)}),EventManager.on("login",()=>{e.broadcast("cocos-user-emit","login")}),EventManager.on("logout",()=>{e.broadcast("cocos-user-emit","logout")}),EventManager.on("info-update",()=>{e.broadcast("cocos-user-emit","info-update")})}