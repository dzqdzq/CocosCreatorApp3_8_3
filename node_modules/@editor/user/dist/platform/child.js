"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.removeListener=exports.once=exports.on=exports.emit=exports.getSessionCode=exports.getUserToken=exports.logout=exports.login=exports.isLoggedIn=exports.getData=exports.queryServerBaseURL=exports.setServerBaseURL=void 0;const{EventEmitter:EventEmitter}=require("events"),EventManager=new EventEmitter;let sendID=1;const sendMap={};async function setServerBaseURL(e){return new Promise((s,n)=>{sendMap[sendID]={resolve:s,reject:n},process.send&&process.send({channel:"cocos-user",id:sendID++,func:"setServerBaseURL",params:[e]})})}async function queryServerBaseURL(){return new Promise((e,s)=>{sendMap[sendID]={resolve:e,reject:s},process.send&&process.send({channel:"cocos-user",id:sendID++,func:"queryServerBaseURL",params:[]})})}async function getData(){return new Promise((e,s)=>{sendMap[sendID]={resolve:e,reject:s},process.send&&process.send({channel:"cocos-user",id:sendID++,func:"getData",params:[]})})}async function isLoggedIn(){return new Promise((e,s)=>{sendMap[sendID]={resolve:e,reject:s},process.send&&process.send({channel:"cocos-user",id:sendID++,func:"isLoggedIn",params:[]})})}function login(e,s){return new Promise((n,r)=>{sendMap[sendID]={resolve:n,reject:r},process.send&&process.send({channel:"cocos-user",id:sendID++,func:"login",params:[e,s]})})}function logout(){return new Promise((e,s)=>{sendMap[sendID]={resolve:e,reject:s},process.send&&process.send({channel:"cocos-user",id:sendID++,func:"logout",params:[]})})}function getUserToken(){return new Promise((e,s)=>{sendMap[sendID]={resolve:e,reject:s},process.send&&process.send({channel:"cocos-user",id:sendID++,func:"getUserToken",params:[]})})}function getSessionCode(e){return new Promise((s,n)=>{sendMap[sendID]={resolve:s,reject:n},process.send&&process.send({channel:"cocos-user",id:sendID++,func:"getSessionCode",params:[e]})})}function emit(...e){EventManager.emit(...e)}function on(...e){EventManager.on(...e)}function once(...e){EventManager.once(...e)}function removeListener(...e){EventManager.removeListener(...e)}process.on("message",e=>{if(!e||!e.channel||"cocos-user"!==e.channel)return;if(e.emit)return void emit(e.emit,...e.result||[]);const s=sendMap[e.id];return s?(delete sendMap[e.id],e.error?s.reject(new Error(e.error)):s.resolve(e.result)):void 0}),exports.setServerBaseURL=setServerBaseURL,exports.queryServerBaseURL=queryServerBaseURL,exports.getData=getData,exports.isLoggedIn=isLoggedIn,exports.login=login,exports.logout=logout,exports.getUserToken=getUserToken,exports.getSessionCode=getSessionCode,exports.emit=emit,exports.on=on,exports.once=once,exports.removeListener=removeListener;