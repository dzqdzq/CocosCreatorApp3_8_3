
const babel = require('rollup-plugin-babel');
const commonjs = require('rollup-plugin-commonjs');
const resolve = require('rollup-plugin-node-resolve');
const { terser } = require('rollup-plugin-terser');

function getPlugins(uglified) {
    const plugins = [
        resolve({
            extensions: ['.js', '.ts', '.json'],
        }),

        commonjs({
            namedExports: {
            },
        }),

        babel({
            extensions: ['.js', '.ts'],
            highlightCode: true,
            ignore: [
            ],
            plugins: [
                '@babel/plugin-proposal-class-properties',
            ],
            presets: [
                '@babel/preset-env',
                '@babel/preset-typescript',
            ],
        }),
    ];
    if (uglified) {
        plugins.push(terser());
    }
    return plugins;
}

export default [{
    input: './src/index.ts',
    output: [
        {
            file: './dist/iife/cc-env.js',
            sourcemap: true,
            format: 'iife',
            name: 'ccEnv'
        },
        {
            file: './dist/cjs/cc-env.js',
            sourcemap: true,
            format: 'cjs',
        }
    ],
    plugins: getPlugins(false),
}, {
    input: './src/index.ts',
    output: [
        {
            file: './dist/iife/cc-env.min.js',
            sourcemap: true,
            format: 'iife',
            name: 'ccEnv'
        },
        {
            file: './dist/cjs/cc-env.min.js',
            sourcemap: true,
            format: 'cjs',
        }
    ],
    plugins: getPlugins(true),
}];