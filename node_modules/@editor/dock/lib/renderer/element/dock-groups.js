"use strict";const panel=require("@editor/panel"),utils=require("../../utils");class DockGroups extends window.HTMLElement{constructor(){super(),this.data={panels:[],active:"",isConnect:!1},this.$tabs=null,this.$panels=null,this.addEventListener("min-size-resize",t=>{t.minWidth&&(this.minWidth=t.minWidth),t.minHeight&&(this.minHeight=t.minHeight),utils.element.refresh(this)}),this._resizeFn=function(){Array.prototype.forEach.call(this.$panels.children,t=>{let e=document.createEvent("HTMLEvents");e.initEvent("resize",!1,!1),t.dispatchEvent(e)})}.bind(this),this.addEventListener("move",function(){Array.prototype.forEach.call(this.$panels.children,t=>{let e=document.createEvent("HTMLEvents");e.initEvent("move",!1,!1),t.dispatchEvent(e)})}),this.addEventListener("resize",this._resizeFn),this.addEventListener("focus",t=>{this._focused=!0,this._onFocus(t)}),this.addEventListener("blur",t=>{this._focused=!1,this._onBlur(t)}),this.addEventListener("panel-focus",t=>{this.active=t.target.name,this._focused=!0,this._onFocus(t)}),this.addEventListener("panel-blur",t=>{this._focused=!1,this._onBlur(t)}),this.addEventListener("click",()=>{this.$panels&&(this.$panels.active=this.active)})}get panels(){return this.data.panels}set panels(t){this.data.panels=t}get active(){return this.data.active}set active(t){this.data.active=t,this.$tabs&&(this.$tabs.active=t),this.$panels&&(this.$panels.active=t),this.data.isConnect&&utils.element.emit(this)}connectedCallback(){this.$tabs||(this.$tabs=document.createElement("dock-tabs"),this.appendChild(this.$tabs),this.$tabs.$groups=this),this.$tabs.active=this.data.active,this.setAttribute("tabindex","-1"),this.$panels?this.$panels.active=this.data.active:(this.$panels=document.createElement("dock-panels"),this.appendChild(this.$panels),this.$panels.active=this.data.active,this.$panels.panels=Array.prototype.concat(this.data.panels),this.$panels.$groups=this),this.data.isConnect=!0,window.removeEventListener("resize",this._resizeFn),window.addEventListener("resize",this._resizeFn)}disconnectedCallback(){this.data.isConnect=!1,window.removeEventListener("resize",this._resizeFn)}addPanel(t,e){(void 0===e||e<0||e>this.data.panels.length)&&(e=this.data.panels.length),-1===this.data.panels.indexOf(t)&&(this.data.panels.splice(e,0,t),this.$tabs&&this.$tabs.addTab(t,e),this.$panels&&this.$panels.addPanel(t,e))}async removePanel(t,e){const s=this.data.panels.indexOf(t);if(-1===s)return!1;if(this.$panels){if(!1===await this.$panels.removePanel(t,e))return!1;this.$tabs.removeTab(t)}this.data.panels.splice(s,1),this.data.isConnect&&utils.element.emit(this),this.active===t&&(this.active=this.data.panels[0]||""),this.$panels.removeLoadingPanel().forEach(t=>{const e=this.data.panels.indexOf(t);-1!==e&&this.data.panels.splice(e,1),this.active===t&&(this.active=this.data.panels[0]||"")}),""===this.active&&setTimeout(()=>{utils.element.refresh(this)},200)}_onFocus(t){t.preventDefault(),t.stopPropagation(),this.setAttribute("focused","")}_onBlur(t){t.preventDefault(),t.stopPropagation(),this._focused||this.removeAttribute("focused")}}module.exports=DockGroups;