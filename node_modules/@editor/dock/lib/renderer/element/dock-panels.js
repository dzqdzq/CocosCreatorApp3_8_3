"use strict";const panel=require("@editor/panel"),utils=require("../../utils"),{refresh:refresh}=require("../../utils/element");class DockPanels extends window.HTMLElement{get panels(){return this._panels}set panels(e){this._panels=e;for(let t=0;t<e.length;t++)this.addPanel(e[t])}get active(){return this._active}set active(e){const t=this._active!==e;this._active=e,refresh(this._active);let n=null;for(let t=0;t<this.children.length;t++){const i=this.children[t];i.name!==e?i.hidden=!0:n=i}n&&(n.hidden=!1,this._$active=n,null===n.getAttribute("focused")&&(n.focus(),t&&this.updateOptions()))}emit(e){const t=document.createEvent("HTMLEvents");t.initEvent("resize",!0,!1),this._$active.dispatchEvent(t)}constructor(){super(),this.addEventListener("dragover",e=>{if(!utils.drag.getDrag())return;e.preventDefault(),e.stopPropagation();let t=document.createEvent("HTMLEvents");t.pageX=e.pageX,t.pageY=e.pageY,t.initEvent("panel-area",!0,!1),this.dispatchEvent(t)},!0),this.addEventListener("drop",e=>{if(!utils.drag.getDrag())return;e.preventDefault(),e.stopPropagation();let t=document.createEvent("HTMLEvents");t.pageX=e.pageX,t.pageY=e.pageY,t.dataTransfer=e.dataTransfer,t.initEvent("panel-drop",!0,!1),this.dispatchEvent(t)},!0),this.addEventListener("dragleave",e=>{if(!utils.drag.getDrag())return;e.preventDefault(),e.stopPropagation();let t=document.createEvent("HTMLEvents");t.pageX=e.pageX,t.pageY=e.pageY,t.initEvent("panel-leave",!0,!1),this.dispatchEvent(t)},!0)}addPanel(e,t){const n=this.querySelectorAll("panel-frame");let i=n?Array.prototype.find.call(n,t=>t.name===e):null;const a=i&&i.userData.flags&&i.userData.flags.multiple;if(i&&!a){if(this.active===e){const e=document.createEvent("HTMLEvents");e.initEvent("hide",!1,!1),i.dispatchEvent(e);const t=document.createEvent("HTMLEvents");t.initEvent("show",!1,!1),i.dispatchEvent(t)}}else(i=document.createElement("panel-frame")).name=e;i.hidden=i.name!==this.active,i.addEventListener("load",e=>{this.updateOptions(),this.$groups.$tabs.addTab(e.target.getAttribute("name"))});let s=this.children;t>=s.length?this.appendChild(i):this.insertBefore(i,s[t])}async removePanel(e,t){let n=this.children;for(let i=0;i<n.length;i++){let a=n[i];if(a.name===e){if(!1===await a.close(t))return!1;a.parentElement===this&&this.removeChild(a)}}return this.updateOptions(),!0}removeLoadingPanel(){const e=[];let t=this.children;for(let n=0;n<t.length;n++){let i=t[n];i.isLoaded||(n--,e.push(i.name),i.parentElement===this&&this.removeChild(i))}return e}updateOptions(){let e=0,t=0;Array.prototype.forEach.call(this.children,n=>{if(n.hasAttribute("hidden"))return;const i=n.getData("size");e=i?Math.max(e,i["min-width"]||0):0,t=i?Math.max(t,i["min-height"]||0):0});let n=document.createEvent("HTMLEvents");n.initEvent("min-size-resize",!0,!0),n.minWidth=e,n.minHeight=t,this.dispatchEvent(n)}}module.exports=DockPanels;