"use strict";const panel=require("@editor/panel"),menu=require("@base/electron-menu"),utils=require("../../utils"),tabsHTML='\n<nav></nav>\n<div>\n    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">\n        <path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"></path>\n    </svg>\n</div>';let menuParser=null;const moreClick=function(e){const t=this.data.active,a=panel.queryInfo(t),n=e.currentTarget.parentElement.parentElement.parentElement;let i=[];Object.keys(parserMap).forEach(e=>{let s=parserMap[e](a);if(!s)return;let r=s.click;s.click=function(){r.call(n,t)},i.push(s)}),menu.popup({x:e.pageX,y:e.pageY,menu:i})};class DockTabs extends window.HTMLElement{static registerMenuParser(e){menuParser=e}constructor(){super(),this.$groups=null,this.data={panels:[],active:""},this.$nav=null,this.$more=null,this.addEventListener("dragover",e=>{utils.drag.tab(e,this.$nav.lastElementChild)}),this.addEventListener("dragleave",e=>{utils.drag.switchLine(!1)}),this.addEventListener("drop",e=>{e.preventDefault(),e.stopPropagation(),utils.drag.dropTab(e,this.$nav.lastElementChild)})}connectedCallback(){if(!this.$nav){this.innerHTML=tabsHTML,this.$nav=this.querySelector("nav"),this.$more=this.querySelector("svg");for(let e=0;e<this.data.panels.length;e++){let t=document.createElement("dock-tab");t.name=this.data.panels[e],t.active=t.name===this.active,t.$tabs=this,this.$nav.appendChild(t)}this.$more=this.querySelector("div > svg"),this.$more.addEventListener("click",async e=>{const t=this.data.active,a=e.currentTarget.parentElement.parentElement.parentElement,n=menuParser?await menuParser(a,t):[];menu.popup({x:e.pageX,y:e.pageY,menu:n})})}}disconnectedCallback(){}get panels(){return this.data.panels}set panels(e){for(let t=0;t<e.length;t++)this.addTab(e[t])}get active(){return this.data.active}set active(e){if(this.data.active=e,!this.$nav)return;let t=this.$nav.children;for(let a=0;a<t.length;a++){let n=t[a];n.active=n.name===e}}addTab(e,t){let a=this.data.panels;if((void 0===t||t>=a.length)&&(t=a.length),-1!==a.indexOf(e))return;if(a.splice(t,0,e),!this.$nav)return;let n=document.createElement("dock-tab");n.name=e,n.active=e===this.active,n.$tabs=this;let i=this.$nav.children;t>=i.length?this.$nav.appendChild(n):this.$nav.insertBefore(n,i[t])}removeTab(e){let t=this.data.panels,a=t.indexOf(e);if(-1===a)return;if(t.splice(a,1),!this.$nav)return;let n=this.$nav.children;for(let t=0;t<n.length;t++){let a=n[t];a.name===e&&this.$nav.removeChild(a)}}}module.exports=DockTabs;