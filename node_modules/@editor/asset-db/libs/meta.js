"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetaManager=exports.completionMeta=exports.copyMeta=void 0;const fs_extra_1=require("fs-extra"),node_uuid_1=require("node-uuid");function generateJSON(e){return JSON.parse(JSON.stringify(e))}function copyMeta(e,t){e.ver=t.ver||e.ver||"0.0.0",e.importer=t.importer||"*",e.imported=t.imported||!1,e.uuid=t.uuid||(0,node_uuid_1.v4)(),e.files=t.files||[],e.subMetas=e.subMetas||{},t.subMetas&&Object.keys(t.subMetas).forEach(a=>{const s=generateJSON(t.subMetas[a]);e.subMetas[a]?copyMeta(e.subMetas[a],s):e.subMetas[a]=s}),e.userData=generateJSON(t.userData||{}),e.displayName=t.displayName||"",e.id=t.id||"",e.name=t.name||""}function completionMeta(e){return"string"!=typeof e.ver?e.ver="0.0.0":e.ver=e.ver,"string"!=typeof e.importer?e.importer="*":e.importer=e.importer,"boolean"!=typeof e.imported?e.imported=!1:e.imported=e.imported,"string"!=typeof e.uuid||e.uuid.length<36?e.uuid=(0,node_uuid_1.v4)():e.uuid=e.uuid,Array.isArray(e.files)||(e.files=[]),"object"!=typeof e.subMetas?e.subMetas=Object.create(null):Object.keys(e.subMetas).forEach(t=>{completionMeta(e.subMetas[t])}),"object"!=typeof e.userData?e.userData=Object.create(null):e.userData=e.userData,"string"!=typeof e.displayName?e.displayName="":e.displayName=e.displayName,"string"!=typeof e.id?e.id="":e.id=e.id,"string"!=typeof e.name?e.name="":e.name=e.name,e}exports.copyMeta=copyMeta,exports.completionMeta=completionMeta;class MetaManager{constructor(e){this.path2meta={},this.console=e||console}destroy(){this.path2meta={}}read(e){let t,a;try{a=(0,fs_extra_1.readFileSync)(e,"utf8")}catch(t){return this.console.debug(`read meta file failed: ${e}`),!1}try{t=this.path2meta[e]?this.path2meta[e]:this.path2meta[e]={json:{},backup:"",EOL:"\n"};const s=JSON.parse(a);return t.backup=JSON.stringify(s),copyMeta(t.json,s),t.EOL=a&&/\r\n/.test(a)?"\r\n":"\n",!0}catch(t){this.console.warn(`Read meta in ${e} failed!`),this.console.warn(t)}this.path2meta[e]&&completionMeta(this.path2meta[e].json)}write(e){const t=this.path2meta[e];if(!t)return!1;delete t.json.displayName,delete t.json.id,delete t.json.name;const a=JSON.stringify(t.json);a===t.backup&&(0,fs_extra_1.existsSync)(e)||((0,fs_extra_1.outputJSONSync)(e,this.path2meta[e].json,{spaces:2,EOL:this.path2meta[e].EOL}),t.backup=a)}remove(e){delete this.path2meta[e];try{(0,fs_extra_1.removeSync)(e)}catch(t){console.debug(e)}}get(e){if(this.path2meta[e])return this.path2meta[e];if((0,fs_extra_1.existsSync)(e)&&(this.read(e),this.path2meta[e]))return this.path2meta[e];const t=completionMeta({});return this.path2meta[e]={json:t,backup:JSON.stringify(t),EOL:"\n"},this.write(e),this.path2meta[e]}move(e,t){if(this.path2meta[t]){const a=this.path2meta[t].json;this.path2meta[t].json=this.path2meta[e].json,copyMeta(this.path2meta[e].json,a)}else this.path2meta[t]=this.path2meta[e];delete this.path2meta[e]}}exports.MetaManager=MetaManager;