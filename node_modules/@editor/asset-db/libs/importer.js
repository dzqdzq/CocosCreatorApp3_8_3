"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DefaultImporter=exports.Importer=exports.ImporterManager=void 0;const path_1=require("path"),asset_1=require("./asset");class ImporterManager{constructor(e){this.extname2importer={},this.name2importer={},this.console=e||console}add(e,t){const r=new e;r instanceof Importer?"*"!==r.name&&this.name2importer[r.name]&&this.name2importer[r.name]!==r?this.console.warn(`The importer[${e.name}] is registered.`):(t&&t.forEach(e=>{e=e.toLowerCase(),-1===(this.extname2importer[e]=this.extname2importer[e]||[]).indexOf(r)&&(this.extname2importer[e].push(r),r.extnames.push(e))}),this.name2importer[r.name]=r):this.console.warn(`Cannot register the importer [${e.name}].`)}remove(e){const t=this.name2importer[e.name];return t.extnames.forEach(e=>{let r=this.extname2importer[e];if(!r)return!0;let i=r.indexOf(t);if(-1===i)return!0;r.splice(i,1)}),delete this.name2importer[e.name],!0}clear(){this.name2importer={},this.extname2importer={}}async find(e){if(e.meta.importer&&"*"!==e.meta.importer){const t=this.name2importer[e.meta.importer];if(e instanceof asset_1.Asset){if(t&&-1!==t.extnames.indexOf(e.extname)&&await t.validate(e))return t}else if(t&&await t.validate(e))return t}if(e instanceof asset_1.Asset){const t=this.extname2importer[e.extname]||[];for(let r=t.length-1;r>=0;r--)try{if(await t[r].validate(e))return t[r]}catch(t){this.console.error(`Importer validate failed: ${e.uuid}`),this.console.error(t)}}const t=this.extname2importer["*"];for(let r=t.length-1;r>=0;r--)try{if(await t[r].validate(e))return t[r]}catch(t){this.console.error(`Importer validate failed: ${e.uuid}`),this.console.error(t)}return null}}exports.ImporterManager=ImporterManager;class Importer{constructor(){this._name="*",this._version="0.0.1",this._versionCode=0,this._migrationHook={pre(){},post(){}},this._migrations=[],this.extnames=[],this.flag={}}get version(){return this._version}get versionCode(){return this._versionCode}get migrations(){return this._migrations}get migrationHook(){return this._migrationHook}get name(){return this._name}async validate(e){return!e.isDirectory()}async force(e){return!1}async import(e){if(!(e instanceof asset_1.Asset))return!0;let t=(0,path_1.extname)(e.source).toLowerCase();return await e.copyToLibrary(t,e.source),!0}}exports.Importer=Importer;class DefaultImporter extends Importer{async validate(e){return!0}async import(e){if(!(e instanceof asset_1.Asset))return!0;let t=(0,path_1.extname)(e.source);return!!await e.isDirectory()||(await e.copyToLibrary(t,e.source),!0)}}exports.DefaultImporter=DefaultImporter;