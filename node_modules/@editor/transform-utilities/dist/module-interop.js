"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const babel = __importStar(require("@babel/core"));
function makeVisitorOnModuleInteropASTs(fx) {
    return {
        ImportDeclaration: fx,
        ExportAllDeclaration: fx,
        ExportNamedDeclaration: fx,
    };
}
exports.makeVisitorOnModuleInteropASTs = makeVisitorOnModuleInteropASTs;
function makeVisitorOnModuleSpecifiers(fx) {
    return makeVisitorOnModuleInteropASTs((moduleInteropPath) => {
        if (moduleInteropPath.node.source) {
            return fx(moduleInteropPath.get('source'));
        }
    });
}
exports.makeVisitorOnModuleSpecifiers = makeVisitorOnModuleSpecifiers;
function getModuleSpecifiers(ast) {
    const dependencies = [];
    babel.traverse(ast, makeVisitorOnModuleInteropASTs((path) => {
        if (path.node.source) {
            dependencies.push(path.node.source.value);
        }
    }));
    return dependencies;
}
exports.getModuleSpecifiers = getModuleSpecifiers;
function mapModuleSpecifiers(map) {
    return {
        visitor: makeVisitorOnModuleInteropASTs((path) => {
            if (path.node.source) {
                const source = path.node.source.value;
                if (source in map) {
                    path.get('source').replaceWith(babel.types.stringLiteral(map[source]));
                }
            }
        }),
    };
}
exports.mapModuleSpecifiers = mapModuleSpecifiers;
//# sourceMappingURL=module-interop.js.map