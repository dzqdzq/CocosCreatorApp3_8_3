"use stirct";const{basename:basename}=require("path"),{EventEmitter:EventEmitter}=require("events"),vStacks=require("v-stacks"),ipc=require("@base/electron-base-ipc"),logger=require("@base/electron-logger"),pkg=require("../package.json"),ipcFlag=`${pkg.name}@${pkg.version}`,$files=document.getElementById("files");ipc.on(`${ipcFlag}:init`,(e,n)=>{window.__name__=n.name,logger.setLevel(2),logger.setLogHandler(e=>{if(e.message=`[${__name__}] ${e.message}`,("warn"===e.type||"error"===e.type)&&0===e.stack.length){const n=vStacks.encode(e.message,3);e.stack=e.message+"  \n"+n.stacks.join("  \n")}}),document.getElementById("name").innerHTML=n.name,document.title=`Worker - ${n.name}`,process.title=process.title.replace("(Renderer)",`(${n.name})`),n.files.forEach(e=>{require(e);const n=document.createElement("div");n.setAttribute("title",e),n.innerHTML=basename(e),$files.appendChild(n)})}),ipc.on(`${ipcFlag}:require`,(e,n)=>{require(n);const t=document.createElement("div");t.setAttribute("title",n),t.innerHTML=basename(n),$files.appendChild(t)});class Ipc extends EventEmitter{send(e,...n){return ipc.send(`${ipcFlag}:message`,window.__name__,e,n)}}window.Worker={Ipc:new Ipc,log:console.log.bind(console)},ipc.on(`${ipcFlag}:message`,(e,n,t)=>{window.Worker.Ipc.emit(n,e,...t)}),ipc.on(`${ipcFlag}:require`,(e,n)=>{require(n)});