"use strict";const{EventEmitter:EventEmitter}=require("events"),vMessage=require("v-message"),ipc=require("@base/electron-base-ipc"),pkg=require("../package.json"),ipcFlag=`${pkg.name}@${pkg.version}`;class I18n extends EventEmitter{constructor(){super(),this._lang="en",this._message=new vMessage}switch(e="default"){this._lang=e,this._message.register(this._lang),this.emit("switch",e),ipc.broadcast(`${ipcFlag}:switch`,e)}register(e,s){s=s||this._lang,this._message.register(s),this._message.switch(s),this._message.append(e),ipc.broadcast(`${ipcFlag}:register`,e,s)}unregister(e,s){s=s||this._lang,this._message.switch(s),this._message.subtract(e),ipc.broadcast(`${ipcFlag}:unregister`,e,s)}append(e,s,t){this._message._map[t]||this.register({},t),this._message.switch(t),this._message.add(e,s),ipc.broadcast(`${ipcFlag}:append`,e,s,t)}translation(e,s){return s=s||this._lang,this._message.switch(s),this._message.query(e)}}const i18n=module.exports=new I18n;ipc.on(`${ipcFlag}:call`,(e,s,...t)=>e.returnValue=module.exports[s](...t)),ipc.on(`${ipcFlag}:info`,e=>({_lang:i18n._lang,_map:i18n._message._map,_current:i18n._message._current}));