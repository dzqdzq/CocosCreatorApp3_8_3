"use strict";const{EventEmitter:EventEmitter}=require("events"),vMessage=require("v-message"),ipc=require("@base/electron-base-ipc"),pkg=require("../package.json"),ipcFlag=`${pkg.name}@${pkg.version}`;class I18n extends EventEmitter{constructor(){super(),this.dirty=!1,this._message=new vMessage;const e=ipc.sendSync(`${ipcFlag}:info`);this._lang=e._lang,this._message._map=e._map,this._message._current=e._current}switch(e){ipc.send(`${ipcFlag}:call`,"switch",e)}register(e,s){s=s||this._lang,this._message.register(s),this._message.switch(s),this._message.append(e),ipc.send(`${ipcFlag}:call`,"register",e,s)}unregister(e,s){s=s||this._lang,this._message.switch(s),this._message.subtract(e),ipc.send(`${ipcFlag}:call`,"unregister",e,s)}append(e,s,i){this._message._map[i]||this.register({},i),this._message.switch(i),this._message.add(e,s),ipc.send(`${ipcFlag}:call`,"append",e,s,i)}translation(e,s){return s=s||this._lang,this._message.switch(s),this._message.query(e)}}const i18n=module.exports=new I18n;ipc.on(`${ipcFlag}:switch`,(e,s)=>{i18n._lang=s,i18n._message.register(i18n._lang),i18n.emit("switch",s)}),ipc.on(`${ipcFlag}:register`,(e,s,i)=>{i=i||i18n._lang,i18n._message.register(i),i18n._message.switch(i),i18n._message.append(s)}),ipc.on(`${ipcFlag}:append`,(e,s,i,t)=>{i18n._message.switch(t),i18n._message.add(s,i)}),ipc.on(`${ipcFlag}:unregister`,(e,s,i)=>{i=i||i18n._lang,i18n._message.switch(i),i18n._message.subtract(s)});