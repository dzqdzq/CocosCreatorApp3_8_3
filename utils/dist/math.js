"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.toFixed=exports.divide=exports.multi=exports.sub=exports.add=exports.clamp01=exports.clamp=void 0;const maxPreci=20;function clamp(t,e,o){return Math.min.call(null,Math.max.call(null,t,e),o)}function clamp01(t){return t<0?0:1<t?1:t}function add(t,e){var{maxPow:t,num1:e,num2:o}=_computeMaxPow(t=toValidNumber(t),e=toValidNumber(e));return(e+o)/t}function sub(t,e){var{maxPow:t,num1:e,num2:o}=_computeMaxPow(t=toValidNumber(t),e=toValidNumber(e));return(e-o)/t}function multi(t,e){var{maxPow:t,num1:e,num2:o}=_computeMaxPow(t=toValidNumber(t),e=toValidNumber(e));return e*o/t/t}function divide(t,e){var o;return t=toValidNumber(t),(e=toValidNumber(e))?({num1:e,num2:o}=_computeMaxPow(t,e),e/o):0<t?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY}function toValidNumber(t){if("number"!=typeof(t=Number(t))||Number.isNaN(t))throw new Error("Invalid params "+t);return t}function _computeMaxPow(t,e){let o;var t=toNonExponential(t),e=toNonExponential(e),r=_comPreci(t),a=_comPreci(e),u=(o=Math.max(r,a),Math.pow(10,o)),t=(20<o&&(o=20),Number(t.replace(".","")+Array(o-r).fill(0).join(""))),r=Number(e.replace(".","")+Array(o-a).fill(0).join(""));return{maxPow:u,maxPreci:o,num1:t,num2:r}}function toNonExponential(t){var e=t.toExponential().match(/\d(?:\.(\d*))?e([+-]\d+)/);return t.toFixed(Math.max(0,(e[1]||"").length-Number(e[2])))}function _comPreci(t){let e;try{e=t.split(".")[1].length}catch(t){e=0}return e}function toFixed(t,e){return parseFloat((Math.round(t*Math.pow(10,e))/Math.pow(10,e)).toFixed(e))}exports.clamp=clamp,exports.clamp01=clamp01,exports.add=add,exports.sub=sub,exports.multi=multi,exports.divide=divide,exports.toFixed=toFixed;